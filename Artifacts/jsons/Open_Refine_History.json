[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "id",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column id using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "menus_appeared",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column menus_appeared using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "times_appeared",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column times_appeared using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "first_appeared",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column first_appeared using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "last_appeared",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column last_appeared using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "lowest_price",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column lowest_price using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "highest_price",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column highest_price using expression value.toNumber()"
  },
  {
    "op": "core/column-removal",
    "columnName": "description",
    "description": "Remove column description"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.toTitlecase()"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "name",
          "expression": "grel:facetCount(value, \"value\", \"name\")",
          "columnName": "name",
          "from": 2,
          "to": 3,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "from": [
          "2 Eggs Poached On Toast",
          "2 Eggs, Poached, On Toast",
          "2 Poached (eggs) On Toast",
          "2 Poached Eggs On Toast",
          "Eggs Poached On Toast [2]",
          "Poached Eggs (2) On Toast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "2 Eggs Poached On Toast"
      },
      {
        "from": [
          "Pommes De Terre Puree",
          "Pommes De Terre Purée",
          "Pommes De Terre, Puree",
          "Pommes De Terre: Puree",
          "Puree De Pommes De Terre",
          "Purée De Pommes De Terre"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pommes De Terre Purée"
      },
      {
        "from": [
          "Broiled Chicken Half",
          "Broiled Half Chicken",
          "Chicken (half), Broiled",
          "Chicken, Broiled, Half",
          "Half Chicken, Broiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Half Chicken"
      },
      {
        "from": [
          "Broiled Half Spring Turkey",
          "Half Spring Turkey Broiled",
          "Spring Turkey (half) (broiled)",
          "Spring Turkey (half), Broiled",
          "[broiled] Spring Turkey (half)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Half Spring Turkey"
      },
      {
        "from": [
          "Fried Or Grilled Sweets (potatoes)",
          "Fried Or Grilled Sweets Potatoes",
          "Fried Or Grilled Sweets [potatoes]",
          "Potatoes Fried Or Grilled Sweets",
          "Potatoes, Fried Or Grilled Sweets"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Or Grilled Sweets Potatoes"
      },
      {
        "from": [
          "Ice Cream - Vanilla",
          "Ice Cream Vanilla",
          "Vanilla Cream Ice",
          "Vanilla [ice Cream]",
          "Vanilla, Ice Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ice Cream - Vanilla"
      },
      {
        "from": [
          "2 Eggs Fried",
          "2 Eggs, Fried",
          "Eggs Fried (2)",
          "Fried Eggs (2)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "2 Eggs, Fried"
      },
      {
        "from": [
          "Pig's Feet Broiled",
          "Pig's Feet, Broiled",
          "Pigs Feet, Broiled",
          "Pigs' Feet, Broiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pig's Feet, Broiled"
      },
      {
        "from": [
          "Broiled Spring Duckling (half",
          "Spring Duckling (half) (broiled)",
          "Spring Duckling (half), Broiled",
          "Spring Duckling, Broiled (half)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Spring Duckling (half), Broiled"
      },
      {
        "from": [
          "Clear Green Turtle (soup)",
          "Green Turtle Soup Clear",
          "Green Turtle [soup] Clear",
          "Green Turtle [soup], Clear"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Green Turtle Soup Clear"
      },
      {
        "from": [
          "Julienne [soup]",
          "Soup Julienne",
          "Soup, Julienne",
          "[soup] Julienne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Julienne Soup"
      },
      {
        "from": [
          "Cold: Roast Beef",
          "Roast Beef (cold)",
          "Roast Beef Cold",
          "Roast Beef [cold]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Roast Beef (Cold)"
      },
      {
        "from": [
          "Eggs Scrambled, Two",
          "Scrambled Eggs (two)",
          "Scrambled, Two Eggs",
          "Two Eggs Scrambled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Scrambled Eggs (Two)"
      },
      {
        "from": [
          "Eggs Fried, Two",
          "Eggs, Fried (two)",
          "Fried Eggs (two)",
          "Fried, Two Eggs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eggs, Fried (Two)"
      },
      {
        "from": [
          "Potatoes Souffle",
          "Potatoes, Souffle",
          "Potatoes: Souffle",
          "Soufflé Potatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes Soufflé "
      },
      {
        "from": [
          "Cucumber (salad)",
          "Cucumber Salad.",
          "Cucumber [salad]",
          "Salad, Cucumber"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cucumber Salad."
      },
      {
        "from": [
          "Cold Half Lobster, Mayonnaise",
          "Cold Lobster (half), Mayonnaise",
          "Cold Lobster, Mayonnaise (half)",
          "Half Cold Lobster, Mayonnaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cold Lobster (Half), Mayonnaise"
      },
      {
        "from": [
          "Chocolate (ice Cream)",
          "Chocolate Cream Ice",
          "Chocolate, Ice Cream",
          "Ice Cream. Chocolate"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chocolate Cream Ice"
      },
      {
        "from": [
          "Apple (pie)",
          "Apple [pie]",
          "Pie, Apple"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pie, Apple"
      },
      {
        "from": [
          "Cheese - Roquefort",
          "Roquefort (cheese)",
          "Roquefort [cheese]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cheese - Roquefort"
      },
      {
        "from": [
          "Cafe Turc",
          "Café Turc",
          "Turc Cafe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Café Turc"
      },
      {
        "from": [
          "Cream Stew [oysters]",
          "Oysters Cream Stew",
          "Oysters, Cream Stew"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oysters Cream Stew"
      },
      {
        "from": [
          "Coffee French Ice Cream",
          "French Coffee Ice Cream",
          "French Ice Cream, Coffee"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "French Coffee Ice Cream"
      },
      {
        "from": [
          "Pommes De Terre Gratinees, Delmonicos",
          "Pommes De Terre Gratinées, Delmonicos",
          "Pommes De Terre, Gratinees, Delmonicos"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pommes De Terre Gratinées, Delmonicos"
      },
      {
        "from": [
          "Cheese, Gorgonzola",
          "Cheese: Gorgonzola",
          "Gorgonzola (cheese)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gorgonzola (cheese)"
      },
      {
        "from": [
          "Oysters Raw",
          "Oysters, Raw",
          "Raw Oysters"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Raw Oysters"
      },
      {
        "from": [
          "Moet & Chandon (white Seal)",
          "Moët & Chandon, White Seal",
          "White Seal Moet & Chandon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "White Seal Moet & Chandon"
      },
      {
        "from": [
          "Romaine [salad]",
          "Salad Romaine",
          "Salad, Romaine"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Salad Romaine"
      },
      {
        "from": [
          "Celery Salad Mayonnaise",
          "Celery Salad, Mayonnaise",
          "Salad, Celery Mayonnaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Celery Salad, Mayonnaise"
      },
      {
        "from": [
          "Brandy, Very Old",
          "Brandy- - -very Old",
          "Very Old Brandy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brandy, Very Old"
      },
      {
        "from": [
          "Bass White Label",
          "Bass' White Label",
          "Bass, White Label"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bass, White Label"
      },
      {
        "from": [
          "C. & C. Ginger Ale",
          "Ginger Ale C & C",
          "Ginger Ale C. & C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "C. & C. Ginger Ale"
      },
      {
        "from": [
          "G H Mumm & Co Selected Brut",
          "G H Mumm & Co, Selected Brut",
          "G. H. Mumm & Co., Selected Brut"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "G. H. Mumm & Co., Selected Brut"
      },
      {
        "from": [
          "Bacon With Fried Eggs",
          "Eggs Fried With Bacon",
          "Eggs, Fried With Bacon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eggs Fried With Bacon"
      },
      {
        "from": [
          "Epinards A La Creme",
          "Epinards A La Crème",
          "Epinards À La Crême"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Epinards À La Crême"
      },
      {
        "from": [
          "Potatoes, Grilled Sweet",
          "Sweet Grilled Potatoes",
          "Sweet Potatoes, Grilled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sweet Grilled Potatoes"
      },
      {
        "from": [
          "Martell *** Brandy",
          "Martell Brandy",
          "Martell*** Brandy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Martell Brandy"
      },
      {
        "from": [
          "Champagne G H Mumm & Co's Extra Dry",
          "G. H. Mumm & Co's Extra Dry Champagne",
          "G. H. Mumm & Co.'s Extra Dry Champagne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "G. H. Mumm & Co.'s Extra Dry Champagne"
      },
      {
        "from": [
          "Nescafe",
          "Nescafè",
          "Nescafé"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nescafé"
      },
      {
        "from": [
          "Cotuits (oysters)",
          "Cotuits, Oysters",
          "Oysters Cotuits"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oysters Cotuits"
      },
      {
        "from": [
          "Omelet - Plain",
          "Omelet Plain",
          "Omelet: Plain"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Omelet Plain"
      },
      {
        "from": [
          "Sweet Potatoes---fried",
          "Sweet Potatoes--fried",
          "Sweet Potatoes-fried"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sweet Potatoes Fried"
      },
      {
        "from": [
          "Fried [oysters]",
          "Fried, Oysters",
          "Oysters Fried"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oysters Fried"
      },
      {
        "from": [
          "Consomme Cup, Hot Or Cold",
          "Consomme, Hot Or Cold (cup)",
          "Cup Consomme, Hot Or Cold"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cup Consomme, Hot Or Cold"
      },
      {
        "from": [
          "Hashed Potatoes In Cream Au Gratin",
          "Potatoes Hashed In Cream Au Gratin",
          "Potatoes, Hashed In Cream Au Gratin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes, Hashed In Cream Au Gratin"
      },
      {
        "from": [
          "Eggs (2), Shirred",
          "Eggs, Shirred (2)",
          "Shirred Eggs (2)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Shirred Eggs (2)"
      },
      {
        "from": [
          "Clear Consomme",
          "Consomme Clear",
          "Consomme, Clear"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clear Consomme"
      },
      {
        "from": [
          "Boiled Potatoes.",
          "Boiled [potatoes]",
          "Potatoes -- Boiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boiled Potatoes."
      },
      {
        "from": [
          "Fried [sweet Potatoes]",
          "Potatoes Sweet Fried",
          "Sweet Potatoes: Fried"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sweet Potatoes: Fried"
      },
      {
        "from": [
          "Potage De Purée De Pois",
          "Potage Puree De Pois",
          "[potage] Puree De Pois"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potage De Purée De Pois"
      },
      {
        "from": [
          "Eggs Scrambled With Ham",
          "Eggs, Scrambled, With Ham",
          "Ham With Scrambled Eggs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ham With Scrambled Eggs"
      },
      {
        "from": [
          "Hashed Potatoes, In Cream",
          "Potatoes Hashed, In Cream",
          "Potatoes, Hashed, In Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hashed Potatoes, In Cream"
      },
      {
        "from": [
          "Peche Melba",
          "Peche, Melba",
          "Pêche Melba"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pêche Melba"
      },
      {
        "from": [
          "G H Mumm & Co's Cordon Rouge",
          "G. H. Mumm & Co's Cordon Rouge",
          "G. H. Mumm & Co.'s Cordon Rouge"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "G. H. Mumm & Co.'s Cordon Rouge"
      },
      {
        "from": [
          "Pommes De Terre Sautees",
          "Pommes De Terre Sautées",
          "Pommes De Terre, Sautees"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pommes De Terre Sautées"
      },
      {
        "from": [
          "Pommery & Greno Champagne, Sec",
          "Pommery & Greno Sec Champagne",
          "Pommery & Greno, Sec Champagne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pommery & Greno, Sec Champagne"
      },
      {
        "from": [
          "Baltimore Oyster Broil",
          "Oyster Baltimore Broil",
          "Oyster, Baltimore Broil"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Baltimore Oyster Broil"
      },
      {
        "from": [
          "Eggs Shirred A La Turque",
          "Eggs, Shirred A La Turque",
          "Shirred Eggs A La Turque"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Shirred Eggs A La Turque"
      },
      {
        "from": [
          "Lyonnaise (potatoes)",
          "Lyonnaise [potatoes]",
          "Potatoes - Lyonnaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes - Lyonnaise"
      },
      {
        "from": [
          "Brandy, Hennessy",
          "Hennessy Brandy",
          "Hennessy*** Brandy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hennessy Brandy"
      },
      {
        "from": [
          "Italian Spaghetti",
          "Spaghetti Italian",
          "Spaghetti, Italian"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Italian Spaghetti"
      },
      {
        "from": [
          "Oysters Pan Roast On Toast",
          "Oysters, Pan Roast On Toast",
          "Pan Roast Oysters On Toast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pan Roast Oysters On Toast"
      },
      {
        "from": [
          "Lynnhavens (oysters)",
          "Lynnhavens, Oysters",
          "Oysters: Lynnhavens"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lynnhavens, Oysters"
      },
      {
        "from": [
          "Anheuser-busch Budweiser",
          "Anheuser-busch, Budweiser",
          "Budweiser, Anheuser-busch"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anheuser-busch Budweiser"
      },
      {
        "from": [
          "Mutton Roast",
          "Roast, Mutton",
          "[roast] Mutton"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mutton Roast"
      },
      {
        "from": [
          "Cocoa (pot For One)",
          "Cocoa, Pot For One",
          "Cocoa, Pot, For One"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cocoa, Pot, For One"
      },
      {
        "from": [
          "Eggs Boiled, Two",
          "Eggs, Boiled (two)",
          "Two Eggs Boiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Two Eggs Boiled"
      },
      {
        "from": [
          "Beefsteak Gerostet",
          "Beefsteak Geröstet",
          "Beefsteak, Geröstet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Beefsteak Geröstet"
      },
      {
        "from": [
          "2 Eggs, Scrambled On Toast",
          "Eggs Scrambled On Toast (2)",
          "Scrambled Eggs On Toast (2)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eggs Scrambled On Toast (2)"
      },
      {
        "from": [
          "Coeur De Palm Salade",
          "Salade Coeur De Palm",
          "Salade De Coeur De Palm"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Salade Coeur De Palm"
      },
      {
        "from": [
          "Consomme (hot Or Cold)",
          "Consomme Hot Or Cold",
          "Consomme, Hot Or Cold"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Consomme Hot Or Cold"
      },
      {
        "from": [
          "Extra Sirloin Steak Planked",
          "Extra Sirloin Steak, Planked",
          "Planked Steak (extra Sirloin)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Extra Sirloin Steak, Planked"
      },
      {
        "from": [
          "Broiled, Special Raised Squab Turkey",
          "Special Raised Broiled Squab Turkey",
          "Special Raised Squab Turkey, Broiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Special Raised Broiled Squab Turkey"
      },
      {
        "from": [
          "Soup Without Fish Or Meat Order, Extra",
          "Soup Without Meat Or Fish Order, Extra",
          "Soup, Without Meat Or Fish Order, Extra"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Soup Without Meat Or Fish Order, Extra"
      },
      {
        "from": [
          "Eggs Scrambled (2)",
          "Eggs, Scrambled (2)",
          "Scrambled Eggs (2)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Scrambled Eggs (2)"
      },
      {
        "from": [
          "Bass Ale Dog's Head",
          "Dog's Head Bass Ale",
          "Dog's Head Bass' Ale"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dog's Head Bass Ale"
      },
      {
        "from": [
          "Cream Of Tomatoes Soup With Rice",
          "Cream Of Tomatoes With Rice Soup",
          "Cream Of Tomatoes [soup] With Rice"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cream Of Tomatoes With Rice Soup"
      },
      {
        "from": [
          "Glaces A L'eau Orange",
          "Glaces A L'eau, Orange",
          "Orange Glaces A L'eau"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Glaces A L'eau, Orange"
      },
      {
        "from": [
          "Cherrystones (clams)",
          "Clams Cherrystones",
          "Clams, Cherrystones"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clams Cherrystones"
      },
      {
        "from": [
          "Moet & Chandon Imperial Brut",
          "Moet & Chandon, Brut Imperial",
          "Moet & Chandon, Imperial Brut"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Moet & Chandon, Brut Imperial"
      },
      {
        "from": [
          "Hot Roast Beef (sandwich)",
          "Roast Beef Hot Sandwich",
          "Roast Beef Sandwich (hot)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Roast Beef Hot Sandwich"
      },
      {
        "from": [
          "Potage Tomate",
          "Tomate Potage",
          "[potage] Tomate"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tomate Potage"
      },
      {
        "from": [
          "Coffee With Cream (small Pot)",
          "Coffee, Small Pot With Cream",
          "Small Pot Coffee With Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coffee, Small Pot With Cream"
      },
      {
        "from": [
          "Creamed Potatoes Au Gratin",
          "Potatoes Creamed Au Gratin",
          "Potatoes, Creamed Au Gratin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes Creamed Au Gratin"
      },
      {
        "from": [
          "Candied Sweets [potatoes]",
          "Potatoes Candied Sweets",
          "Potatoes: Candied Sweets"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes Candied Sweets"
      },
      {
        "from": [
          "Cherry Stones (clams)",
          "Cherry Stones, Clams",
          "Clams Cherry Stones"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cherry Stones, Clams"
      },
      {
        "from": [
          "Croûte Au Pot Soup",
          "Soup Croute Au Pot",
          "Soup, Croute Au Pot"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Croûte Au Pot Soup"
      },
      {
        "from": [
          "Box Sardines",
          "Sardines Box",
          "Sardines, Box"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Box Sardines"
      },
      {
        "from": [
          "Chablis White Burgundy",
          "Chablis, White Burgundy",
          "White Chablis Burgundy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chablis, White Burgundy"
      },
      {
        "from": [
          "Citron Glaces A L'eau",
          "Glaces A L'eau Citron",
          "Glaces A L'eau, Citron"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Glaces A L'eau Citron"
      },
      {
        "from": [
          "Paille Potatoes",
          "Potatoes Paille",
          "Potatoes, Paille"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paille Potatoes"
      },
      {
        "from": [
          "Cresson Salade",
          "Salade Cresson",
          "Salade: Cresson"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cresson Salade"
      },
      {
        "from": [
          "Macaroni A L'italienne",
          "Macaroni À L'italienne",
          "Macaroni, A L'italienne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Macaroni A L'italienne"
      },
      {
        "from": [
          "Meringue A La Creme",
          "Meringue À La Crême",
          "Meringue, A La Creme"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Meringue À La Crême"
      },
      {
        "from": [
          "Fried Smelts Tartare Sauce",
          "Fried Smelts, Sauce Tartare",
          "Fried Smelts, Tartare Sauce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Smelts, Sauce Tartare"
      },
      {
        "from": [
          "Eggs Fried, Three",
          "Eggs, Fried (three)",
          "Eggs, Fried, Three"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eggs Fried, Three"
      },
      {
        "from": [
          "Cigarettes, Philip Morris",
          "Cigarettes: Philip Morris",
          "Philip Morris Cigarettes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cigarettes: Philip Morris"
      },
      {
        "from": [
          "Chocolat Glaces",
          "Glaces, Chocolat",
          "Glaces: Chocolat"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chocolat Glaces"
      },
      {
        "from": [
          "Dry Martini Cocktail",
          "Martini Dry Cocktail",
          "Martini, Dry Cocktail"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dry Martini Cocktail"
      },
      {
        "from": [
          "3 Eggs Fried",
          "Eggs, Fried (3)",
          "Eggs, Fried [3]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "3 Eggs Fried"
      },
      {
        "from": [
          "Ham (cold)",
          "Ham [cold]",
          "Ham, Cold"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ham, Cold"
      },
      {
        "from": [
          "Potatoes - Sautees",
          "Sautees Potatoes",
          "Sautées Potatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sautées Potatoes"
      },
      {
        "from": [
          "C. & B. Chow",
          "C. & B. Chow Chow",
          "Chow Chow, C. & B."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "C. & B. Chow Chow"
      },
      {
        "from": [
          "2 Eggs Boiled",
          "2 Eggs, Boiled",
          "Eggs, Boiled [2]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "2 Eggs, Boiled"
      },
      {
        "from": [
          "3 Poached Eggs On Toast",
          "Eggs Poached On Toast (3)",
          "Poached Eggs On Toast (3)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "3 Poached Eggs On Toast"
      },
      {
        "from": [
          "Broiled Sweet Potatoes",
          "Sweet Potatoes - Broiled",
          "Sweet Potatoes -- Broiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Sweet Potatoes"
      },
      {
        "from": [
          "Deviled Stuffed Lobster",
          "Stuffed Deviled Lobster",
          "Stuffed Lobster, Deviled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Deviled Stuffed Lobster"
      },
      {
        "from": [
          "Breaded Veal Cutlet Milanaise",
          "Breaded Veal Cutlet, Milanaise",
          "Veal Cutlet Breaded, Milanaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breaded Veal Cutlet Milanaise"
      },
      {
        "from": [
          "Canape Lorenzo",
          "Canape, Lorenzo",
          "Canapé, Lorenzo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Canape Lorenzo"
      },
      {
        "from": [
          "Bent's Crackers Toasted",
          "Bent's Toasted Crackers",
          "Toasted Bent's Crackers"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bent's Crackers Toasted"
      },
      {
        "from": [
          "Cognac Martell ***",
          "Martell Cognac",
          "Martell Cognac ***"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Martell Cognac"
      },
      {
        "from": [
          "Bacon With Scrambled Eggs",
          "Eggs, Scrambled With Bacon",
          "Eggs, Scrambled, With Bacon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bacon With Scrambled Eggs"
      },
      {
        "from": [
          "Maraschino Punch",
          "Punch Maraschino",
          "Punch, Maraschino"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Maraschino Punch"
      },
      {
        "from": [
          "Potatoes - Saute",
          "Potatoes: Saute",
          "Sauté Potatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sauté Potatoes"
      },
      {
        "from": [
          "Oysters Poulette",
          "Oysters, Poulette",
          "Oysters: Poulette"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oysters Poulette"
      },
      {
        "from": [
          "Sweet Candied Potatoes",
          "Sweet Potatoes, Candied",
          "Sweet Potatoes: Candied"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sweet Candied Potatoes"
      },
      {
        "from": [
          "Hot Roastbeef",
          "Roastbeef Hot",
          "Roastbeef, Hot"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hot Roastbeef"
      },
      {
        "from": [
          "Sugar-cured Ham",
          "Sugar=cured Ham"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sugar-cured Ham"
      },
      {
        "from": [
          "American Cheese.",
          "Cheese: American"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Cheese."
      },
      {
        "from": [
          "Filet Of Sea Bass Meuniere",
          "Filet Of Sea Bass, Meuniere"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Filet Of Sea Bass Meuniere"
      },
      {
        "from": [
          "Calf's Liver Saute With Bacon",
          "Calf's Liver Sauté With Bacon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Calf's Liver Sauté With Bacon"
      },
      {
        "from": [
          "Cantaloupe Supreme",
          "Cantaloupe, Supreme"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cantaloupe Supreme"
      },
      {
        "from": [
          "Cocoanut [pie]",
          "Pie, Cocoanut"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pie, Cocoanut"
      },
      {
        "from": [
          "Small Sirloin Steak Onions",
          "Small Sirloin Steak, Onions"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Small Sirloin Steak Onions"
      },
      {
        "from": [
          "Egg And Lettuce Sandwich",
          "Lettuce And Egg Sandwich"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lettuce And Egg Sandwich"
      },
      {
        "from": [
          "Chablis, White",
          "White Chablis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "White Chablis"
      },
      {
        "from": [
          "Creme Au Caramel",
          "Crème Au Caramel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Crème Au Caramel"
      },
      {
        "from": [
          "Monopole, Red Top Champagne",
          "Red Top Monopole Champagne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Top Monopole Champagne"
      },
      {
        "from": [
          "Port, Sandeman's",
          "Sandeman's Port"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sandeman's Port"
      },
      {
        "from": [
          "Domestic Sauterne",
          "Sauterne, Domestic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Domestic Sauterne"
      },
      {
        "from": [
          "Half Shell Oysters",
          "Oysters - Half Shell"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Half Shell Oysters"
      },
      {
        "from": [
          "Pot Of Tea For Two",
          "Pot Of Tea, For Two"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pot Of Tea, For Two"
      },
      {
        "from": [
          "Oysters Stewed",
          "Stewed [oysters]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oysters Stewed"
      },
      {
        "from": [
          "Bacon, Lettuce And Tomato Sandwich",
          "Bacon, Tomato And Lettuce Sandwich."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bacon, Tomato And Lettuce Sandwich."
      },
      {
        "from": [
          "English Muffins Toasted",
          "English Muffins, Toasted"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "English Muffins Toasted"
      },
      {
        "from": [
          "Capri (white)",
          "Capri, White"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Capri, White"
      },
      {
        "from": [
          "Gateaux",
          "Gâteaux"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gâteaux"
      },
      {
        "from": [
          "Clear Green Turtle Amontillado",
          "Clear Green Turtle, Amontillado"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clear Green Turtle, Amontillado"
      },
      {
        "from": [
          "King William V.O.P",
          "King William, V.O.P."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "King William, V.O.P."
      },
      {
        "from": [
          "Milk-fed Chicken (half)",
          "Milkfed Chicken (half)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Milkfed Chicken (half)"
      },
      {
        "from": [
          "Potatoes Grilled",
          "Potatoes, Grilled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes, Grilled"
      },
      {
        "from": [
          "Mousse Pralinee",
          "Mousse Pralinée"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mousse Pralinée"
      },
      {
        "from": [
          "Puree Of Split Peas (soup)",
          "Puree Of Split Peas [soup]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Puree Of Split Peas [soup]"
      },
      {
        "from": [
          "Codfish, Creamed",
          "Creamed Codfish"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Creamed Codfish"
      },
      {
        "from": [
          "Doppelte Kraftbruhe Mit Mark",
          "Doppelte Kraftbrühe Mit Mark"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Doppelte Kraftbrühe Mit Mark"
      },
      {
        "from": [
          "Calf's Brains Fried, Tomato Sauce",
          "Fried Calf's Brains, Tomato Sauce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Calf's Brains, Tomato Sauce"
      },
      {
        "from": [
          "Frog's Legs, Meuniere",
          "Frogs' Legs, Meuniere"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Frog's Legs, Meuniere"
      },
      {
        "from": [
          "Irish Lamb Stew Dublin Style",
          "Irish Lamb Stew, Dublin Style"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Irish Lamb Stew Dublin Style"
      },
      {
        "from": [
          "Glass Half Milk And Cream",
          "Glass, Half Milk And Half Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Glass Half Milk And Cream"
      },
      {
        "from": [
          "Ginger Ale Domestic",
          "Ginger Ale, Domestic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ginger Ale Domestic"
      },
      {
        "from": [
          "Roquefort (per Person)",
          "Roquefort, Per Person"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Roquefort, Per Person"
      },
      {
        "from": [
          "Oyster Bay Asparagus Au Beurre Noir",
          "Oyster Bay Asparagus, Au Beurre Noir"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oyster Bay Asparagus, Au Beurre Noir"
      },
      {
        "from": [
          "Anheuser-busch Budweiser Beer",
          "Budweiser (anheuser-busch) Beer"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anheuser-busch Budweiser Beer"
      },
      {
        "from": [
          "Pate De Gibier",
          "Paté De Gibier"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paté De Gibier"
      },
      {
        "from": [
          "Gosling (half), Broiled",
          "Gosling, Broiled (half)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gosling, Broiled (Half)"
      },
      {
        "from": [
          "Sweet Potatoes---grilled",
          "Sweet Potatoes--grilled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sweet Potatoes Grilled"
      },
      {
        "from": [
          "Montrachat Burgundy (white)",
          "Montrachat White Burgundy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Montrachat White Burgundy"
      },
      {
        "from": [
          "Half Cream And Half Milk",
          "Half Milk And Half Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Half Milk And Half Cream"
      },
      {
        "from": [
          "Seagram's V. O.",
          "Seagram's V. V. O."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Seagram's V. V. O."
      },
      {
        "from": [
          "Orange And Romaine Salad",
          "Salad, Romaine And Orange"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Orange And Romaine Salad"
      },
      {
        "from": [
          "Clam Broth To Order",
          "Clam Broth, To Order"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clam Broth To Order"
      },
      {
        "from": [
          "Creamed Oysters With Green Peppers",
          "Oysters Creamed With Green Peppers"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Creamed Oysters With Green Peppers"
      },
      {
        "from": [
          "Mais",
          "Maïs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Maïs"
      },
      {
        "from": [
          "Tenderloin Steak (for One)",
          "Tenderloin Steak, For One"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tenderloin Steak, For One"
      },
      {
        "from": [
          "Ribs Of Prime Beef, Cold",
          "[cold] Prime Ribs Of Beef"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ribs Of Prime Beef, Cold"
      },
      {
        "from": [
          "Chas Heidsieck, Extra Dry",
          "Chas. Heidsieck Extra Dry"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chas Heidsieck, Extra Dry"
      },
      {
        "from": [
          "French Fried (to-order) Potatoes",
          "Potatoes French Fried (to-order)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes French Fried (To-order)"
      },
      {
        "from": [
          "Moet & Chandon White Seal Champagne",
          "Moet & Chandon, White Seal Champagne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Moet & Chandon White Seal Champagne"
      },
      {
        "from": [
          "Beef Tea In Cup",
          "Beef Tea, In Cup"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Beef Tea In Cup"
      },
      {
        "from": [
          "Crab-flake Cocktail",
          "Crabflake Cocktail"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Crabflake Cocktail"
      },
      {
        "from": [
          "Broiled Veal Kidney",
          "Veal Kidney, Broiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Veal Kidney, Broiled"
      },
      {
        "from": [
          "Pommes De Terre Lorette",
          "Pommes De Terre, Lorette"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pommes De Terre, Lorette"
      },
      {
        "from": [
          "Chateaubriand",
          "Châteaubriand"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Châteaubriand"
      },
      {
        "from": [
          "Frogs Legs Saute, Provencale",
          "Frogs' Legs Saute, Provencale"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Frogs' Legs Saute, Provencale"
      },
      {
        "from": [
          "Oeufs A La Neige",
          "Oeufs À La Neige"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oeufs À La Neige"
      },
      {
        "from": [
          "Omelet Ham",
          "Omelet, Ham"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Omelet Ham"
      },
      {
        "from": [
          "Calf's Liver, Fried With Bacon",
          "Fried Calf's Liver With Bacon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Calf's Liver, Fried With Bacon"
      },
      {
        "from": [
          "Crackers And Milk (bowl)",
          "Milk And Crackers, Bowl"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Milk And Crackers, Bowl"
      },
      {
        "from": [
          "Sirloin Steak (for One)",
          "Sirloin Steak, For One"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sirloin Steak, For One"
      },
      {
        "from": [
          "Cold Chicken Half",
          "Half Cold Chicken"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Half Cold Chicken"
      },
      {
        "from": [
          "Potatoes - German Fried",
          "Potatoes German Fried"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes German Fried"
      },
      {
        "from": [
          "Jagermeister",
          "Jägermeister"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Jägermeister"
      },
      {
        "from": [
          "Two Eggs (any Style)",
          "Two Eggs, Any Style"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Two Eggs, Any Style"
      },
      {
        "from": [
          "Bouchee A La Reine",
          "Bouchée À La Reine"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bouchée À La Reine"
      },
      {
        "from": [
          "Roast-beef",
          "Roastbeef"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Roastbeef"
      },
      {
        "from": [
          "One Egg (poached)",
          "One Egg, Poached"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "One Egg, Poached"
      },
      {
        "from": [
          "Veal Cutlet Breaded Tomato Sauce",
          "Veal Cutlet, Breaded Tomato Sauce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Veal Cutlet, Breaded Tomato Sauce"
      },
      {
        "from": [
          "Apricot, Orange, Lemon, Raspberry Or Pineapple Water Ice",
          "Raspberry, Lemon, Orange, Apricot Or Pineapple Water Ice"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Raspberry, Lemon, Orange, Apricot Or Pineapple Water Ice"
      },
      {
        "from": [
          "Alligator Pear (salad)",
          "Alligator Pear [salad]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Alligator Pear [Salad]"
      },
      {
        "from": [
          "Sorbet A L'orange",
          "Sorbet À L'orange"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sorbet À L'orange"
      },
      {
        "from": [
          "Fried Eggs With Ham Or Bacon",
          "Ham Or Bacon With Fried Eggs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ham Or Bacon With Fried Eggs"
      },
      {
        "from": [
          "White Rock Pints",
          "White Rock, Pints"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "White Rock Pints"
      },
      {
        "from": [
          "Hors-d'oeuvres Varies",
          "Hors-d'oeuvres Variés"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hors-d'oeuvres Varies"
      },
      {
        "from": [
          "Eggs, Scrambled On Toast",
          "Eggs, Scrambled, On Toast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eggs, Scrambled On Toast"
      },
      {
        "from": [
          "Coffee, Large Pot With Cream",
          "Large Pot Coffee With Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coffee, Large Pot With Cream"
      },
      {
        "from": [
          "Eggs Scrambled With Green Peppers",
          "Scrambled Eggs With Green Peppers"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Scrambled Eggs With Green Peppers"
      },
      {
        "from": [
          "Half Roast Spring Chicken",
          "Roast Spring Chicken (half)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Half Roast Spring Chicken"
      },
      {
        "from": [
          "Oysters A La Newburg",
          "Oysters, A La Newburg"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oysters A La Newburg"
      },
      {
        "from": [
          "Devilled Stuffed Crab",
          "Stuffed Devilled Crab"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Stuffed Devilled Crab"
      },
      {
        "from": [
          "Clear Green Turtle Soup A L'anglaise",
          "Clear Green Turtle [soup] A L'anglaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clear Green Turtle Soup A L'anglaise"
      },
      {
        "from": [
          "Grape Juice (welch's)",
          "Grape Juice, Welch's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grape Juice, Welch's"
      },
      {
        "from": [
          "Filet Mignon Bernaise",
          "Filet Mignon, Bernaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Filet Mignon Bernaise"
      },
      {
        "from": [
          "Louis Roederer, Brut Champagne, 1906",
          "Louis Roederer, Brut, 1906 Champagne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Louis Roederer, Brut Champagne, 1906"
      },
      {
        "from": [
          "Fresh Lobster Mayonnaise",
          "Fresh Lobster, Mayonnaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fresh Lobster Mayonnaise"
      },
      {
        "from": [
          "Imported Sardines Per Box",
          "Imported Sardines, Per Box"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Imported Sardines, Per Box"
      },
      {
        "from": [
          "Salade Mouquin",
          "Salade, Mouquin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Salade Mouquin"
      },
      {
        "from": [
          "Fancy Ice Cream In Forms",
          "Ice Cream In Fancy Forms"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fancy Ice Cream In Forms"
      },
      {
        "from": [
          "Ariston Rye, Aged In Wood 22 Years",
          "Ariston Rye, Aged In Wood, 22 Years"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ariston Rye, Aged In Wood 22 Years"
      },
      {
        "from": [
          "\" \" Au Gratin",
          "\" Au Gratin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "\" Au Gratin"
      },
      {
        "from": [
          "2 Poached Eggs",
          "Poached Eggs (2)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "2 Poached Eggs"
      },
      {
        "from": [
          "Lynnhaven Oysters Raw On Shell",
          "Lynnhaven Oysters, Raw On Shell"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lynnhaven Oysters Raw On Shell"
      },
      {
        "from": [
          "Coffee Pot With Cream",
          "Pot Coffee With Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coffee Pot With Cream"
      },
      {
        "from": [
          "Absinthe Frappe",
          "Absinthe, Frappe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Absinthe Frappe"
      },
      {
        "from": [
          "Cheese, Port Du Salut",
          "Port Du Salut [cheese]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Port Du Salut [cheese]"
      },
      {
        "from": [
          "\" With Tomatoes",
          "With Tomatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "With Tomatoes"
      },
      {
        "from": [
          "Biltmore (salad)",
          "Biltmore Salad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Biltmore Salad"
      },
      {
        "from": [
          "Soups With Meat Orders",
          "[soups] With Meat Orders"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Soups With Meat Orders"
      },
      {
        "from": [
          "Endive (salad)",
          "Endive [salad]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Endive [Salad]"
      },
      {
        "from": [
          "Chicken A La Maryland, Half",
          "Half Chicken A La Maryland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Half Chicken A La Maryland"
      },
      {
        "from": [
          "Pontet Canet Cruse & Fils Freres",
          "Pontet Canet, Cruse & Fils Freres"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pontet Canet Cruse & Fils Freres"
      },
      {
        "from": [
          "Half Shell Oysters, Blue Points",
          "Oysters, Blue Points, Half Shell"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Half Shell Oysters, Blue Points"
      },
      {
        "from": [
          "Oysters Shell Roast",
          "Shell Roast Oysters"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Shell Roast Oysters"
      },
      {
        "from": [
          "Compote De Peches",
          "Compote De Pêches"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Compote De Pêches"
      },
      {
        "from": [
          "Shirred Eggs (two)",
          "Two Eggs, Shirred"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Two Eggs, Shirred"
      },
      {
        "from": [
          "Fried Calf's Liver And Bacon",
          "Fried Calfs Liver And Bacon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Calf's Liver And Bacon"
      },
      {
        "from": [
          "Pale Dry Sherry",
          "Sherry, Pale Dry"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sherry, Pale Dry"
      },
      {
        "from": [
          "Consomme Paysanne",
          "Consomme, Paysanne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Consomme Paysanne"
      },
      {
        "from": [
          "Coffee, Tea",
          "Tea Coffee"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tea Coffee"
      },
      {
        "from": [
          "Crème Caramel",
          "Crême Caramel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Crème Caramel"
      },
      {
        "from": [
          "Berries And Cream In Season",
          "Berries And Cream, In Season"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Berries And Cream In Season"
      },
      {
        "from": [
          "Hash Brown Potatoes",
          "Potatoes, Hash Brown"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hash Brown Potatoes"
      },
      {
        "from": [
          "Bread Or Rolls And Butter (per Person)",
          "Bread Or Rolls And Butter, Per Person"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bread Or Rolls And Butter, Per Person"
      },
      {
        "from": [
          "Cream (cheese)",
          "Cream [cheese]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cream [Cheese]"
      },
      {
        "from": [
          "Julienne (potatoes)",
          "Julienne [potatoes]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Julienne [Potatoes]"
      },
      {
        "from": [
          "Prime Ribs Of Beef Au Jus Extra Cut",
          "Prime Ribs Of Beef Au Jus, Extra Cut"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Prime Ribs Of Beef Au Jus Extra Cut"
      },
      {
        "from": [
          "Eggs Poached On Toast, Three",
          "Poached Eggs, Three, On Toast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eggs Poached On Toast, Three"
      },
      {
        "from": [
          "Pie, Pineapple",
          "Pineapple [pie]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pie, Pineapple"
      },
      {
        "from": [
          "Boiled, Fried Or Scrambled Eggs",
          "Eggs: Boiled, Fried Or Scrambled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boiled, Fried Or Scrambled Eggs"
      },
      {
        "from": [
          "Cheese Sandwich, Swiss",
          "Cheese, Swiss Sandwich"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cheese Sandwich, Swiss"
      },
      {
        "from": [
          "Macaroni Plain",
          "Macaroni, Plain"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Macaroni Plain"
      },
      {
        "from": [
          "Fausse Tortue A L'anglaise",
          "Tortue Fausse A L'anglaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fausse Tortue A L'anglaise"
      },
      {
        "from": [
          "Cheese, Stilton",
          "Stilton (cheese)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cheese, Stilton"
      },
      {
        "from": [
          "Smoked Beef Tongue (cold)",
          "[cold] Smoked Beef Tongue"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Smoked Beef Tongue (cold)"
      },
      {
        "from": [
          "Celery (salad)",
          "Celery [salad]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Celery [Salad]"
      },
      {
        "from": [
          "Clams, Roast",
          "Roast Clams"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clams, Roast"
      },
      {
        "from": [
          "Kidneys Stewed",
          "Stewed Kidneys"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Stewed Kidneys"
      },
      {
        "from": [
          "Shredded Wheat One Biscuit, Small Pitcher Of Cream",
          "Shredded Wheat, One Biscuit, Small Pitcher Of Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Shredded Wheat, One Biscuit, Small Pitcher Of Cream"
      },
      {
        "from": [
          "Fruits Rafraichis",
          "Fruits Rafraîchis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fruits Rafraîchis"
      },
      {
        "from": [
          "Pad Sea Al - Sauteed Rice Noodle With Broccoli, Egg And Choice Of Beef, Pork, Chicken Or Shrimp",
          "Pad Sea Al: Sauteed Rice Noodle With Broccoli, Egg And Choice Of Beef, Pork, Chicken Or Shrimp"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pad Sea Al - Sauteed Rice Noodle With Broccoli, Egg And Choice Of Beef, Pork, Chicken Or Shrimp"
      },
      {
        "from": [
          "Sandwich: Sliced Turkey, On Home-made European Type Dark Bread, Served Open With Lettuce And Tomatoes, Organically Grown At Trapp Gardens",
          "Sliced Turkey Sandwich, On Home-made European Type Dark Bread, Served Open With Lettuce And Tomatoes, Organically Grown At Trapp Gardens"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sliced Turkey Sandwich, On Home-made European Type Dark Bread, Served Open With Lettuce And Tomatoes, Organically Grown At Trapp Gardens"
      },
      {
        "from": [
          "Omelet Chicken Livers",
          "Omelet, Chicken Livers"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Omelet Chicken Livers"
      },
      {
        "from": [
          "American, Edam And Roquefort Cheese",
          "Roquefort, Edam And American Cheese"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American, Edam And Roquefort Cheese"
      },
      {
        "from": [
          "Asperges Sauce Hollandaise",
          "Asperges, Sauce Hollandaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Asperges Sauce Hollandaise"
      },
      {
        "from": [
          "Hazelnut Souffle",
          "Hazelnut Soufflé"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hazelnut Souffle"
      },
      {
        "from": [
          "Prime Ribs Of Beef, Yorkshire Pudding",
          "Ribs Of Prime Beef, Yorkshire Pudding"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Prime Ribs Of Beef, Yorkshire Pudding"
      },
      {
        "from": [
          "Chateau Potatoes",
          "Château Potatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Château Potatoes"
      },
      {
        "from": [
          "(potato Salad With Cold Meats)",
          "Potato Salad With Cold Meats"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potato Salad With Cold Meats"
      },
      {
        "from": [
          "Soup, Tomato With Rice",
          "Tomato Soup, With Rice"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tomato Soup, With Rice"
      },
      {
        "from": [
          "Broiled Fish",
          "Fish, Broiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Fish"
      },
      {
        "from": [
          "Canadian Club Whisky",
          "Whisky, Canadian Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Canadian Club Whisky"
      },
      {
        "from": [
          "3d Quality Light Claret, (red Seal)",
          "3d Quality Light, (red Seal) Claret"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "3d Quality Light Claret, (Red Seal)"
      },
      {
        "from": [
          "Cantaloupe (whole)",
          "Whole Cantaloupe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Whole Cantaloupe"
      },
      {
        "from": [
          "Home=made Apple Pie",
          "Homemade Apple Pie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Homemade Apple Pie"
      },
      {
        "from": [
          "Tenderloin Tomato Sauce",
          "Tenderloin, Tomato Sauce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tenderloin Tomato Sauce"
      },
      {
        "from": [
          "Pommes De Terre, Frites",
          "Pommes De Terre: Frites"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pommes De Terre, Frites"
      },
      {
        "from": [
          "Consomme A B C",
          "Consomme A. B. C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Consomme A. B. C."
      },
      {
        "from": [
          "Fromage Petit Gervais",
          "Petit Gervais Fromage"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Petit Gervais Fromage"
      },
      {
        "from": [
          "Parisienne (potatoes)",
          "Potatoes: Parisienne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes: Parisienne"
      },
      {
        "from": [
          "Fried Oysters, Dozen",
          "Oysters Fried, Dozen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Oysters, Dozen"
      },
      {
        "from": [
          "Extra Sirloin, Planked",
          "Planked Extra Sirloin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Extra Sirloin, Planked"
      },
      {
        "from": [
          "Tomato Aux Croutons Soup",
          "Tomato Soup, Aux Croutons"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tomato Aux Croutons Soup"
      },
      {
        "from": [
          "Bowl Of Milk And Rice",
          "Bowl Of Rice And Milk"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bowl Of Rice And Milk"
      },
      {
        "from": [
          "Fresh Crab Meat Cocktail",
          "Fresh Crab Meat, Cocktail"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fresh Crab Meat Cocktail"
      },
      {
        "from": [
          "Baked Mashed Potatoes",
          "Mashed Baked Potatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Baked Mashed Potatoes"
      },
      {
        "from": [
          "Broiled Oysters With Cream",
          "Oysters Broiled With Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Oysters With Cream"
      },
      {
        "from": [
          "Philadelphia Cream (cheese)",
          "Philadelphia Cream [cheese]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Philadelphia Cream [Cheese]"
      },
      {
        "from": [
          "Holland (gin)",
          "Holland Gin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Holland Gin"
      },
      {
        "from": [
          "Breakfast Bacon, Broiled Or Fried",
          "Breakfast Bacon, Fried Or Broiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast Bacon, Fried Or Broiled"
      },
      {
        "from": [
          "Cliquot Yellow Label Champagne",
          "Cliquot, Yellow Label Champagne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cliquot Yellow Label Champagne"
      },
      {
        "from": [
          "Club Soda C & C",
          "Club Soda C. & C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Club Soda C. & C."
      },
      {
        "from": [
          "Fresh Strawberries With Cream",
          "Fresh Strawberries, With Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fresh Strawberries, With Cream"
      },
      {
        "from": [
          "Pfirsich \"melba\"",
          "Pfirsich Melba"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pfirsich Melba"
      },
      {
        "from": [
          "Chartreuse (yellow Or Green)",
          "Chartreuse, Green Or Yellow"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chartreuse, Green Or Yellow"
      },
      {
        "from": [
          "Cheese, Port Salut",
          "Port Salut (cheese)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cheese, Port Salut"
      },
      {
        "from": [
          "Faisan Roti",
          "Faisan Rôti"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Faisan Rôti"
      },
      {
        "from": [
          "Broiled Beechnut Ham",
          "Broiled Ham, Beechnut"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Beechnut Ham"
      },
      {
        "from": [
          "Glaces: Vanille",
          "Vanille Glaces"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Vanille Glaces"
      },
      {
        "from": [
          "Demi-tasse Special",
          "Demi-tasse, Special"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Demi-tasse Special"
      },
      {
        "from": [
          "G H Mumm Extra Dry",
          "G H Mumm, Extra Dry"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "G H Mumm, Extra Dry"
      },
      {
        "from": [
          "Chicken Patties (two Pieces)",
          "Chicken Patties [two Pieces]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicken Patties (Two Pieces)"
      },
      {
        "from": [
          "Hors D'oeuvre Variés",
          "Hors D'oeuvre, Varies"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hors D'oeuvre Variés"
      },
      {
        "from": [
          "Lobster, Stuffed",
          "Stuffed Lobster"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Stuffed Lobster"
      },
      {
        "from": [
          "Brook Trout Saute Meuniere",
          "Brook Trout, Saute Meuniere"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brook Trout Saute Meuniere"
      },
      {
        "from": [
          "Italian Vermouth",
          "Vermouth, Italian"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Italian Vermouth"
      },
      {
        "from": [
          "Roast Royal Squab",
          "Royal Squab, Roast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Roast Royal Squab"
      },
      {
        "from": [
          "Onions, Smothered",
          "Smothered Onions"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Smothered Onions"
      },
      {
        "from": [
          "Oolong Tea, Pot",
          "Tea, Oolong, Pot"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oolong Tea, Pot"
      },
      {
        "from": [
          "French Ice Cream, Pistachio",
          "Pistachio French Ice Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pistachio French Ice Cream"
      },
      {
        "from": [
          "Baked Pork And Beans, Boston Style",
          "Baked Pork And Boston Style Baked Beans"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Baked Pork And Boston Style Baked Beans"
      },
      {
        "from": [
          "Creole Gumbo",
          "Gumbo Creole"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gumbo Creole"
      },
      {
        "from": [
          "Brauneberger, 1911 Moselle Wine",
          "Brauneberger, 1911, Moselle Wine"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brauneberger, 1911 Moselle Wine"
      },
      {
        "from": [
          "Creme De Menthe (white Or Green)",
          "Creme De Menthe, White Or Green"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Creme De Menthe, White Or Green"
      },
      {
        "from": [
          "Cauliflower Hollandaise Sauce",
          "Cauliflower, Sauce Hollandaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cauliflower, Sauce Hollandaise"
      },
      {
        "from": [
          "Huitres En Coquilles",
          "Huîtres En Coquilles"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Huitres En Coquilles"
      },
      {
        "from": [
          "Coffee (ice Cream)",
          "Coffee [ice Cream]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coffee [Ice Cream]"
      },
      {
        "from": [
          "Coffee And Tea",
          "Tea And Coffee"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tea And Coffee"
      },
      {
        "from": [
          "Potatoes Special: Idaho Baked",
          "Special - Idaho Baked Potatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes Special: Idaho Baked"
      },
      {
        "from": [
          "Broiled Jumbo Squab, Currant Jelly",
          "Jumbo Squab Broiled, Currant Jelly"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Jumbo Squab, Currant Jelly"
      },
      {
        "from": [
          "*broiled Chicken",
          "Chicken Broiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicken Broiled"
      },
      {
        "from": [
          "Macaroni Soup",
          "Soup: Macaroni"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Macaroni Soup"
      },
      {
        "from": [
          "Bowl Milk And Bread",
          "Bread And Milk (bowl)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bowl Milk And Bread"
      },
      {
        "from": [
          "Omelette Confiture",
          "Omelette, Confiture"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Omelette Confiture"
      },
      {
        "from": [
          "Bar Le Duc Jelly (white)",
          "Bar Le Duc Jelly, White"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bar Le Duc Jelly, White"
      },
      {
        "from": [
          "Tortue Verte Claire",
          "Tortue Verte, Claire"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tortue Verte Claire"
      },
      {
        "from": [
          "Lamb Kidneys En Brochette",
          "Lamb Kidneys, En Brochette"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lamb Kidneys En Brochette"
      },
      {
        "from": [
          "Salad Francillon",
          "Salad, Francillon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Salad Francillon"
      },
      {
        "from": [
          "*roast Chicken",
          "Roast: Chicken"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Roast Chicken"
      },
      {
        "from": [
          "Hot-house Cucumber Salad",
          "Hothouse Cucumber [salad]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hothouse Cucumber [salad]"
      },
      {
        "from": [
          "(2) Broiled Pork Chops",
          "2 Broiled Pork Chops"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "2 Broiled Pork Chops"
      },
      {
        "from": [
          "Franklin Pudding",
          "Pudding Franklin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Franklin Pudding"
      },
      {
        "from": [
          "Vichy (syphon)",
          "Vichy, Syphon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Vichy, Syphon"
      },
      {
        "from": [
          "Puree Mongole",
          "Puree, Mongole"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Puree, Mongole"
      },
      {
        "from": [
          "Small Veal Cutlet Breaded",
          "Small Veal Cutlet, Breaded"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Small Veal Cutlet, Breaded"
      },
      {
        "from": [
          "Coffee Per Pot For Two",
          "Coffee, Per Pot, For Two"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coffee Per Pot For Two"
      },
      {
        "from": [
          "Hodge Podge Soup",
          "Soup, Hodge Podge"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Soup, Hodge Podge"
      },
      {
        "from": [
          "Cepes Bordelaise",
          "Cepes, Bordelaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cepes, Bordelaise"
      },
      {
        "from": [
          "Junges Hahnchen Gebraten Mit Frischen Edelchampignons, Zucker-erbsen, Röstkartoffeln",
          "Junges Hähnchen Gebraten Mit Frischen Edelchampignons, Zucker-erbsen, Röstkartoffeln"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Junges Hähnchen Gebraten Mit Frischen Edelchampignons, Zucker-erbsen, Röstkartoffeln"
      },
      {
        "from": [
          "My Lady Salad",
          "Salad \"my Lady\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "My Lady Salad"
      },
      {
        "from": [
          "4-year Old Mount Vernon Rye, Bonded",
          "4-year Old Mount Vernon Rye, Bonded,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "4-year Old Mount Vernon Rye, Bonded"
      },
      {
        "from": [
          "Club Soda, C & C, Imported",
          "Imported Club Soda, C. & C"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Imported Club Soda, C. & C"
      },
      {
        "from": [
          "Eggs Shirred, Meyerbeer",
          "Shirred Eggs, Meyerbeer"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Shirred Eggs, Meyerbeer"
      },
      {
        "from": [
          "Crackers With Bowl Of Milk",
          "Milk Crackers With Bowl Of Milk"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Milk Crackers With Bowl Of Milk"
      },
      {
        "from": [
          "St Julien, Cresta Blanca",
          "St. Julien, Cresta Blanca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Julien, Cresta Blanca"
      },
      {
        "from": [
          "Boned Capon (cold)",
          "Boned Capon, Cold"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boned Capon, Cold"
      },
      {
        "from": [
          "Blackberry Brandy, Old Style",
          "Blackberry, Old Style Brandy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Blackberry Brandy, Old Style"
      },
      {
        "from": [
          "Consomme Printaniere",
          "Consomme, Printaniere"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Consomme Printaniere"
      },
      {
        "from": [
          "Blue Points Or Rockaways Boston Box Stew",
          "Blue Points Or Rockaways, Boston Box Stew"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Blue Points Or Rockaways Boston Box Stew"
      },
      {
        "from": [
          "Eggs, Scrambled, With Kidneys",
          "Scrambled Eggs With Kidneys"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eggs, Scrambled, With Kidneys"
      },
      {
        "from": [
          "Swiss Gruyere",
          "Swiss Gruyère"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Swiss Gruyère"
      },
      {
        "from": [
          "Clear Green Turtle Aux Quenelles",
          "Green Turtle Clear Aux Quenelles"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clear Green Turtle Aux Quenelles"
      },
      {
        "from": [
          "Gombo, Creole",
          "Gombo, Créole"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gombo, Creole"
      },
      {
        "from": [
          "Cold Lobster, Plain",
          "Cold Plain Lobster"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cold Plain Lobster"
      },
      {
        "from": [
          "Chicken Gumbo Strained",
          "Strained Chicken Gumbo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Strained Chicken Gumbo"
      },
      {
        "from": [
          "Green Turtle Consomme Au Xérès",
          "Green Turtle Consommé Au Xérès"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Green Turtle Consommé Au Xérès"
      },
      {
        "from": [
          "Gorgonzola Kase",
          "Kase: Gorgonzola"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gorgonzola Kase"
      },
      {
        "from": [
          "Bermuda Boiled Potatoes",
          "Bermuda Potatoes, Boiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bermuda Boiled Potatoes"
      },
      {
        "from": [
          "Tea Pot",
          "Tea, Pot"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tea Pot"
      },
      {
        "from": [
          "Krug Private Cuvee Ex Sec Champagne",
          "Krug, Private Cuvee Ex Sec Champagne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Krug, Private Cuvee Ex Sec Champagne"
      },
      {
        "from": [
          "Coney Island Little Neck Clams Roast",
          "Little Neck Clams, Coney Island Roast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Little Neck Clams, Coney Island Roast"
      },
      {
        "from": [
          "Grilled Mutton Chops",
          "Mutton Chops, Grilled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mutton Chops, Grilled"
      },
      {
        "from": [
          "Soft Shell Crab",
          "Soft Shell Crab."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Soft Shell Crab."
      },
      {
        "from": [
          "English Breakfast Tea (pot For One)",
          "English Breakfast Tea, Pot For One"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "English Breakfast Tea, Pot For One"
      },
      {
        "from": [
          "Irroy, Brut 1906",
          "Irroy, Brut, 1906"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Irroy, Brut, 1906"
      },
      {
        "from": [
          "Creme De Menthe (white)",
          "White Creme De Menthe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "White Creme De Menthe"
      },
      {
        "from": [
          "Clams Shell Roast",
          "Clams, Shell Roast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clams Shell Roast"
      },
      {
        "from": [
          "Baked Idaho Potatoes",
          "Idaho Baked Potatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Baked Idaho Potatoes"
      },
      {
        "from": [
          "Curry Mutton Rice",
          "Mutton Curry, Rice"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Curry Mutton Rice"
      },
      {
        "from": [
          "Golden Plover On Toast",
          "Golden Plover, On Toast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Golden Plover On Toast"
      },
      {
        "from": [
          "Chipped Beef With Scrambled Eggs",
          "Scrambled Eggs With Chipped Beef"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chipped Beef With Scrambled Eggs"
      },
      {
        "from": [
          "English Walnuts, Pickled",
          "Pickled English Walnuts"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pickled English Walnuts"
      },
      {
        "from": [
          "Cold Consomme Per Cup",
          "Cold Per Cup: Consommé"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cold Consomme Per Cup"
      },
      {
        "from": [
          "Salt Codfish With Cream",
          "Salt Codfish, With Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Salt Codfish With Cream"
      },
      {
        "from": [
          "Anisette Liqueur",
          "Liqueur, Anisette"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anisette Liqueur"
      },
      {
        "from": [
          "Potatoes--hashed Brown",
          "Potatoes-hashed Brown"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes Hashed Brown"
      },
      {
        "from": [
          "Eggs Scrambled Smoked Beef",
          "Smoked Beef, Scrambled Eggs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Smoked Beef, Scrambled Eggs"
      },
      {
        "from": [
          "Chair De Crabe Salade",
          "Salade Chair De Crabe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Salade Chair De Crabe"
      },
      {
        "from": [
          "Minute Sirloin Steak",
          "Sirloin, Minute Steak"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sirloin, Minute Steak"
      },
      {
        "from": [
          "Brandy, Pony",
          "Pony Brandy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pony Brandy"
      },
      {
        "from": [
          "Cognac Courvoisier Vsop",
          "Courvoisier Vsop Cognac"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cognac Courvoisier Vsop"
      },
      {
        "from": [
          "Roast Leg Of Mutton With Jelly",
          "Roast Leg Of Mutton, With Jelly"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Roast Leg Of Mutton With Jelly"
      },
      {
        "from": [
          "Jelly Omelet",
          "Omelet, Jelly"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Jelly Omelet"
      },
      {
        "from": [
          "Fresh Country Sausage With Potatoes",
          "Fresh Country Sausage, With Potatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fresh Country Sausage With Potatoes"
      },
      {
        "from": [
          "Corned Beef Hash Browned, With 2 Poached Eggs",
          "Corned Beef Hash, Browned, With 2 Poached Eggs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Corned Beef Hash Browned, With 2 Poached Eggs"
      },
      {
        "from": [
          "Chicoree Salade",
          "Salade Chicoree"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Salade Chicoree"
      },
      {
        "from": [
          "Baltimore Club Terrapin",
          "Terrapin, Baltimore Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Terrapin, Baltimore Club"
      },
      {
        "from": [
          "Chartreuse (green)",
          "Green Chartreuse"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Green Chartreuse"
      },
      {
        "from": [
          "Port Salut (per Person)",
          "Port Salut, Per Person"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Port Salut, Per Person"
      },
      {
        "from": [
          "Malpeque Oysters",
          "Oysters: Malpeque"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Malpeque Oysters"
      },
      {
        "from": [
          "Bushmill's Irish Whiskey",
          "Bushmills Irish Whiskey"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bushmill's Irish Whiskey"
      },
      {
        "from": [
          "Chocolate Or Cocoa, Per Pot",
          "Cocoa Or Chocolate, Per Pot"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cocoa Or Chocolate, Per Pot"
      },
      {
        "from": [
          "Clams, Raw",
          "Raw Clams"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Raw Clams"
      },
      {
        "from": [
          "California Orange Sliced",
          "California Orange, Sliced"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "California Orange, Sliced"
      },
      {
        "from": [
          "Vve Clicquot, Yellow Label",
          "Vve. Clicquot, Yellow Label"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Vve. Clicquot, Yellow Label"
      },
      {
        "from": [
          "Omelettes With Rum",
          "Omelettes, With Rum"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Omelettes, With Rum"
      },
      {
        "from": [
          "Hollandische Poularde",
          "Holländische Poularde"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Holländische Poularde"
      },
      {
        "from": [
          "Frog's Legs A La Poulette",
          "Frogs Legs A La Poulette"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Frog's Legs A La Poulette"
      },
      {
        "from": [
          "Cream Crecy Soup",
          "Cream, Crecy Soup"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cream, Crecy Soup"
      },
      {
        "from": [
          "Fried Long Island Flounder",
          "Long Island Flounder Fried"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Long Island Flounder Fried"
      },
      {
        "from": [
          "Lettuce And Orange Salad",
          "Orange And Lettuce Salad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Orange And Lettuce Salad"
      },
      {
        "from": [
          "Liederkranz (per Person)",
          "Liederkranz, Per Person"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Liederkranz, Per Person"
      },
      {
        "from": [
          "Fancy Oyster Roast",
          "Oyster Fancy Roast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fancy Oyster Roast"
      },
      {
        "from": [
          "Leberknodel In Sauce Und Zwiebeln",
          "Leberknödel In Sauce Und Zwiebeln"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Leberknödel In Sauce Und Zwiebeln"
      },
      {
        "from": [
          "Potage Vermicelles",
          "Vermicelles Potage"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Vermicelles Potage"
      },
      {
        "from": [
          "Puree St. Germain",
          "Purée St. Germain"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Purée St. Germain"
      },
      {
        "from": [
          "Tenderloin Steak Mushrooms",
          "Tenderloin Steak, Mushrooms"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tenderloin Steak Mushrooms"
      },
      {
        "from": [
          "Otard Dupuy Brandy",
          "Otard Dupuy*** Brandy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Otard Dupuy Brandy"
      },
      {
        "from": [
          "Oysters Baked In Shell",
          "Oysters, Baked In Shell"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oysters Baked In Shell"
      },
      {
        "from": [
          "Cafe Demi-tasse",
          "Cafe, Demi-tasse"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe Demi-tasse"
      },
      {
        "from": [
          "Plain Lobster Whole",
          "Whole Plain Lobster"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Plain Lobster Whole"
      },
      {
        "from": [
          "Avocado Pear (half) Salad",
          "Avocado Pear Salad (half)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Avocado Pear Salad (Half)"
      },
      {
        "from": [
          "Broil Oysters",
          "Oysters Broil"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oysters Broil"
      },
      {
        "from": [
          "Oysters Fry In Butter",
          "Oysters, Fry In Butter"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oysters Fry In Butter"
      },
      {
        "from": [
          "Beef, Roast",
          "Roast: Beef"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Beef, Roast"
      },
      {
        "from": [
          "Porterhouse Steak Onions",
          "Porterhouse Steak, Onions"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Porterhouse Steak, Onions"
      },
      {
        "from": [
          "Sirloin Steak Stanley",
          "Sirloin Steak, Stanley"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sirloin Steak, Stanley"
      },
      {
        "from": [
          "Fragrant Tea Made Special To Order, Pot",
          "Fragrant Tea, Made Special To Order, Pot"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fragrant Tea, Made Special To Order, Pot"
      },
      {
        "from": [
          "Boiled Ham (cold)",
          "Boiled Ham, Cold"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boiled Ham, Cold"
      },
      {
        "from": [
          "Consomme Excelsior",
          "Excelsior Consomme"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Excelsior Consomme"
      },
      {
        "from": [
          "Celery Plain",
          "Plain Celery"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Plain Celery"
      },
      {
        "from": [
          "Broiled Shad A La Maitre D'hotel",
          "Broiled Shad, A La Maitre D'hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Shad, A La Maitre D'hotel"
      },
      {
        "from": [
          "Syphons, C Schultz",
          "Syphons, C. Schultz"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Syphons, C. Schultz"
      },
      {
        "from": [
          "Broiled Mushrooms On Toast",
          "Mushrooms: Broiled On Toast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Mushrooms On Toast"
      },
      {
        "from": [
          "Blue Points Mignonette Sauce",
          "Blue Points, Mignonette Sauce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Blue Points Mignonette Sauce"
      },
      {
        "from": [
          "Young Turkey Stuffed, Cranberry Sauce",
          "Young Turkey, Stuffed, Cranberry Sauce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Young Turkey Stuffed, Cranberry Sauce"
      },
      {
        "from": [
          "Broiled Weakfish",
          "Weakfish, Broiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Weakfish"
      },
      {
        "from": [
          "Lyonnaise Potato",
          "Potato Lyonnaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potato Lyonnaise"
      },
      {
        "from": [
          "Pork Chops Sauce Robert",
          "Pork Chops, Sauce Robert"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pork Chops Sauce Robert"
      },
      {
        "from": [
          "Melba Peach",
          "Peach, Melba"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Melba Peach"
      },
      {
        "from": [
          "St Estephe Claret",
          "St. Estephe Claret"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Estephe Claret"
      },
      {
        "from": [
          "Bass' Dog's Head",
          "Bass, Dog's Head"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bass, Dog's Head"
      },
      {
        "from": [
          "Ice Cream Strawberry",
          "Strawberry [ice Cream]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ice Cream Strawberry"
      },
      {
        "from": [
          "Citron Sorbet",
          "Sorbet Citron"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sorbet Citron"
      },
      {
        "from": [
          "G.H. Mumm & Co.",
          "G.H. Mumm & Co.,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "G.H. Mumm & Co.,"
      },
      {
        "from": [
          "Sliced Boneless Breast Of Goose, Luchow's Apple Dressing, Red Cabbage, Home Fried Potatoes",
          "Sliced Boneless Breast Of Goose, Lüchow's Apple Dressing, Red Cabbage, Home Fried Potatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sliced Boneless Breast Of Goose, Lüchow's Apple Dressing, Red Cabbage, Home Fried Potatoes"
      },
      {
        "from": [
          "Consomme Italian Paste",
          "Consomme, Italian Paste"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Consomme Italian Paste"
      },
      {
        "from": [
          "Purée Of Peas Soup",
          "Soup, Puree Of Peas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Purée Of Peas Soup"
      },
      {
        "from": [
          "Salade De Concombres A La Francaise",
          "Salade De Concombres, A La Francaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Salade De Concombres A La Francaise"
      },
      {
        "from": [
          "Eggs Fried Or Scrambled [3]",
          "Eggs, Fried Or Scrambled [3]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eggs, Fried Or Scrambled [3]"
      },
      {
        "from": [
          "Clam Broth Soup",
          "Soup, Clam Broth"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clam Broth Soup"
      },
      {
        "from": [
          "Saute Sweet Potatoes",
          "Sweet Potatoes, Saute"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sweet Potatoes, Saute"
      },
      {
        "from": [
          "Beechnut Ham And Eggs",
          "Ham And Eggs, Beechnut"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ham And Eggs, Beechnut"
      },
      {
        "from": [
          "Potatoes Allumettes",
          "Potatoes, Allumettes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes, Allumettes"
      },
      {
        "from": [
          "Macon, Vieux",
          "Mâcon Vieux"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mâcon Vieux"
      },
      {
        "from": [
          "Won-ton Soup",
          "Wonton Soup"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wonton Soup"
      },
      {
        "from": [
          "*cold Boned Capon Truffe And Jelly",
          "Cold Boned Capon Truffe And Jelly"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cold Boned Capon Truffe And Jelly"
      },
      {
        "from": [
          "Mutton Chops Breaded, Tomato Sauce",
          "Mutton Chops, Breaded, Tomato Sauce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mutton Chops Breaded, Tomato Sauce"
      },
      {
        "from": [
          "Hunyadi (glass)",
          "Hunyadi, Glass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hunyadi, Glass"
      },
      {
        "from": [
          "Omelet Mushrooms",
          "Omelet, Mushrooms"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Omelet Mushrooms"
      },
      {
        "from": [
          "Lettuce Salad Mayonnaise",
          "Lettuce Salad, Mayonnaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lettuce Salad Mayonnaise"
      },
      {
        "from": [
          "Small Steak With Mushrooms",
          "Small Steak, With Mushrooms"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Small Steak With Mushrooms"
      },
      {
        "from": [
          "Duck - Apple Sauce",
          "Duck, Apple Sauce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Duck, Apple Sauce"
      },
      {
        "from": [
          "Grilled Squab Turkey, Half",
          "Half Grilled Squab Turkey"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Half Grilled Squab Turkey"
      },
      {
        "from": [
          "Coffee (pot)",
          "Coffee Pot"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coffee Pot"
      },
      {
        "from": [
          "Champagne, G. H. Mumm & Co, Extra Dry",
          "G. H. Mumm & Co., Extra Dry Champagne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "G. H. Mumm & Co., Extra Dry Champagne"
      },
      {
        "from": [
          "Gilka Kummel",
          "Gilka Kümmel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gilka Kümmel"
      },
      {
        "from": [
          "Chicken Salad, Full Order",
          "Chicken, Full Order Salad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicken Salad, Full Order"
      },
      {
        "from": [
          "Tenderloin Of Beef With Mushrooms",
          "Tenderloin Of Beef, With Mushrooms"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tenderloin Of Beef With Mushrooms"
      },
      {
        "from": [
          "C & C Imperial Dry",
          "C. & C. Imperial Dry"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "C. & C. Imperial Dry"
      },
      {
        "from": [
          "Filet Of Beef Aux Champignons",
          "Filet Of Beef, Aux Champignons"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Filet Of Beef Aux Champignons"
      },
      {
        "from": [
          "Chicken Patties (2)",
          "Chicken Patties [2]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicken Patties [2]"
      },
      {
        "from": [
          "King William V. O. P.",
          "King William, V. O. P."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "King William, V. O. P."
      },
      {
        "from": [
          "Sauce Tartare",
          "Tartare Sauce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tartare Sauce"
      },
      {
        "from": [
          "Olives, Stuffed",
          "Stuffed Olives."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Stuffed Olives."
      },
      {
        "from": [
          "Coffee With Cream, Per Cup",
          "Coffee, Per Cup, With Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coffee With Cream, Per Cup"
      },
      {
        "from": [
          "Saddle Rock Oysters Stew",
          "Saddle Rock Oysters, Stew"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Saddle Rock Oysters Stew"
      },
      {
        "from": [
          "Bermuda Potatoes Fondante",
          "Bermuda Potatoes, Fondante"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bermuda Potatoes, Fondante"
      },
      {
        "from": [
          "Laitue Braisee",
          "Laitue Braisée"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Laitue Braisée"
      },
      {
        "from": [
          "Soupe A L'oignon Gratinee",
          "Soupe Gratinée À L'oignon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Soupe Gratinée À L'oignon"
      },
      {
        "from": [
          "Lobster, Mayonnaise Sauce",
          "Lobster, Sauce Mayonnaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lobster, Mayonnaise Sauce"
      },
      {
        "from": [
          "Extra Sirloin Steak Bearnaise",
          "Extra Sirloin Steak, Bearnaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Extra Sirloin Steak Bearnaise"
      },
      {
        "from": [
          "Saddle Rock Oysters Raw On Shell",
          "Saddle Rock Oysters, Raw On Shell"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Saddle Rock Oysters Raw On Shell"
      },
      {
        "from": [
          "Baked Beans Boston Style",
          "Boston Style Baked Beans"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boston Style Baked Beans"
      },
      {
        "from": [
          "Ale, Bass",
          "Bass Ale"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bass Ale"
      },
      {
        "from": [
          "Schorle Weiss",
          "Schorle, Weiss"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schorle Weiss"
      },
      {
        "from": [
          "Glace A L'eau Citron",
          "Glace À L'eau Citron"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Glace À L'eau Citron"
      },
      {
        "from": [
          "Salade Coeurs De Romaine",
          "Salade De Coeurs De Romaine"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Salade Coeurs De Romaine"
      },
      {
        "from": [
          "Cauliflower Polonaise",
          "Cauliflower, Polonaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cauliflower Polonaise"
      },
      {
        "from": [
          "Bacon With Eggs",
          "Eggs With Bacon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bacon With Eggs"
      },
      {
        "from": [
          "Coffee, Turkish",
          "Turkish [coffee]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coffee, Turkish"
      },
      {
        "from": [
          "Poulet Saute Chasseur",
          "Poulet Sauté Chasseur"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Poulet Saute Chasseur"
      },
      {
        "from": [
          "Fried Beechnut Ham",
          "Fried Ham, Beechnut"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Beechnut Ham"
      },
      {
        "from": [
          "Macaroni Or Spaghetti Italienne",
          "Macaroni Or Spaghetti, Italienne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Macaroni Or Spaghetti Italienne"
      },
      {
        "from": [
          "Broiled Tripe",
          "Tripe, Broiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Tripe"
      },
      {
        "from": [
          "Poussin (broiled)",
          "Poussin, Broiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Poussin, Broiled"
      },
      {
        "from": [
          "Martell ***",
          "Martell, ***"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Martell ***"
      },
      {
        "from": [
          "Pommes De Terre, Douces",
          "Pommes De Terre: Douces"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pommes De Terre, Douces"
      },
      {
        "from": [
          "Bread And Butter, Extra",
          "Extra Bread And Butter"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Extra Bread And Butter"
      },
      {
        "from": [
          "Macon Red Burgundy",
          "Red Macon Burgundy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Macon Burgundy"
      },
      {
        "from": [
          "Halibut Parisienne",
          "Halibut, Parisienne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Halibut Parisienne"
      },
      {
        "from": [
          "Potatoes Macaire",
          "Potatoes, Macaire"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes Macaire"
      },
      {
        "from": [
          "Mutton Chops (loin) Two",
          "Two Loin Mutton Chops"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Two Loin Mutton Chops"
      },
      {
        "from": [
          "Curacao",
          "Curaçao"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Curaçao"
      },
      {
        "from": [
          "Omelette With Jelly",
          "Omelette, With Jelly"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Omelette With Jelly"
      },
      {
        "from": [
          "Suzette (salad)",
          "Suzette Salad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Suzette Salad"
      },
      {
        "from": [
          "\" \" With Truffles",
          "\" With Truffles"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "With Truffles"
      },
      {
        "from": [
          "Insalate Patate",
          "Insalate: Patate"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Insalate: Patate"
      },
      {
        "from": [
          "Champagne Veuve Clicquot",
          "Veuve Clicquot Champagne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Champagne Veuve Clicquot"
      },
      {
        "from": [
          "Pabst \"blue Ribbon\" Beer",
          "Pabst, Blue Ribbon Beer"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pabst, Blue Ribbon Beer"
      },
      {
        "from": [
          "Potatoes--fried",
          "Potatoes-fried"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes-Fried"
      },
      {
        "from": [
          "3 Eggs Scrambled",
          "Scrambled Eggs (3 Eggs)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Scrambled Eggs (3 Eggs)"
      },
      {
        "from": [
          "Essence De Tomates Potage",
          "Potage Essence De Tomates"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Essence De Tomates Potage"
      },
      {
        "from": [
          "Spring Chicken (half)",
          "Spring Chicken, Half"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Spring Chicken, Half"
      },
      {
        "from": [
          "Claret, Domestic",
          "Domestic Claret"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Claret, Domestic"
      },
      {
        "from": [
          "Fried Lynnhaven Oysters",
          "Lynnhaven Oysters, Fried"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Lynnhaven Oysters"
      },
      {
        "from": [
          "Sorbet Yvette",
          "Yvette Sorbet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Yvette Sorbet"
      },
      {
        "from": [
          "Broiled Or Fried Beechnut Ham",
          "Fried Or Broiled Ham, Beechnut"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Or Fried Beechnut Ham"
      },
      {
        "from": [
          "Coffee With Cream Served In Pot, Per Cup",
          "Coffee With Cream, Served In Pot, Per Cup"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coffee With Cream Served In Pot, Per Cup"
      },
      {
        "from": [
          "Entrecote",
          "Entrecôte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Entrecôte"
      },
      {
        "from": [
          "Coffee Special",
          "Special [coffee]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coffee Special"
      },
      {
        "from": [
          "Souffle Of Tomatoes",
          "Soufflé Of Tomatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Soufflé Of Tomatoes"
      },
      {
        "from": [
          "Soft Shell Clams, Steamed",
          "Steamed Soft Shell Clams"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Steamed Soft Shell Clams"
      },
      {
        "from": [
          "Spring Lamb Roast",
          "[roast] Spring Lamb"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Spring Lamb Roast"
      },
      {
        "from": [
          "Squab (roast)",
          "Squab, Roast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Squab, Roast"
      },
      {
        "from": [
          "Creamed Little Neck Clams, Pimento",
          "Little Neck Clams, Creamed, Pimento"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Creamed Little Neck Clams, Pimento"
      },
      {
        "from": [
          "Bulgarzoon (scientifically Fermented Milk), Per Bottle With Vichy",
          "Bulgarzoon (scientifically Fermented Milk), Per Bottle; With Vichy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bulgarzoon (scientifically Fermented Milk), Per Bottle With Vichy"
      },
      {
        "from": [
          "Potatoes Croquettes",
          "Potatoes, Croquettes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes Croquettes"
      },
      {
        "from": [
          "Asparagus Tips (salad)",
          "Salad, Asparagus Tips"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Asparagus Tips Salad"
      },
      {
        "from": [
          "Seltzer Syphon",
          "Seltzer, Syphon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Seltzer Syphon"
      },
      {
        "from": [
          "Niersteiner (rhine Wine)",
          "Rhine Wine, Niersteiner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rhine Wine, Niersteiner"
      },
      {
        "from": [
          "Mushrooms Extra",
          "Mushrooms, Extra"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mushrooms Extra"
      },
      {
        "from": [
          "Macedoine De Legumes",
          "Macedoine De Légumes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Macedoine De Légumes"
      },
      {
        "from": [
          "Lallah Rookh Punch",
          "Punch Lallah Rookh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lallah Rookh Punch"
      },
      {
        "from": [
          "Cup Tea",
          "Tea (cup)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cup Tea"
      },
      {
        "from": [
          "Clysmic Mineral Water",
          "Mineral Water, Clysmic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mineral Water, Clysmic"
      },
      {
        "from": [
          "Little-neck Clams Stew",
          "Little-neck Clams, Stew"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Little-neck Clams, Stew"
      },
      {
        "from": [
          "Green Peppers Stuffed",
          "Green Peppers, Stuffed"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Green Peppers, Stuffed"
      },
      {
        "from": [
          "G. H. Mumm & Co's Selected Brut",
          "G. H. Mumm & Co's. Selected Brut"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "G. H. Mumm & Co's. Selected Brut"
      },
      {
        "from": [
          "Omelette Celestine",
          "Omelette Célestine"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Omelette Célestine"
      },
      {
        "from": [
          "Moselle - - Sparkling",
          "Sparkling Moselle"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sparkling Moselle"
      },
      {
        "from": [
          "Leg Of Beef With Roots Soup",
          "Leg Of Beef [soup] With Roots"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Leg Of Beef With Roots Soup"
      },
      {
        "from": [
          "Dutch Cheese, Imported",
          "Imported Dutch Cheese"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Imported Dutch Cheese"
      },
      {
        "from": [
          "Fried Country Sausages - Mashed Potatoes",
          "Fried Country Sausages, Mashed Potatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Country Sausages, Mashed Potatoes"
      },
      {
        "from": [
          "Little Neck Clams Cream Stew",
          "Little Neck Clams, Cream Stew"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Little Neck Clams Cream Stew"
      },
      {
        "from": [
          "Sardines Sandwich",
          "Sardines [sandwich]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sardines Sandwich"
      },
      {
        "from": [
          "Broiled Or Fried Smelts",
          "Fried Or Broiled Smelts"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Or Broiled Smelts"
      },
      {
        "from": [
          "Lalla Rookh Sorbet",
          "Sorbet Lalla Rookh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lalla Rookh Sorbet"
      },
      {
        "from": [
          "Half Planked Roe Shad",
          "Planked Roe Shad, Half"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Half Planked Roe Shad"
      },
      {
        "from": [
          "Pieces Montees",
          "Pièces Montées"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pieces Montees"
      },
      {
        "from": [
          "Potatoes - Stewed In Cream",
          "Potatoes: Stewed In Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes - Stewed In Cream"
      },
      {
        "from": [
          "Porterhouse Steak Béarnaise",
          "Porterhouse Steak, Bearnaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Porterhouse Steak Béarnaise"
      },
      {
        "from": [
          "Fancy Ices In Forms",
          "Ices In Fancy Forms"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fancy Ices In Forms"
      },
      {
        "from": [
          "Francois President Brut",
          "François President Brut"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Francois President Brut"
      },
      {
        "from": [
          "Omelet Lyonnaise",
          "Omelet, Lyonnaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Omelet Lyonnaise"
      },
      {
        "from": [
          "Egg Fried Sandwich",
          "Fried Egg [sandwich]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Egg Fried Sandwich"
      },
      {
        "from": [
          "Oatmeal With Milk",
          "Oatmeal, With Milk"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oatmeal With Milk"
      },
      {
        "from": [
          "Small Sirloin Steak Planked",
          "Small Sirloin Steak, Planked"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Small Sirloin Steak Planked"
      },
      {
        "from": [
          "Beechnut Bacon, Broiled Or Fried",
          "Fried Or Broiled Bacon, Beechnut"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Beechnut Bacon, Broiled Or Fried"
      },
      {
        "from": [
          "Eggs Poached",
          "Eggs, Poached"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eggs Poached"
      },
      {
        "from": [
          "Roast Stuffed Vermont Turkey, Cranberry Sauce",
          "Roast Vermont Turkey, Stuffed, Cranberry Sauce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Roast Stuffed Vermont Turkey, Cranberry Sauce"
      },
      {
        "from": [
          "Huitres Lynnhaven",
          "Huîtres Lynnhaven"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Huitres Lynnhaven"
      },
      {
        "from": [
          "Hot Milk",
          "Milk, Hot"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hot Milk"
      },
      {
        "from": [
          "Salmon Steak",
          "Steak Salmon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Salmon Steak"
      },
      {
        "from": [
          "Cigars Havana, No. 1",
          "Havana, No. 1 Cigars"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cigars Havana, No. 1"
      },
      {
        "from": [
          "Potatoes Gratinees, Delmonicos",
          "Potatoes Gratinées, Delmonicos"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes Gratinees, Delmonicos"
      },
      {
        "from": [
          "Calves Liver & Bacon",
          "Calves' Liver & Bacon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Calves Liver & Bacon"
      },
      {
        "from": [
          "Peches Pie",
          "Pie Peches"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Peches Pie"
      },
      {
        "from": [
          "Fried Oysters, Meuniere",
          "Oysters Fried, Meuniere"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Oysters, Meuniere"
      },
      {
        "from": [
          "Potatoes - Saratoga Chips",
          "Potatoes Saratoga Chips"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes Saratoga Chips"
      },
      {
        "from": [
          "Macedoine",
          "Macédoine"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Macédoine"
      },
      {
        "from": [
          "*gervais Cheese",
          "Cheese, Gervais"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cheese, Gervais"
      },
      {
        "from": [
          "Oysters Boston Stew",
          "Oysters: Boston Stew"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oysters Boston Stew"
      },
      {
        "from": [
          "Roast Capon, Stuffed",
          "Roast Stuffed Capon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Roast Stuffed Capon"
      },
      {
        "from": [
          "Cream Dubarry Soup",
          "Cream Soup, Dubarry"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cream Dubarry Soup"
      },
      {
        "from": [
          "Cocktail Sauce (extra)",
          "Extra Cocktail Sauce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Extra Cocktail Sauce"
      },
      {
        "from": [
          "Dry Monopole Champagne, Red Top",
          "Dry Monopole, Red Top Champagne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dry Monopole Champagne, Red Top"
      },
      {
        "from": [
          "Cigars Manilla",
          "Manilla Cigars"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manilla Cigars"
      },
      {
        "from": [
          "Supreme Of Grape Fruit, Maraschino",
          "Suprême Of Grape Fruit, Maraschino"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Suprême Of Grape Fruit, Maraschino"
      },
      {
        "from": [
          "Consomme (cup)",
          "Consomme, Cup"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Consomme, Cup"
      },
      {
        "from": [
          "Slic Tomatoe",
          "Slic. Tomatoe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Slic Tomatoe"
      },
      {
        "from": [
          "Homard Salade",
          "Salade: Homard"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Homard Salade"
      },
      {
        "from": [
          "Sea Food Exquisite",
          "Sea Food, Exquisite"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sea Food, Exquisite"
      },
      {
        "from": [
          "Carstair's Rye",
          "Carstairs Rye"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Carstair's Rye"
      },
      {
        "from": [
          "Veal Cutlet Breaded With Tomato Sauce",
          "Veal Cutlet, Breaded With Tomato Sauce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Veal Cutlet Breaded With Tomato Sauce"
      },
      {
        "from": [
          "Phila Chicken Stuffed, Giblet Sauce",
          "Phila. Chicken Stuffed, Giblet Sauce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Phila Chicken Stuffed, Giblet Sauce"
      },
      {
        "from": [
          "Roast Duckling",
          "Roast, Duckling"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Roast Duckling"
      },
      {
        "from": [
          "Graves Bordeaux (white)",
          "Graves Bordeaux, White"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Graves Bordeaux, White"
      },
      {
        "from": [
          "Little Necks Cocktail",
          "Little Necks, Cocktail"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Little Necks Cocktail"
      },
      {
        "from": [
          "Chateau La Rose Claret",
          "Claret: Chateau La Rose"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chateau La Rose Claret"
      },
      {
        "from": [
          "Trout Meunière",
          "[trout] Meunière"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Trout Meunière"
      },
      {
        "from": [
          "Hennessey *** Brandy",
          "Hennessey Brandy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hennessey Brandy"
      },
      {
        "from": [
          "Picked Codfish In Cream",
          "Picked Codfish, In Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Picked Codfish In Cream"
      },
      {
        "from": [
          "Swiss (cheese)",
          "Swiss [cheese]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Swiss Cheese"
      },
      {
        "from": [
          "Omelets With Cheese",
          "Omelets, With Cheese"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Omelets With Cheese"
      },
      {
        "from": [
          "Cheese, Neufchatel",
          "Neufchâtel Cheese"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Neufchâtel Cheese"
      },
      {
        "from": [
          "Filet Of Sea Bass Saute, Meuniere",
          "Filet Of Sea Bass, Saute, Meuniere"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Filet Of Sea Bass, Saute, Meuniere"
      },
      {
        "from": [
          "Carstair's Whiskey",
          "Carstairs Whiskey"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Carstair's Whiskey"
      },
      {
        "from": [
          "Sherry Dry",
          "Sherry, Dry"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sherry Dry"
      },
      {
        "from": [
          "Boiled Chickens With Pork",
          "Boiled Chickens, With Pork"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boiled Chickens With Pork"
      },
      {
        "from": [
          "Frogs Legs, Poulette",
          "Frogs' Legs, Poulette"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Frogs Legs, Poulette"
      },
      {
        "from": [
          "Potatoes Whipped In Cream",
          "Whipped In Cream Potatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes Whipped In Cream"
      },
      {
        "from": [
          "Evan's Ale",
          "Evans' Ale"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Evan's Ale"
      },
      {
        "from": [
          "Rheinpfalz Wachenheimer Schenkenbohl",
          "Rheinpfalz Wachenheimer Schenkenböhl"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rheinpfalz Wachenheimer Schenkenböhl"
      },
      {
        "from": [
          "Bowl Assorted Seasonable Fruits With Force, Individual Bottle Half And Half",
          "Bowl Assorted Seasonable Fruits With Force, Individual Bottle, Half And Half"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bowl Assorted Seasonable Fruits With Force, Individual Bottle, Half And Half"
      },
      {
        "from": [
          "Saute Smelts, Amandine",
          "Smelts Saute, Amandine"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Smelts Saute, Amandine"
      },
      {
        "from": [
          "Celeris",
          "Céleris"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Céleris"
      },
      {
        "from": [
          "Oysters, Broiled With Bacon",
          "Oysters, Broiled, With Bacon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oysters, Broiled With Bacon"
      },
      {
        "from": [
          "Boston Box Oyster Stew",
          "Oyster Boston Box Stew"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oyster Boston Box Stew"
      },
      {
        "from": [
          "Chicken Salad Mayonnaise",
          "Chicken, Mayonnaise Salad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicken Salad Mayonnaise"
      },
      {
        "from": [
          "Consomme Cold",
          "Consomme, Cold"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Consomme Cold"
      },
      {
        "from": [
          "English Sole Fried",
          "Fried English Sole"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "English Sole Fried"
      },
      {
        "from": [
          "Sauce Remoulade",
          "Sauce Rémoulade"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sauce Rémoulade"
      },
      {
        "from": [
          "New Pickled Beets",
          "Pickled New Beets"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Pickled Beets"
      },
      {
        "from": [
          "Potatoes, Southern Style",
          "Southern Style Potatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Southern Style Potatoes"
      },
      {
        "from": [
          "Mince [pie]",
          "Pie, Mince"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mince [Pie]"
      },
      {
        "from": [
          "Browned Corned Beef Hash With Poached Egg",
          "Corned Beef Hash, Browned With Poached Egg"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Browned Corned Beef Hash With Poached Egg"
      },
      {
        "from": [
          "Plain Scrambled Eggs",
          "Scrambled Eggs Plain"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Plain Scrambled Eggs"
      },
      {
        "from": [
          "Coffee Cup",
          "Cup Coffee"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coffee Cup"
      },
      {
        "from": [
          "Turkey (cold)",
          "Turkey [cold]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Turkey (Cold)"
      },
      {
        "from": [
          "Pommery & Greno Brut Champagne",
          "Pommery & Greno, Brut Champagne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pommery & Greno Brut Champagne"
      },
      {
        "from": [
          "Clams Steamed In Shell",
          "Steamed Clams In Shell"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clams Steamed In Shell"
      },
      {
        "from": [
          "Lobster Broiled Half",
          "Lobster Broiled, Half"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lobster Broiled Half"
      },
      {
        "from": [
          "Eggs A La Cocote",
          "Eggs, A La Cocote"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eggs A La Cocote"
      },
      {
        "from": [
          "Consomme, Hot Or Cold, In Cup",
          "Hot Or Cold Consomme In Cup"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hot Or Cold Consomme In Cup"
      },
      {
        "from": [
          "Creamed Oysters, Pimento",
          "Oysters Creamed, Pimento"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Creamed Oysters, Pimento"
      },
      {
        "from": [
          "Potatoes - Fried",
          "Potatoes Fried"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes Fried"
      },
      {
        "from": [
          "Eggs - Boiled",
          "Eggs Boiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eggs Boiled"
      },
      {
        "from": [
          "Potatoes, Rissolees",
          "Rissolees Potatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rissolees Potatoes"
      },
      {
        "from": [
          "Broiled Lamb Chops On Toast",
          "Lamb Chops Broiled On Toast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Lamb Chops On Toast"
      },
      {
        "from": [
          "Orange Juice Glass",
          "Orange Juice, Glass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Orange Juice Glass"
      },
      {
        "from": [
          "Canadian Cheese (per Person)",
          "Canadian Cheese, Per Person"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Canadian Cheese, Per Person"
      },
      {
        "from": [
          "Modern Salad",
          "Salad Modern"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Modern Salad"
      },
      {
        "from": [
          "Dipped [toast]",
          "Toast, Dipped"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Toast, Dipped"
      },
      {
        "from": [
          "Macaroni With Cheese",
          "Macaroni, With Cheese"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Macaroni With Cheese"
      },
      {
        "from": [
          "Martini (extra Dry)",
          "Martini Extra Dry"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Martini Extra Dry"
      },
      {
        "from": [
          "Coeur De Palmier, Hollandaise Sauce",
          "Coeur De Palmier, Sauce Hollandaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coeur De Palmier, Hollandaise Sauce"
      },
      {
        "from": [
          "Broiled Salt Mackeral",
          "Salt Mackeral, Broiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Salt Mackeral"
      },
      {
        "from": [
          "Fried Or Broiled Ham",
          "Ham, Broiled Or Fried"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Or Broiled Ham"
      },
      {
        "from": [
          "Tenderloin Steak Sauce Bearnaise",
          "Tenderloin Steak, Sauce Bearnaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tenderloin Steak, Sauce Bearnaise"
      },
      {
        "from": [
          "Cold A La Mode Beef",
          "Cold Beef A La Mode"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cold Beef A La Mode"
      },
      {
        "from": [
          "Bluefish, Broiled",
          "Broiled Blue-fish"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Blue-fish"
      },
      {
        "from": [
          "Tongue [cold]",
          "[cold] Tongue"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tongue [Cold]"
      },
      {
        "from": [
          "Potatoes, Surprise",
          "Surprise Potatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Surprise Potatoes"
      },
      {
        "from": [
          "Brandy, Mounie F.O.B.",
          "Mounie, F.O.B. Brandy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mounie, F.O.B. Brandy"
      },
      {
        "from": [
          "Grouse, Half",
          "Half Grouse"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Half Grouse"
      },
      {
        "from": [
          "Fricasseed Oysters",
          "Oysters Fricasseed"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fricasseed Oysters"
      },
      {
        "from": [
          "Chipped Beef And Scrambled Eggs",
          "Scrambled Eggs And Chipped Beef"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Scrambled Eggs And Chipped Beef"
      },
      {
        "from": [
          "Minced Ham With Scrambled Eggs",
          "Scrambled Eggs With Minced Ham"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Scrambled Eggs With Minced Ham"
      },
      {
        "from": [
          "Eggs Poached, On Toast",
          "Poached Eggs, On Toast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Poached Eggs, On Toast"
      },
      {
        "from": [
          "Bouillon En Tasse With Egg",
          "Bouillon With Egg En Tasse"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bouillon En Tasse With Egg"
      },
      {
        "from": [
          "Oyster (sandwich)",
          "Oyster [sandwich]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oyster (Sandwich)"
      },
      {
        "from": [
          "133 Pauillac, Château Pichon-longueville-lalande (grand Cru Classé) 1960",
          "133 Pauillac, Château Pichon-longueville-lalande (grand Cru Classé)...... 1960"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "133 Pauillac, Château Pichon-longueville-lalande (grand Cru Classé) 1960"
      },
      {
        "from": [
          "Mutton Chops [2]",
          "Mutton Chops, (2)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mutton Chops [2]"
      },
      {
        "from": [
          "Spring Chicken Broiled, Whole",
          "Spring Chicken, Broiled, Whole"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Spring Chicken Broiled, Whole"
      },
      {
        "from": [
          "Pommes De Terre Château",
          "Pommes De Terre, Chateau"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pommes De Terre Château"
      },
      {
        "from": [
          "Planked Chicken, Whole",
          "Planked Whole Chicken"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Planked Whole Chicken"
      },
      {
        "from": [
          "Little Neck Clams Raw",
          "Raw Little Neck Clams"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Little Neck Clams Raw"
      },
      {
        "from": [
          "Broiled Veal Kidneys",
          "Veal Kidneys, Broiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Veal Kidneys"
      },
      {
        "from": [
          "Consomme Hot",
          "Hot Consomme"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hot Consomme"
      },
      {
        "from": [
          "Cafe Special",
          "Special Cafe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe Special"
      },
      {
        "from": [
          "Ox-tail A L'anglaise Soup",
          "Oxtail Soup A L'anglaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ox-tail A L'anglaise Soup"
      },
      {
        "from": [
          "Steinberger Cabinet",
          "Steinberger, Cabinet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Steinberger Cabinet"
      },
      {
        "from": [
          "Lynnhaven Or Saddle Rock Oysters Raw On Shell",
          "Lynnhaven Or Saddle Rock Oysters, Raw On Shell"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lynnhaven Or Saddle Rock Oysters, Raw On Shell"
      },
      {
        "from": [
          "Gateaux Varies",
          "Gâteaux Variés"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gâteaux Variés"
      },
      {
        "from": [
          "Peach [pie]",
          "Pie, Peach"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Peach Pie"
      },
      {
        "from": [
          "Tea With Milk",
          "Tea, With Milk"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tea With Milk"
      },
      {
        "from": [
          "Milk Oyster Stew",
          "Oyster Stew, Milk"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Milk Oyster Stew"
      },
      {
        "from": [
          "Consomme Du Jour",
          "Consommé Du Jour"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Consommé Du Jour"
      },
      {
        "from": [
          "Oatmeal With Bottle Of Milk",
          "Oatmeal, With Bottle Of Milk"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oatmeal With Bottle Of Milk"
      },
      {
        "from": [
          "Nesselrode Pouding",
          "Pouding, Nesselrode"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nesselrode Pouding"
      },
      {
        "from": [
          "Eastern Oysters, Fancy Roast On Toast",
          "Fancy Roast Eastern Oysters On Toast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fancy Roast Eastern Oysters On Toast"
      },
      {
        "from": [
          "Fried Pork Chops",
          "Pork Chops, Fried"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Pork Chops"
      },
      {
        "from": [
          "Pontet Canet Barton & Guestier",
          "Pontet Canet, Barton & Guestier"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pontet Canet Barton & Guestier"
      },
      {
        "from": [
          "Strawberries With Whipped Cream",
          "Strawberries, With Whipped Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Strawberries With Whipped Cream"
      },
      {
        "from": [
          "Goose Apple Sauce",
          "Goose, Apple Sauce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Goose Apple Sauce"
      },
      {
        "from": [
          "Piesporter Moselle Wine, 1911",
          "Piesporter, 1911, Moselle Wine"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Piesporter Moselle Wine, 1911"
      },
      {
        "from": [
          "Piper Heidsieck Sec Champagne",
          "Piper Heidsieck, Sec Champagne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Piper Heidsieck Sec Champagne"
      },
      {
        "from": [
          "Lobster Half",
          "Lobster, Half"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lobster, Half"
      },
      {
        "from": [
          "Home-made Grape Jelly",
          "Home=made Grape Jelly"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Home-made Grape Jelly"
      },
      {
        "from": [
          "Doucette Salade",
          "Salade Doucette"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Salade Doucette"
      },
      {
        "from": [
          "Bresilienne Salad",
          "Salad Bresilienne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bresilienne Salad"
      },
      {
        "from": [
          "Chartreuse (yellow)",
          "Yellow Chartreuse"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Yellow Chartreuse"
      },
      {
        "from": [
          "Dewar's White Label",
          "Dewar's, White Label"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dewar's White Label"
      },
      {
        "from": [
          "Breast Of Turkey Stuffed, Deviled Sauce",
          "Breast Of Turkey, Stuffed, Deviled Sauce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breast Of Turkey, Stuffed, Deviled Sauce"
      },
      {
        "from": [
          "Hashed With Cream Potatoes",
          "Potatoes Hashed, With Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hashed With Cream Potatoes"
      },
      {
        "from": [
          "Tea (hot Or Iced)",
          "Tea, Hot Or Iced"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tea, Hot Or Iced"
      },
      {
        "from": [
          "Tomatencremesuppe, 1/2 Poulet Gebraten, Pommes Frites, Gemuse, Salat",
          "Tomatencremesuppe, 1/2 Poulet Gebraten, Pommes Frites, Gemüse, Salat"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tomatencremesuppe, 1/2 Poulet Gebraten, Pommes Frites, Gemüse, Salat"
      },
      {
        "from": [
          "Beef Consomme (hot)",
          "Hot Beef Consomme"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hot Beef Consomme"
      },
      {
        "from": [
          "Petits Fours Sec",
          "Petits Fours, Sec"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Petits Fours Sec"
      },
      {
        "from": [
          "Gombo De Volaille Creole",
          "Gombo De Volaille, Creole"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gombo De Volaille Creole"
      },
      {
        "from": [
          "Eggs Scrambled With Cheese",
          "Eggs, Scrambled With Cheese"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eggs Scrambled With Cheese"
      },
      {
        "from": [
          "Salat: Kartoffel",
          "Salat: Kartoffel-"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Salat: Kartoffel"
      },
      {
        "from": [
          "Chicken Croquette With Peas",
          "Chicken Croquette, With Peas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicken Croquette With Peas"
      },
      {
        "from": [
          "French Vichy Celestins",
          "French Vichy, Celestins"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "French Vichy Celestins"
      },
      {
        "from": [
          "Red-head Duck",
          "Redhead Duck"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Redhead Duck"
      },
      {
        "from": [
          "96 Gewürztraminer <<gaensbroennel>> (originalabfüllung Ed. Héring) 1969",
          "96 Gewürztraminer <<gaensbroennel>> (originalabfüllung Ed. Héring)...... 1969"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "96 Gewürztraminer <<gaensbroennel>> (originalabfüllung Ed. Héring) 1969"
      },
      {
        "from": [
          "Chateau St. Bris (bordeaux White)",
          "Chateau St. Bris Bordeaux (white)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chateau St. Bris Bordeaux (White)"
      },
      {
        "from": [
          "Broiled Live Lobster, Whole",
          "Lobster, Broiled Live, Whole"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lobster, Broiled Live, Whole"
      },
      {
        "from": [
          "*lobster, Bordelaise",
          "Lobster, Bordelaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lobster, Bordelaise"
      },
      {
        "from": [
          "F & M Schaefer Brewing Co",
          "F. & M. Schaefer Brewing Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "F. & M. Schaefer Brewing Co."
      },
      {
        "from": [
          "Benedictine Sherbet",
          "Sherbet Benedictine"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sherbet Benedictine"
      },
      {
        "from": [
          "Eggs, Scrambled With Sardines",
          "Scrambled Eggs With Sardines"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Scrambled Eggs With Sardines"
      },
      {
        "from": [
          "Hashed Potatoes Browned",
          "Hashed, Browned Potatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hashed, Browned Potatoes"
      },
      {
        "from": [
          "Boiled Short Ribs Of Beef, Bouillon Potatoes, Horseradish Sauce",
          "Boiled Short Ribs Of Beef, Horseradish Sauce, Bouillon Potatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boiled Short Ribs Of Beef, Horseradish Sauce, Bouillon Potatoes"
      },
      {
        "from": [
          "Potatoes Sarah Bernhardt",
          "Sarah Bernhardt Potatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sarah Bernhardt Potatoes"
      },
      {
        "from": [
          "Half Shell Blue Points",
          "Half Shell, Blue Points"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Half Shell Blue Points"
      },
      {
        "from": [
          "Planked Steak (for 2)",
          "Planked Steak For 2"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Planked Steak For 2"
      },
      {
        "from": [
          "Burgundy: Clos De Vougeot",
          "Clos De Vougeot Burgundy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clos De Vougeot Burgundy"
      },
      {
        "from": [
          "Boiled Chicken Halibut, Hollandaise Sauce",
          "Boiled Chicken Halibut, Sauce Hollandaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boiled Chicken Halibut, Hollandaise Sauce"
      },
      {
        "from": [
          "Calf's Head Vinaigrette",
          "Calfs Head, Vinaigrette"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Calf's Head Vinaigrette"
      },
      {
        "from": [
          "Especially Selected Carafes Of Imported Wines, Red & White",
          "Especially Selected Carafes Of Imported Wines, Red & White ~"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Especially Selected Carafes Of Imported Wines, Red & White"
      },
      {
        "from": [
          "Pot De Creme Vanille",
          "Pot De Crème Vanille"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pot De Crème Vanille"
      },
      {
        "from": [
          "Sauce Tartar",
          "Tartar Sauce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tartar Sauce"
      },
      {
        "from": [
          "Crab Ravigotte",
          "Crab, Ravigotte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Crab Ravigotte"
      },
      {
        "from": [
          "Recollet",
          "Récollet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Récollet"
      },
      {
        "from": [
          "Barton & Guestier Sauternes",
          "Sauternes Barton & Guestier"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sauternes Barton & Guestier"
      },
      {
        "from": [
          "Guinness' Stout Splits",
          "Guinness' Stout, Splits"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Guinness' Stout, Splits"
      },
      {
        "from": [
          "Creme De Menthe (green)",
          "Green Creme De Menthe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Green Creme De Menthe"
      },
      {
        "from": [
          "Clams Cocktail",
          "Cocktail Clams"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clams Cocktail"
      },
      {
        "from": [
          "Cigarettes, Murad",
          "Murad Cigarettes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Murad Cigarettes"
      },
      {
        "from": [
          "Black Tea, Per Cup",
          "Tea, Black, Per Cup"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Black Tea, Per Cup"
      },
      {
        "from": [
          "Egg Shake With Milk",
          "Milk Shake With Egg"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Milk Shake With Egg"
      },
      {
        "from": [
          "Ruinart Vin Brut",
          "Ruinart, Vin Brut"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ruinart Vin Brut"
      },
      {
        "from": [
          "Baked Oysters Casino",
          "Baked Oysters, Casino"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Baked Oysters Casino"
      },
      {
        "from": [
          "Broma Per Pot",
          "Broma, Per Pot"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broma, Per Pot"
      },
      {
        "from": [
          "Cape Cods Half Shell",
          "Half Shell, Cape Cods"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Half Shell, Cape Cods"
      },
      {
        "from": [
          "Assorted Cold Meat",
          "Assorted Meat [cold]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Assorted Cold Meat"
      },
      {
        "from": [
          "Spaghetti Italian Style",
          "Spaghetti, Italian Style"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Spaghetti Italian Style"
      },
      {
        "from": [
          "Grape Fruit, Ice Cold",
          "Ice Cold Grape Fruit"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ice Cold Grape Fruit"
      },
      {
        "from": [
          "Pork Chops Breaded",
          "Pork Chops, Breaded"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pork Chops, Breaded"
      },
      {
        "from": [
          "Sweet Peppers Saute",
          "Sweet Peppers Sauté"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sweet Peppers Sauté"
      },
      {
        "from": [
          "Assmannshauser (red)",
          "Assmannshauser, Red"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Assmannshauser, Red"
      },
      {
        "from": [
          "Coffee, Chocolate Or Vanilla Eclairs",
          "Vanilla, Chocolate Or Coffee Eclairs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coffee, Chocolate Or Vanilla Eclairs"
      },
      {
        "from": [
          "Deviled Stuffed Crabs",
          "Stuffed Deviled Crabs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Deviled Stuffed Crabs"
      },
      {
        "from": [
          "Lettuce & Tomato Salad",
          "Lettuce Tomato Salad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lettuce & Tomato Salad"
      },
      {
        "from": [
          "Lettuce Salad With Tomatoes",
          "Lettuce With Tomatoes Salad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lettuce With Tomatoes Salad"
      },
      {
        "from": [
          "Consomme Per Cup",
          "Consommé Per Cup"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Consommé Per Cup"
      },
      {
        "from": [
          "Cliquot Yellow Label",
          "Cliquot, Yellow Label"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cliquot Yellow Label"
      },
      {
        "from": [
          "Fried Scallops Tartar Sauce",
          "Fried Scallops, Sauce Tartar"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Scallops Tartar Sauce"
      },
      {
        "from": [
          "Moet & Chandon's (white Seal)",
          "Moet & Chandon's White Seal"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Moet & Chandon's White Seal"
      },
      {
        "from": [
          "Fried Perch, Remoulade Sauce",
          "Fried Perch, Sauce Remoulade"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Perch, Sauce Remoulade"
      },
      {
        "from": [
          "Broiled Half Spring Chicken On Toast",
          "Broiled Spring Chicken On Toast, Half"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Half Spring Chicken On Toast"
      },
      {
        "from": [
          "Special Coffee (to Order), Per Cup",
          "Special Coffee, To Order, Per Cup"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Special Coffee, To Order, Per Cup"
      },
      {
        "from": [
          "Cheese, Gruyere",
          "Gruyère Cheese"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gruyère Cheese"
      },
      {
        "from": [
          "Blue Point Oysters, Fried",
          "Fried Blue Point Oysters"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Blue Point Oysters"
      },
      {
        "from": [
          "Home-made Cookies",
          "Homemade Cookies"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Homemade Cookies"
      },
      {
        "from": [
          "Burgundy - -nuits",
          "Nuits Burgundy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nuits Burgundy"
      },
      {
        "from": [
          "Chicken Saute, Marengo",
          "Chicken, Saute Marengo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicken, Saute Marengo"
      },
      {
        "from": [
          "Bearnaise Sauce",
          "Sauce Béarnaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bearnaise Sauce"
      },
      {
        "from": [
          "Gelee De Groseilles",
          "Gelée De Groseilles"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gelée De Groseilles"
      },
      {
        "from": [
          "Chicken Okra Soup, Creole",
          "Chicken Okra, Creole Soup"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicken Okra, Creole Soup"
      },
      {
        "from": [
          "Ris De Veau Financiere",
          "Ris De Veau Financière"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ris De Veau Financière"
      },
      {
        "from": [
          "Consommé Vermicelli",
          "Vermicelli Consomme"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Consommé Vermicelli"
      },
      {
        "from": [
          "Coffee With Cream, Per Pot",
          "Coffee, Per Pot With Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coffee With Cream, Per Pot"
      },
      {
        "from": [
          "Broiled Green Blue-fish",
          "Broiled Green Bluefish"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Green Bluefish"
      },
      {
        "from": [
          "Cape Cod Oysters, Half Doz.",
          "[cape Cod Oysters] Half Doz."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cape Cod Oysters, Half Doz."
      },
      {
        "from": [
          "Saddle Rock Oysters Raw, Dozen",
          "Saddle Rock Oysters, Raw, Dozen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Saddle Rock Oysters Raw, Dozen"
      },
      {
        "from": [
          "Ox-tail Soup",
          "Oxtail Soup"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ox-tail Soup"
      },
      {
        "from": [
          "Cardinal Sorbet",
          "Sorbet Cardinal"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sorbet Cardinal"
      },
      {
        "from": [
          "Coate's Plymouth Gin",
          "Coates' Plymouth Gin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coate's Plymouth Gin"
      },
      {
        "from": [
          "Half Lobster, Mayonnaise",
          "Lobster, Mayonnaise (half)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Half Lobster, Mayonnaise"
      },
      {
        "from": [
          "Fry Oysters",
          "Oysters, Fry"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fry Oysters"
      },
      {
        "from": [
          "Duckling (half)",
          "Half Duckling"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Half Duckling"
      },
      {
        "from": [
          "Ice Cream Mixed",
          "Mixed [ice Cream]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ice Cream Mixed"
      },
      {
        "from": [
          "*mashed Potatoes",
          "Mashed [potatoes]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mashed Potatoes"
      },
      {
        "from": [
          "Tripes A La Mode De Caen",
          "Tripes À La Mode De Caen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tripes À La Mode De Caen"
      },
      {
        "from": [
          "Little Necks Steamed",
          "Little Necks, Steamed"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Little Necks Steamed"
      },
      {
        "from": [
          "Salade Tomates",
          "Tomates Salade"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tomates Salade"
      },
      {
        "from": [
          "Green Turtle A L'americaine",
          "Green Turtle À L'américaine"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Green Turtle À L'américaine"
      },
      {
        "from": [
          "Sirloin For One",
          "Sirloin, For One"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sirloin For One"
      },
      {
        "from": [
          "Cigars Havana, No. 2",
          "Havana No. 2 Cigars"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Havana No. 2 Cigars"
      },
      {
        "from": [
          "Beef Consomme (cold)",
          "Cold Beef Consomme"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cold Beef Consomme"
      },
      {
        "from": [
          "Apollinaris (splits)",
          "Apollinaris, Splits"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Apollinaris, Splits"
      },
      {
        "from": [
          "Sweet Potatoes Browned",
          "Sweet Potatoes, Browned"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sweet Potatoes Browned"
      },
      {
        "from": [
          "Consomme De Volaille En Tasses",
          "Consommé De Volaille En Tasses"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Consommé De Volaille En Tasses"
      },
      {
        "from": [
          "Pommes De Terre Hollandaise",
          "Pommes De Terre, Hollandaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pommes De Terre, Hollandaise"
      },
      {
        "from": [
          "Camembert, Domestic",
          "Domestic Camembert"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Domestic Camembert"
      },
      {
        "from": [
          "Cream Oyster Stew",
          "Oyster Stew, Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cream Oyster Stew"
      },
      {
        "from": [
          "Oysters Steamed",
          "Oysters, Steamed"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oysters, Steamed"
      },
      {
        "from": [
          "Fresh Stewed Tomatoes",
          "Stewed Fresh Tomatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fresh Stewed Tomatoes"
      },
      {
        "from": [
          "G H Mumms (extra Dry)",
          "G. H. Mumm's (extra Dry)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "G. H. Mumm's (Extra Dry)"
      },
      {
        "from": [
          "Marquise Potatoes",
          "Potatoes, Marquise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Marquise Potatoes"
      },
      {
        "from": [
          "Eggs, Scrambled With Ham Or Bacon",
          "Scrambled Eggs With Ham Or Bacon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Scrambled Eggs With Ham Or Bacon"
      },
      {
        "from": [
          "Crab Meat Mornay",
          "Crab Meat, Mornay"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Crab Meat Mornay"
      },
      {
        "from": [
          "Curacao, Orange",
          "Orange Curacao"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Orange Curacao"
      },
      {
        "from": [
          "Tongue A L'ecarlate",
          "Tongue À L'ecarlate"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tongue À L'ecarlate"
      },
      {
        "from": [
          "Glass Milk",
          "Milk Glass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Milk Glass"
      },
      {
        "from": [
          "Hors D'oeuvres Varie",
          "Hors D'oeuvres, Varie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hors D'oeuvres Varie"
      },
      {
        "from": [
          "Tenderloin Steak For Two",
          "Tenderloin Steak, For Two"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tenderloin Steak For Two"
      },
      {
        "from": [
          "Demi Poulet",
          "Poulet (demi)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Demi Poulet"
      },
      {
        "from": [
          "Half Squab Chicken, Maryland",
          "Squab Chicken (half) Maryland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Half Squab Chicken, Maryland"
      },
      {
        "from": [
          "\"bud\" Cigarettes",
          "Bud Cigarettes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bud Cigarettes"
      },
      {
        "from": [
          "L Roederer Grand Vin Sec",
          "L. Roederer Grand Vin Sec"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "L. Roederer Grand Vin Sec"
      },
      {
        "from": [
          "Filet Of Sole Meuniere",
          "Filet Of Sole, Meuniere"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Filet Of Sole, Meuniere"
      },
      {
        "from": [
          "Salade Waldorf",
          "Waldorf Salade"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Salade Waldorf"
      },
      {
        "from": [
          "Pommes Windsor",
          "Pommes, Windsor"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pommes Windsor"
      },
      {
        "from": [
          "Laitue Salade",
          "Salade: Laitue"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Laitue Salade"
      },
      {
        "from": [
          "Whole Broiled Live Lobster, Drawn Butter",
          "Whole Live Broiled Lobster, Drawn Butter"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Whole Live Broiled Lobster, Drawn Butter"
      },
      {
        "from": [
          "Potatoes--boiled",
          "Potatoes-boiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boiled Potatoes"
      },
      {
        "from": [
          "Lemonade Seltzer",
          "Lemonade, Seltzer"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lemonade Seltzer"
      },
      {
        "from": [
          "St Estephe Bordeaux",
          "St. Estephe Bordeaux"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Estephe Bordeaux"
      },
      {
        "from": [
          "Sweetbreads With Mushrooms",
          "Sweetbreads, With Mushrooms"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sweetbreads With Mushrooms"
      },
      {
        "from": [
          "Blue Points Or Rockaways Baltimore Fry",
          "Blue Points Or Rockaways, Baltimore Fry"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Blue Points Or Rockaways, Baltimore Fry"
      },
      {
        "from": [
          "Plain Spaghetti",
          "Spaghetti, Plain"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Plain Spaghetti"
      },
      {
        "from": [
          "Deviled Crabs (two)",
          "Deviled Crabs, Two"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Deviled Crabs (Two)"
      },
      {
        "from": [
          "Live Lobster, Broiled",
          "Lobster, Broiled Live"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Live Lobster, Broiled"
      },
      {
        "from": [
          "Brie (cheese)",
          "Brie [cheese]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brie Cheese"
      },
      {
        "from": [
          "Champagne Pommery",
          "Pommery Champagne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pommery Champagne"
      },
      {
        "from": [
          "Frog Legs Poulette",
          "Frog Legs, Poulette"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Frog Legs Poulette"
      },
      {
        "from": [
          "Coffee Tea Milk",
          "Coffee, Tea, Milk"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coffee, Tea, Milk"
      },
      {
        "from": [
          "Chantilly Meringue",
          "Meringue Chantilly"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chantilly Meringue"
      },
      {
        "from": [
          "Martini Dry",
          "Martini, Dry"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Martini Dry"
      },
      {
        "from": [
          "Milk Stew Oysters",
          "Oysters Milk Stew"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Milk Stew Oysters"
      },
      {
        "from": [
          "Cold Half Roast Chicken",
          "Cold Roast Chicken (half)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cold Half Roast Chicken"
      },
      {
        "from": [
          "Blackberry Brandy",
          "Brandy, Blackberry"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Blackberry Brandy"
      },
      {
        "from": [
          "Risotto Milanaise",
          "Risotto, Milanaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Risotto Milanaise"
      },
      {
        "from": [
          "Sparkling Sun-ray Mineral Water",
          "Sun-ray Sparkling Mineral Water"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sun-ray Sparkling Mineral Water"
      },
      {
        "from": [
          "Brandenburg Freres Pontet Canet",
          "Pontet Canet Brandenburg Freres"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pontet Canet Brandenburg Freres"
      },
      {
        "from": [
          "Chicken Halibut Fried",
          "Fried Chicken Halibut"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Chicken Halibut"
      },
      {
        "from": [
          "Saddle Rock Stew",
          "Saddle Rock, Stew"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Saddle Rock Stew"
      },
      {
        "from": [
          "Mutton Chops (two)",
          "Two Mutton Chops"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mutton Chops (Two)"
      },
      {
        "from": [
          "Crab Meat Newburg",
          "Crab Meat, Newburg"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Crab Meat Newburg"
      },
      {
        "from": [
          "G H Mumm & Co, Cordon Rouge",
          "G. H. Mumm & Co., Cordon Rouge"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "G. H. Mumm & Co., Cordon Rouge"
      },
      {
        "from": [
          "\" Spanish",
          "Spanish"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Spanish"
      },
      {
        "from": [
          "Strawberries With Vanilla Ice Cream",
          "Vanilla Ice Cream With Strawberries"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Vanilla Ice Cream With Strawberries"
      },
      {
        "from": [
          "Chambertin Sparkling",
          "Chambertin, Sparkling"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chambertin, Sparkling"
      },
      {
        "from": [
          "Champagne Lanson",
          "Lanson Champagne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lanson Champagne"
      },
      {
        "from": [
          "Field, Son & Co, Sloe Gin",
          "Field, Son & Co., Sloe Gin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Field, Son & Co., Sloe Gin"
      },
      {
        "from": [
          "Pommes De Terre A L'anglaise",
          "Pommes De Terre À L'anglaise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pommes De Terre À L'anglaise"
      },
      {
        "from": [
          "Coffee Demi-tasse (french)",
          "French Coffee. Demi-tasse"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "French Coffee. Demi-tasse"
      },
      {
        "from": [
          "Cold Veal And Ham Pie",
          "Cold: Veal And Ham Pie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cold Veal And Ham Pie"
      },
      {
        "from": [
          "Chicken Okra Soup (cold)",
          "Chicken Okra Soup, Cold"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicken Okra Soup, Cold"
      },
      {
        "from": [
          "Bass, Ale, White Label",
          "White Label Bass Ale"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "White Label Bass Ale"
      },
      {
        "from": [
          "*tuna Fish Salad, Potato Salad, Tomato And Lettuce",
          "Tuna Fish Salad, Potato Salad, Tomato And Lettuce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tuna Fish Salad, Potato Salad, Tomato And Lettuce"
      },
      {
        "from": [
          "Great Western Champagne, Special Reserve",
          "Great Western, Special Reserve Champagne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Great Western Champagne, Special Reserve"
      },
      {
        "from": [
          "Potato Au Gratin",
          "Potato, Au Gratin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potato Au Gratin"
      },
      {
        "from": [
          "Plover Saute, Lilly",
          "Plover Sauté, Lilly"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Plover Sauté, Lilly"
      },
      {
        "from": [
          "Cakes And Coffee",
          "Coffee And Cakes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coffee And Cakes"
      },
      {
        "from": [
          "Cream Soup, St. Germain",
          "Cream St. Germain Soup"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cream St. Germain Soup"
      },
      {
        "from": [
          "Honey-comb Tripe, Fried",
          "Honeycomb Tripe Fried"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Honeycomb Tripe Fried"
      },
      {
        "from": [
          "Fruits (salad)",
          "Fruits Salad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fruits Salad"
      },
      {
        "from": [
          "Pineapple Sliced Au Jus",
          "Sliced Pineapple Au Jus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sliced Pineapple Au Jus"
      },
      {
        "from": [
          "Cold Lobster Half",
          "Half Cold Lobster"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cold Lobster Half"
      },
      {
        "from": [
          "Mongole Potage",
          "Potage Mongole"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potage Mongole"
      },
      {
        "from": [
          "Boiled Or Broiled Salt Mackerel",
          "Salt Mackerel, Broiled Or Boiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boiled Or Broiled Salt Mackerel"
      },
      {
        "from": [
          "Claret Light",
          "Claret, Light"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Claret Light"
      },
      {
        "from": [
          "Cheese, Individual Portion",
          "Individual Portion Cheese"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Individual Portion Cheese"
      },
      {
        "from": [
          "Fresh Fruit (in Season)",
          "Fresh Fruit In Season"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fresh Fruit In Season"
      },
      {
        "from": [
          "Omelet Parsley",
          "Parsley Omelet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Parsley Omelet"
      },
      {
        "from": [
          "O'brien (potatoes)",
          "Potatoes, O'brien"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes, O'brien"
      },
      {
        "from": [
          "Grapefruit (whole)",
          "Whole Grapefruit"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Whole Grapefruit"
      },
      {
        "from": [
          "Chicken Fricassee With Mushrooms",
          "Chicken Fricassee, With Mushrooms"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicken Fricassee With Mushrooms"
      },
      {
        "from": [
          "Clam Broth (cup)",
          "Clam Broth Cup"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clam Broth Cup"
      },
      {
        "from": [
          "Oysters Escaloped In Shell",
          "Oysters, Escaloped In Shell"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oysters Escaloped In Shell"
      },
      {
        "from": [
          "Broiled Oysters Baltimore",
          "Broiled Oysters, Baltimore"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Oysters Baltimore"
      },
      {
        "from": [
          "Gordon Co's Dry Gin",
          "Gordon Co.'s Dry Gin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gordon Co's Dry Gin"
      },
      {
        "from": [
          "Edamer Kase",
          "Kase: Edamer"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Edamer Kase"
      },
      {
        "from": [
          "Pommes De Terre Hachees, A La Creme",
          "Pommes De Terre Hachées, À La Crème"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pommes De Terre Hachées, À La Crème"
      },
      {
        "from": [
          "Buttermilk Per Glass",
          "Buttermilk, Per Glass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Buttermilk, Per Glass"
      },
      {
        "from": [
          "Potatoes - In Cream",
          "[potatoes] In Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes - In Cream"
      },
      {
        "from": [
          "Broiled Phila. Spring Chicken",
          "Phila. Spring Chicken Broiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Phila. Spring Chicken"
      },
      {
        "from": [
          "Krug & Co Champagne",
          "Krug & Co. Champagne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Krug & Co Champagne"
      },
      {
        "from": [
          "White Rock (splits)",
          "White Rock, Splits"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "White Rock, Splits"
      },
      {
        "from": [
          "J. Calvet & Co. Pommard",
          "Pommard, J. Calvet & Co"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "J. Calvet & Co. Pommard"
      },
      {
        "from": [
          "Port: White Port",
          "White Port"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "White Port"
      },
      {
        "from": [
          "Boiled Or Fried Eggs",
          "Eggs, Boiled Or Fried"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boiled Or Fried Eggs"
      },
      {
        "from": [
          "(cold) Chicken Broth",
          "Chicken Broth (cold)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicken Broth (cold)"
      },
      {
        "from": [
          "Tea Biscuits With Butter",
          "Tea Biscuits, With Butter"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tea Biscuits With Butter"
      },
      {
        "from": [
          "Pompano Meuniere",
          "Pompano, Meuniere"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pompano Meuniere"
      },
      {
        "from": [
          "Fried Mush With Maple Syrup And Side Order Of Fried Ham, Bacon Or Sausage",
          "Fried Mush With Maple Syrup And Side Order Of Ham, Bacon Or Sausage"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Mush With Maple Syrup And Side Order Of Ham, Bacon Or Sausage"
      },
      {
        "from": [
          "Box Stew Oysters",
          "Oysters: Box Stew"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Box Stew Oysters"
      },
      {
        "from": [
          "Pommes De Terre Fondante",
          "Pommes De Terre, Fondante"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pommes De Terre Fondante"
      },
      {
        "from": [
          "Filet Of Sole, Fried, Sauce Tartare",
          "Fried Filet Of Sole, Sauce Tartare"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Filet Of Sole, Sauce Tartare"
      },
      {
        "from": [
          "Breaded Veal Chop, Tomato Sauce",
          "Veal Chop Breaded, Tomato Sauce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breaded Veal Chop, Tomato Sauce"
      },
      {
        "from": [
          "Potatoes Yvette",
          "Yvette Potatoes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes Yvette"
      },
      {
        "from": [
          "Bordeaux Red",
          "Red Bordeaux"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Bordeaux"
      },
      {
        "from": [
          "Beefsteak, Broiled & Fried",
          "Beefsteak, Broiled, Fried"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Beefsteak, Broiled & Fried"
      },
      {
        "from": [
          "Chocolate (pot)",
          "Chocolate, Pot"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chocolate (Pot)"
      },
      {
        "from": [
          "Clams: Little Neck",
          "Little Neck [clams]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Little Neck Clams"
      },
      {
        "from": [
          "Filet Of Flounder, Fried",
          "Fried Filet Of Flounder"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Filet Of Flounder"
      },
      {
        "from": [
          "Julia Arthur (salad)",
          "Julia Arthur Salad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Julia Arthur Salad"
      },
      {
        "from": [
          "Half Partridge, American Style",
          "Partridge (half) American Style"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Half Partridge, American Style"
      },
      {
        "from": [
          "Broiled Or Fried Fresh Mackerel",
          "Fried Or Broiled Fresh Mackerel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Or Fried Fresh Mackerel"
      },
      {
        "from": [
          "Bacon, Broiled Or Fried",
          "Broiled Or Fried Bacon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Or Fried Bacon"
      },
      {
        "from": [
          "Coffee, Tea Etc.",
          "Coffee, Tea, Etc."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coffee, Tea Etc."
      },
      {
        "from": [
          "Eggs Meyerbeer",
          "Eggs, Meyerbeer"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eggs Meyerbeer"
      },
      {
        "from": [
          "Broiled Soft Clams With Cream",
          "Soft Clams Broiled With Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Soft Clams With Cream"
      },
      {
        "from": [
          "Sorbet Benedictine",
          "Sorbet, Benedictine"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sorbet Benedictine"
      },
      {
        "from": [
          "Omelettes With Tomato",
          "Omelettes, With Tomato"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Omelettes With Tomato"
      },
      {
        "from": [
          "Chocolat Glace",
          "Glace, Chocolat"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chocolat Glace"
      },
      {
        "from": [
          "Franzosischer Cognac",
          "Französischer Cognac"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Französischer Cognac"
      },
      {
        "from": [
          "Beef Tongue (cold)",
          "[cold] Beef Tongue"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Beef Tongue (cold)"
      },
      {
        "from": [
          "Consomme De Volaille En Tasse",
          "Consommé De Volaille En Tasse"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Consommé De Volaille En Tasse"
      },
      {
        "from": [
          "Fried Sweet Potatoes Side Dish",
          "Fried Sweet Potatoes, Side Dish"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Sweet Potatoes Side Dish"
      },
      {
        "from": [
          "Burgundy: Chambertin",
          "Chambertin Burgundy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chambertin Burgundy"
      },
      {
        "from": [
          "Graves Sauterne",
          "Sauterne, Graves"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Graves Sauterne"
      },
      {
        "from": [
          "Ice Cream With Strawberries",
          "Strawberries With Ice Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ice Cream With Strawberries"
      },
      {
        "from": [
          "Potatoes--mashed",
          "Potatoes-mashed"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mashed Potatoes"
      },
      {
        "from": [
          "Custard Cup",
          "Custard, Cup"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Custard Cup"
      },
      {
        "from": [
          "Bermuda Potatoes Persillade",
          "Bermuda Potatoes, Persillade"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bermuda Potatoes Persillade"
      },
      {
        "from": [
          "Ris De Veau Montebello",
          "Ris De Veau, Montebello"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ris De Veau Montebello"
      },
      {
        "from": [
          "Soft Clams Fricasseed",
          "Soft Clams, Fricasseed"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Soft Clams Fricasseed"
      },
      {
        "from": [
          "Sauerkraut Juice - Cocktail",
          "Sauerkraut Juice Cocktail"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sauerkraut Juice Cocktail"
      },
      {
        "from": [
          "Wadli Mit Kraut",
          "Wädli Mit Kraut"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wädli Mit Kraut"
      },
      {
        "from": [
          "Frog's Legs Saute, Lilloise",
          "Frogs' Legs Saute, Lilloise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Frog's Legs Saute, Lilloise"
      },
      {
        "from": [
          "Oysters Fried In Batter",
          "Oysters, Fried In Batter"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oysters, Fried In Batter"
      },
      {
        "from": [
          "Squab Chicken (half) (broiled)",
          "Squab Chicken (half), Broiled"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Squab Chicken (half), Broiled"
      },
      {
        "from": [
          "Macaroni Napolitaine",
          "Macaroni, Napolitaine"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Macaroni Napolitaine"
      },
      {
        "from": [
          "Carrots Vichy",
          "Carrots, Vichy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Carrots Vichy"
      },
      {
        "from": [
          "Cafe.",
          "Cafè"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafè"
      },
      {
        "from": [
          "Fried Ham, Boiled Rice With Gravy",
          "Fried Ham, Boiled Rice, With Gravy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fried Ham, Boiled Rice, With Gravy"
      },
      {
        "from": [
          "*consomme With Rice",
          "Consomme, With Rice"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Consomme, With Rice"
      },
      {
        "from": [
          "Omelet With Chicken Livers Or Kidneys",
          "Omelet, With Chicken Livers Or Kidneys"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Omelet With Chicken Livers Or Kidneys"
      },
      {
        "from": [
          "Spaghetti A La Garret",
          "Spaghetti, A La Garret"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Spaghetti A La Garret"
      },
      {
        "from": [
          "Potatoes Gaufrettes",
          "Potatoes, Gaufrettes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potatoes, Gaufrettes"
      },
      {
        "from": [
          "Cape Cods Roast In Shell",
          "Cape Cods, Roast In Shell"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cape Cods, Roast In Shell"
      },
      {
        "from": [
          "Lynnhaven Oysters Raw, Dozen",
          "Lynnhaven Oysters, Raw, Dozen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lynnhaven Oysters, Raw, Dozen"
      },
      {
        "from": [
          "Broiled Sea Trout Maitre D'hotel",
          "Broiled Sea Trout, Maitre D'hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broiled Sea Trout, Maitre D'hotel"
      },
      {
        "from": [
          "Ice Cream (tortoni)",
          "Ice Cream Tortoni"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ice Cream - Tortoni"
      },
      {
        "from": [
          "Cottage Cheese (per Person)",
          "Cottage Cheese, Per Person"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cottage Cheese (Per Person)"
      },
      {
        "from": [
          "Salade: Volaille",
          "Volaille Salade"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Volaille Salade"
      },
      {
        "from": [
          "Roulade De Socca, Fromage De Chevre Et Ratatouille, Chickpea Flour Pancake With Provencal Vegetable Stew And Goat Cheese",
          "Roulade De Socca, Fromage De Chèvre Et Ratatouille, Chickpea Flour Pancake With Provencal Vegetable Stew And Goat Cheese"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Roulade De Socca, Fromage De Chèvre Et Ratatouille, Chickpea Flour Pancake With Provencal Vegetable Stew And Goat Cheese"
      },
      {
        "from": [
          "Assorted Cold Meats, Potato Salad",
          "Cold Assorted Meats, Potato Salad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Assorted Cold Meats, Potato Salad"
      },
      {
        "from": [
          "Fruits Assorted",
          "Fruits, Assorted"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fruits, Assorted"
      },
      {
        "from": [
          "Canape, Allumini",
          "Canapé Allumini"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Canapé Allumini"
      },
      {
        "from": [
          "Ice Cream And Strawberries",
          "Strawberries And Ice Cream"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ice Cream And Strawberries"
      },
      {
        "from": [
          "Consomme With Egg",
          "Consomme, With Egg"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Consomme With Egg"
      },
      {
        "from": [
          "Consomme In Jelly",
          "Consommé In Jelly"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Consommé In Jelly"
      },
      {
        "from": [
          "Clam Omelette",
          "Omelette, Clam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clam Omelette"
      },
      {
        "from": [
          "Pie A La Mode (extra)",
          "Pie A La Mode, Extra"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pie A La Mode, Extra"
      },
      {
        "from": [
          "Grille, Poussin",
          "Grille: Poussin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grille, Poussin"
      },
      {
        "from": [
          "Clams Casino",
          "Clams, Casino"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clams Casino"
      },
      {
        "from": [
          "Canadien Fromage",
          "Fromage Canadien"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Canadien Fromage"
      },
      {
        "from": [
          "Roastbeef Warm",
          "Roastbeef, Warm"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Roastbeef, Warm"
      },
      {
        "from": [
          "Creamed Finnan Haddie On Toast",
          "Finnan Haddie Creamed On Toast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Finnan Haddie Creamed On Toast"
      },
      {
        "from": [
          "Corned Beef Pressed",
          "Corned Beef, Pressed"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Corned Beef, Pressed"
      },
      {
        "from": [
          "Lettuce Plain",
          "Lettuce, Plain"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lettuce, Plain"
      },
      {
        "from": [
          "Chicken, Maryland Style, Whole",
          "Whole Chicken, Maryland Style"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Whole Chicken, Maryland Style"
      },
      {
        "from": [
          "Louis Roederer Champagne, Grand Vin Sec",
          "Louis Roederer, Grand Vin Sec Champagne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Louis Roederer Champagne, Grand Vin Sec"
      },
      {
        "from": [
          "Little Neck Clams Medium Cocktail",
          "Little Neck Clams Medium, Cocktail"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Little Neck Clams Medium Cocktail"
      },
      {
        "from": [
          "Fausse Tortue Potage",
          "Potage Fausse Tortue"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Potage Fausse Tortue"
      },
      {
        "from": [
          "Jules Robin & Co, E S O Cognac Extra Sup, Old",
          "Jules Robin & Co, E. S. O. Cognac Extra Sup, Old"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Jules Robin & Co, E. S. O. Cognac Extra Sup, Old"
      },
      {
        "from": [
          "Relishes Celery",
          "Relishes, Celery"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Relishes, Celery"
      },
      {
        "from": [
          "Oysters: Smiths Island",
          "Smiths Island Oysters"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Smiths Island Oysters"
      },
      {
        "from": [
          "Sorbet A L'ananas",
          "Sorbet À L'ananas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sorbet À L'ananas"
      },
      {
        "from": [
          "Eastern Oysters Plain Stew",
          "Eastern Oysters, Plain Stew"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eastern Oysters Plain Stew"
      },
      {
        "from": [
          "Cold Consomme Cup",
          "Cold Consomme, Cup"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cold Consomme Cup"
      }
    ],
    "description": "Mass edit cells in column name"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "name",
          "expression": "grel:facetCount(value, \"value\", \"name\")",
          "columnName": "name",
          "from": 2,
          "to": 3,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Sliced Chicken (cold)",
          "Sliced Chicken [cold]",
          "[cold] Sliced Chicken"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sliced Chicken (Cold)"
      },
      {
        "from": [
          "Haig",
          "Haig & Haig",
          "Haig & Haig ***"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Haig & Haig"
      },
      {
        "from": [
          "Eggs, Fried With Ham",
          "Fried Ham With Eggs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eggs, Fried With Ham"
      }
    ],
    "description": "Mass edit cells in column name"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [
        {
          "type": "range",
          "name": "name",
          "expression": "grel:facetCount(value, \"value\", \"name\")",
          "columnName": "name",
          "from": 1,
          "to": 3,
          "selectNumeric": true,
          "selectNonNumeric": true,
          "selectBlank": true,
          "selectError": true
        }
      ],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.trim()"
  }
]

[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "id",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column id using expression value.toNumber()"
  },
  {
    "op": "core/column-removal",
    "columnName": "keywords",
    "description": "Remove column keywords"
  },
  {
    "op": "core/column-removal",
    "columnName": "language",
    "description": "Remove column language"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "date",
    "expression": "value.toDate()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column date using expression value.toDate()"
  },
  {
    "op": "core/column-removal",
    "columnName": "location_type",
    "description": "Remove column location_type"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "page_count",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column page_count using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "dish_count",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column dish_count using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.toUppercase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "from": [
          "[RESTAURANT NAME AND/OR LOCATION NOT GIVEN]",
          "RESTAURANT NAME AND/OR LOCATION NOT GIVEN]",
          "RESTAURANT NAME AND/OR LOCATION NOT GIVEN",
          "[RESTAURANT NAME AND/OR LOCATION NOT GIVEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "[NOT GIVEN]"
      },
      {
        "from": [
          "THE MERCHANT'S CLUB",
          "THE MERCHANTS CLUB",
          "THE MERCHANTS' CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE MERCHANT'S CLUB"
      },
      {
        "from": [
          "HOTEL IMPERIAL",
          "IMPERIAL HOTEL",
          "IMPÉRIAL HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "IMPERIAL HOTEL"
      },
      {
        "from": [
          "DELMONICOS",
          "DELMONICO'S",
          "DELMONICOS."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DELMONICO'S"
      },
      {
        "from": [
          "RIGGS'",
          "RIGG'S",
          "RIGGS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RIGG'S"
      },
      {
        "from": [
          "CHILDS",
          "CHILD'S"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHILD'S"
      },
      {
        "from": [
          "HOTEL MARIE ANTOINETTE",
          "MARIE ANTOINETTE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MARIE ANTOINETTE"
      },
      {
        "from": [
          "HOTEL KNICKERBOCKER",
          "KNICKERBOCKER HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL KNICKERBOCKER"
      },
      {
        "from": [
          "MET-LIFE BUILDING",
          "METLIFE BUILDING"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "METLIFE BUILDING"
      },
      {
        "from": [
          "S.S. \"FREDERIK VIII\"",
          "S.S. FREDERIK VIII"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. FREDERIK VIII"
      },
      {
        "from": [
          "FAIRMONT HOTEL",
          "HOTEL FAIRMONT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL FAIRMONT"
      },
      {
        "from": [
          "COPLEY-PLAZA HOTEL",
          "HOTEL COPLEY-PLAZA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL COPLEY-PLAZA"
      },
      {
        "from": [
          "ST. DENIS HOTEL",
          "HOTEL ST. DENIS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ST. DENIS"
      },
      {
        "from": [
          "COSMOPOLITAN HOTEL",
          "COSMOPOLITAN... HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COSMOPOLITAN HOTEL"
      },
      {
        "from": [
          "HOTEL PONTCHARTRAIN",
          "PONTCHARTRAIN HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL PONTCHARTRAIN"
      },
      {
        "from": [
          "HOTEL ASTOR",
          "ASTOR HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ASTOR"
      },
      {
        "from": [
          "PALACE HOTEL",
          "PALACE HÔTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PALACE HOTEL"
      },
      {
        "from": [
          "RIGG'S TWENTIETH STREET RESTAURANT",
          "RIGGS' TWENTIETH STREET RESTAURANT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RIGG'S TWENTIETH STREET RESTAURANT"
      },
      {
        "from": [
          "ADAMS' RESTAURANT",
          "ADAM'S RESTAURANT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ADAM'S RESTAURANT"
      },
      {
        "from": [
          "FRAUNCES' TAVERN",
          "FRAUNCES TAVERN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRAUNCES TAVERN"
      },
      {
        "from": [
          "GROCERS HALL",
          "GROCERS' HALL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GROCERS HALL"
      },
      {
        "from": [
          "HOTEL STATLER",
          "STATLER HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL STATLER"
      },
      {
        "from": [
          "U.S.S. NEW YORK",
          "U.S.S. NEW YORK (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. NEW YORK"
      },
      {
        "from": [
          "LAFAYETTE HOTEL",
          "HOTEL LAFAYETTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL LAFAYETTE"
      },
      {
        "from": [
          "THE NEW WILLARD HOTEL",
          "THE NEW WILLARD HOTEL."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE NEW WILLARD HOTEL"
      },
      {
        "from": [
          "ELKS CLUB HOUSE",
          "ELKS' CLUB HOUSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ELKS' CLUB HOUSE"
      },
      {
        "from": [
          "HOFBRAU HAUS",
          "HOFBRÄU HAUS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOFBRÄU HAUS"
      },
      {
        "from": [
          "MERCHANT'S CLUB",
          "MERCHANTS CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MERCHANT'S CLUB"
      },
      {
        "from": [
          "HOTEL SAVOY",
          "SAVOY HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL SAVOY"
      },
      {
        "from": [
          "CAFÉ BOULEVARD",
          "CAFE BOULEVARD"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAFÉ BOULEVARD"
      }
    ],
    "description": "Mass edit cells in column name"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "from": [
          "RED STAR LINE - ANTWERPEN - NY",
          "RED STAR LINE - ANTWERPEN NY",
          "RED STAR LINE - ANTWERPEN -NY",
          "RED STAR LINE -ANTWERPEN NY",
          "RED STAR LINE -ANTWERPEN - NY",
          "RED STAR LINE -ANTWERPEN -NY",
          "RED STAR LINE- ANTWERPEN -NY",
          "RED STAR LINE- ANTWERPEN NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RED STAR LINE - ANTWERPEN - NY"
      },
      {
        "from": [
          "NORDDEUTSCHER LLOYD BREMEN",
          "Norddeutscher Lloyd Bremen",
          "NORDDEUTSCHER LLOYD - BREMEN",
          "NORDDEUTSCHER LLOYD BREMEN;",
          "NORDDEUTSCHER LLOYD, BREMEN",
          "BREMEN NORDDEUTSCHER LLOYD",
          "NORDDEUTSCHER LLOYD -BREMEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORDDEUTSCHER LLOYD BREMEN"
      },
      {
        "from": [
          "FIFTH AVENUE HOTEL",
          "(FIFTH AVENUE HOTEL)",
          "(FIFTH AVENUE HOTEL?)",
          "FIFTH AVENUE HOTEL (?)",
          "(FIFTH AVENUE HOTEL?}",
          "FIFTH AVENUE HOTEL;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FIFTH AVENUE HOTEL"
      },
      {
        "from": [
          "Delmonicos",
          "Delmonico's",
          "DELMONICO'S",
          "DELMONICOS",
          "Delmonicos."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DELMONICO'S"
      },
      {
        "from": [
          "[Restaurant name and/or location not given]",
          "[Restaurant Name And/Or Location Not Given]",
          "Restaurant name and/or location not given]",
          "Restaurant name and/or location not given",
          "[Restaurant name and/or location not given"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "[NOT GIVEN]"
      },
      {
        "from": [
          "Hotel Imperial",
          "IMPERIAL HOTEL",
          "Imperial Hotel",
          "HOTEL IMPERIAL",
          "Impérial Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "IMPERIAL HOTEL"
      },
      {
        "from": [
          "Gramercy Park Hotel",
          "Hotel Gramercy Park",
          "Gramercy Park Hotel; Hotel Gramercy Park",
          "Gramercy Park hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gramercy Park Hotel"
      },
      {
        "from": [
          "HOTEL KNICKERBOCKER",
          "Hotel Knickerbocker",
          "HOTEL KNICKERBOCKER (?)",
          "Knickerbocker Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL KNICKERBOCKER"
      },
      {
        "from": [
          "Waldorf-Astoria",
          "WALDORF-ASTORIA",
          "(WALDORF-ASTORIA?)",
          "(WALDORF-ASTORIA)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf-Astoria"
      },
      {
        "from": [
          "BRISTOL HOTEL",
          "Hotel Bristol",
          "Bristol Hotel",
          "HOTEL BRISTOL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BRISTOL HOTEL"
      },
      {
        "from": [
          "Hotel Majestic",
          "HOTEL MAJESTIC",
          "(MAJESTIC HOTEL)",
          "MAJESTIC HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Majestic"
      },
      {
        "from": [
          "COLONIAL HOTEL",
          "HOTEL COLONIAL",
          "(?COLONIAL HOTEL?)",
          "(COLONIAL HOTEL)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COLONIAL HOTEL"
      },
      {
        "from": [
          "HOTEL SAVOY",
          "SAVOY HOTEL",
          "Hotel Savoy",
          "Savoy Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL SAVOY"
      },
      {
        "from": [
          "HOTEL JEFFERSON",
          "Hotel Jefferson",
          "JEFFERSON HOTEL",
          "Jefferson Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL JEFFERSON"
      },
      {
        "from": [
          "DEL CORONADO HOTEL",
          "HOTEL DEL CORONADO",
          "Hotel Del Coronado",
          "Hotel del Coronado"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DEL CORONADO HOTEL"
      },
      {
        "from": [
          "St. Denis Hotel",
          "Hotel St. Denis",
          "ST, DENIS HOTEL",
          "ST. DENIS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel"
      },
      {
        "from": [
          "HOTEL MARIE ANTOINETTE",
          "MARIE ANTOINETTE HOTEL",
          "Hotel Marie Antoinette",
          "Marie Antoinette Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MARIE ANTOINETTE"
      },
      {
        "from": [
          "Childs",
          "CHILDS'",
          "Child's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Child's"
      },
      {
        "from": [
          "HOTEL METROPOLE",
          "METROPOLE HOTEL",
          "Hotel Metropole"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL METROPOLE"
      },
      {
        "from": [
          "NORDEUTSCHER LLOYD BREMEN",
          "NORDEUTSCHER LLOYD, BREMEN",
          "NORDEUTSCHER LLOYD - BREMEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORDEUTSCHER LLOYD BREMEN"
      },
      {
        "from": [
          "ALTA VISTA HOTEL",
          "(ALTA VISTA HOTEL)",
          "ALTA VISTA HOTEL (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ALTA VISTA HOTEL"
      },
      {
        "from": [
          "CIE GLE TRANSATLANTIQUE",
          "CIE. GLE. TRANSATLANTIQUE",
          "Cie Gle TRANSATLANTIQUE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CIE. GLE. TRANSATLANTIQUE"
      },
      {
        "from": [
          "Laurel In The Pines",
          "LAUREL IN THE PINES",
          "Laurel in the Pines"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Laurel In The Pines"
      },
      {
        "from": [
          "(ENGINEERS CLUB)",
          "ENGINEERS CLUB",
          "ENGINEERS' CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ENGINEERS CLUB"
      },
      {
        "from": [
          "Hotel Manhattan",
          "HOTEL MANHATTAN",
          "MANHATTAN HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Manhattan"
      },
      {
        "from": [
          "Paquebot \\Liberté\\\"\"",
          "Paquebot Liberte",
          "Paquebot \\Liberte\\\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paquebot Liberte"
      },
      {
        "from": [
          "HAMBURG AMERIKA LINIE",
          "HAMBURG - AMERIKA LINIE",
          "HAMBURG- AMERIKA LINIE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HAMBURG AMERIKA LINIE"
      },
      {
        "from": [
          "HOTEL COLORADO",
          "COLORADO HOTEL",
          "Hotel Colorado"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL COLORADO"
      },
      {
        "from": [
          "Cosmopolitan Hotel",
          "COSMOPOLITAN HOTEL",
          "Cosmopolitan... Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cosmopolitan Hotel"
      },
      {
        "from": [
          "Palace Hotel",
          "PALACE HOTEL",
          "Palace Hôtel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel"
      },
      {
        "from": [
          "Riggs'",
          "Rigg's",
          "Riggs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Riggs"
      },
      {
        "from": [
          "EDWARD F. LANG'S LADIES AND GENTS LUNCH ROOM AND RESTAURANT",
          "EDWARD F. LANG'S LADIES' AND GENT'S LUNCH ROOM AND RESTAURANT",
          "EDWARD F. LANG'S LADIES' AND GENT'S LUNCH ROOM AND RESTAURANT;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EDWARD F. LANG'S LADIES AND GENTS LUNCH ROOM AND RESTAURANT"
      },
      {
        "from": [
          "Sherry's",
          "SHERRY'S",
          "Sherrys"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SHERRY'S"
      },
      {
        "from": [
          "Schwarzwalders Natur Weinhaus",
          "SCHWARZWALDER'S NATUR WEINHAUS",
          "Schwarzwalder's Natur Weinhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schwarzwalders Natur Weinhaus"
      },
      {
        "from": [
          "HOTEL CHAMBERLIN",
          "Hotel Chamberlin",
          "CHAMBERLIN HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL CHAMBERLIN"
      },
      {
        "from": [
          "RED STAR LINE",
          "(RED STAR LINE)",
          "RED STAR LINE -"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RED STAR LINE"
      },
      {
        "from": [
          "ST. REGIS HOTEL",
          "HOTEL ST. REGIS",
          "Hotel St. Regis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. REGIS HOTEL"
      },
      {
        "from": [
          "ST. CHARLES HOTEL",
          "St. Charles Hotel",
          "St Charles Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. CHARLES HOTEL"
      },
      {
        "from": [
          "Waldorf Astoria",
          "WALDORF ASTORIA",
          "WALDORF- ASTORIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf Astoria"
      },
      {
        "from": [
          "U.S.M.S.",
          "USMS",
          "U.S.M.S"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S."
      },
      {
        "from": [
          "U.S.M.S. NEW YORK",
          "USMS NEW YORK",
          "U.S.M.S NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S. NEW YORK"
      },
      {
        "from": [
          "(MANHATTAN CLUB)",
          "Manhattan Club",
          "MANHATTAN CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manhattan Club"
      },
      {
        "from": [
          "Lafayette Hotel",
          "HOTEL LAFAYETTE",
          "Hotel Lafayette"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL LAFAYETTE"
      },
      {
        "from": [
          "HOTEL DENNIS",
          "DENNIS HOTEL",
          "Hotel Dennis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DENNIS HOTEL"
      },
      {
        "from": [
          "The Merchant's Club",
          "The Merchants Club",
          "The Merchants' Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Merchant's Club"
      },
      {
        "from": [
          "Union Club",
          "UNION CLUB",
          "(UNION CLUB)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union Club"
      },
      {
        "from": [
          "CLAREMONT HOTEL",
          "HOTEL CLAREMONT",
          "Hotel Claremont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CLAREMONT HOTEL"
      },
      {
        "from": [
          "MERCHANTS' CLUB",
          "Merchant's Club",
          "Merchants Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MERCHANTS' CLUB"
      },
      {
        "from": [
          "CAFE BOULEVARD",
          "Café Boulevard",
          "Cafe Boulevard"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAFE BOULEVARD"
      },
      {
        "from": [
          "HOTEL CHAMPLAIN",
          "CHAMPLAIN HOTEL",
          "Hotel Champlain"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL CHAMPLAIN"
      },
      {
        "from": [
          "WINDSOR HOTEL",
          "HOTEL WINDSOR",
          "Windsor Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WINDSOR HOTEL"
      },
      {
        "from": [
          "SHANLEY'S",
          "Shanley's",
          "SHANLEYS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SHANLEY'S"
      },
      {
        "from": [
          "FRAUNCES' TAVERN",
          "Fraunces' Tavern",
          "Fraunces Tavern"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRAUNCES' TAVERN"
      },
      {
        "from": [
          "HOTEL ST. GEORGE",
          "Hotel St. George",
          "ST. GEORGE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ST. GEORGE"
      },
      {
        "from": [
          "GRAND HOTEL ROYAL",
          "Grand Hôtel Royal",
          "Royal Grand Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAND HOTEL ROYAL"
      },
      {
        "from": [
          "Hotel Plaza",
          "Plaza Hotel",
          "PLAZA HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Plaza"
      },
      {
        "from": [
          "AMERICAN MEDICAL EDITORS' ASSOCIATION",
          "AMERICAN MEDICAL EDITOR'S ASSOCIATION",
          "AMERICAN MEDICAL EDITORS ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AMERICAN MEDICAL EDITORS' ASSOCIATION"
      },
      {
        "from": [
          "Hotel Pontchartrain",
          "PONTCHARTRAIN HOTEL",
          "Pontchartrain Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Pontchartrain"
      },
      {
        "from": [
          "UNION LEAGUE CLUB",
          "Union League Club",
          "(UNION LEAGUE CLUB)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNION LEAGUE CLUB"
      },
      {
        "from": [
          "BALTIMORE HOTEL",
          "HOTEL BALTIMORE",
          "Hotel Baltimore"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BALTIMORE HOTEL"
      },
      {
        "from": [
          "WESTMINSTER HOTEL",
          "HOTEL WESTMINSTER",
          "Hotel Westminster"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WESTMINSTER HOTEL"
      },
      {
        "from": [
          "ARLINGTON HOTEL",
          "ARLINGTON hOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ARLINGTON HOTEL"
      },
      {
        "from": [
          "METROPOLITAN LIFE INSURANCE COMPANY",
          "Metropolitan Life Insurance Company"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "METROPOLITAN LIFE INSURANCE COMPANY"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KOBE MARU",
          "NIPPON YUSEN KAISHA -S.S.KOBE MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA - S.S.KOBE MARU"
      },
      {
        "from": [
          "WALDORF-ASTORIA HOTEL",
          "Waldorf-Astoria Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WALDORF-ASTORIA HOTEL"
      },
      {
        "from": [
          "Auditorium Hotel",
          "AUDITORIUM HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Auditorium Hotel"
      },
      {
        "from": [
          "S.S. American Shipper",
          "S.S. \"American Shipper\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. American Shipper"
      },
      {
        "from": [
          "NEW YORK CLUB",
          "New York Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK CLUB"
      },
      {
        "from": [
          "Herald Square Hotel",
          "HERALD SQUARE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Herald Square Hotel"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KASUGA",
          "NIPPON YUSEN KAISHA -S.S.KASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA - S.S.KASUGA"
      },
      {
        "from": [
          "OCEANIC STEAMSHIP COMPANY - SONOMA",
          "OCEANIC STEAMSHIP COMPANY _ SONOMA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEANIC STEAMSHIP COMPANY - SONOMA"
      },
      {
        "from": [
          "THE MERCHANT'S CLUB OF CHICAGO",
          "THE MERCHANTS CLUB OF CHICAGO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE MERCHANT'S CLUB OF CHICAGO"
      },
      {
        "from": [
          "Wabash Railway Company",
          "Wabash [Railway Company]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wabash Railway Company"
      },
      {
        "from": [
          "Hotel Alexandria",
          "HOTEL ALEXANDRIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Alexandria"
      },
      {
        "from": [
          "THE GRIDIRON CLUB",
          "The Gridiron Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE GRIDIRON CLUB"
      },
      {
        "from": [
          "FRIENDLY SONS OF ST. PATRICK",
          "FRIENDLY SONS OF ST PATRICK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRIENDLY SONS OF ST. PATRICK"
      },
      {
        "from": [
          "Hotel Europäischer Hof",
          "HOTEL EUROPAISCHER HOF"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Europäischer Hof"
      },
      {
        "from": [
          "CHAMBER OF COMMERCE",
          "Chamber of Commerce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHAMBER OF COMMERCE"
      },
      {
        "from": [
          "DE L'ANGE HOTEL",
          "HOTEL DE L'ANGE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DE L'ANGE HOTEL"
      },
      {
        "from": [
          "Rigg's Twentieth Street Restaurant",
          "Riggs' Twentieth Street Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rigg's Twentieth Street Restaurant"
      },
      {
        "from": [
          "KING FREDERIK VIII",
          "(KING FREDERIK VIII)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KING FREDERIK VIII"
      },
      {
        "from": [
          "HOLLAND-AMERICA LINE",
          "Holland-America Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOLLAND-AMERICA LINE"
      },
      {
        "from": [
          "QUILL CLUB",
          "Quill Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "QUILL CLUB"
      },
      {
        "from": [
          "Unknown",
          "unknown"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Unknown"
      },
      {
        "from": [
          "ANCIENT AND HONORABLE ARTILLERY CO OF MASSACHUSETTS",
          "ANCIENT AND HONORABLE ARTILLERY CO. OF MASSACHUSETTS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANCIENT AND HONORABLE ARTILLERY CO OF MASSACHUSETTS"
      },
      {
        "from": [
          "The New Willard Hotel",
          "The New Willard Hotel."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The New Willard Hotel"
      },
      {
        "from": [
          "HOLLAND HOUSE",
          "Holland House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOLLAND HOUSE"
      },
      {
        "from": [
          "OCEANIC STEAMSHIP CO. - SIERRA",
          "OCEANIC STEAMSHIP CO.- SIERRA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEANIC STEAMSHIP CO. - SIERRA"
      },
      {
        "from": [
          "St. Francis Hotel",
          "Hotel St. Francis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Francis Hotel"
      },
      {
        "from": [
          "SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK",
          "SOCIETY OF THE SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK"
      },
      {
        "from": [
          "(KING ALEXANDER OF SERVIA)",
          "KING ALEXANDER OF SERVIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(KING ALEXANDER OF SERVIA)"
      },
      {
        "from": [
          "HOTEL ASSOCIATION OF NEW YORK CITY",
          "(HOTEL ASSOCIATION OF NEW YORK CITY)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ASSOCIATION OF NEW YORK CITY"
      },
      {
        "from": [
          "COMPAGNIE GENERALE TRANSATLANTIQUE",
          "Compagnie Générale Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COMPAGNIE GENERALE TRANSATLANTIQUE"
      },
      {
        "from": [
          "Muhlenkamper Fahrhaus",
          "Mühlenkamper Fährhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Muhlenkamper Fahrhaus"
      },
      {
        "from": [
          "CHILDS' LUNCH ROOMS",
          "CHILD'S LUNCH ROOMS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHILDS' LUNCH ROOMS"
      },
      {
        "from": [
          "OCEANIC STEAMSHIP CO. - S.S.ZEALANDIA",
          "OCEANIC STEAMSHIP CO. S.S.ZEALANDIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEANIC STEAMSHIP CO. - S.S.ZEALANDIA"
      },
      {
        "from": [
          "Healy's Forty-second Street restaurant",
          "Healy's Forty-second Street Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Healy's Forty-second Street restaurant"
      },
      {
        "from": [
          "REPUBLICAN CLUB OF THE CITY OF NEW YORK",
          "Republican Club of the City of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "REPUBLICAN CLUB OF THE CITY OF NEW YORK"
      },
      {
        "from": [
          "HOTEL VICTORY",
          "VICTORY HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL VICTORY"
      },
      {
        "from": [
          "(CLUB)",
          "? CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(CLUB)"
      },
      {
        "from": [
          "HOTEL GRUNEWALD",
          "GRUNEWALD HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL GRUNEWALD"
      },
      {
        "from": [
          "HOTEL ALGAZAR",
          "ALGAZAR HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ALGAZAR"
      },
      {
        "from": [
          "GRAND HOTEL CENTRAL",
          "Grand Hotel Central"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAND HOTEL CENTRAL"
      },
      {
        "from": [
          "Fairmont Hotel",
          "Hotel Fairmont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fairmont Hotel"
      },
      {
        "from": [
          "Louis Sherry",
          "LOUIS SHERRY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Louis Sherry"
      },
      {
        "from": [
          "ALCAZAR HOTEL",
          "HOTEL ALCAZAR"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ALCAZAR HOTEL"
      },
      {
        "from": [
          "LOTOS CLUB",
          "Lotos Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LOTOS CLUB"
      },
      {
        "from": [
          "CAFE SAVARIN",
          "Café Savarin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAFE SAVARIN"
      },
      {
        "from": [
          "ST. NICHOLAS HOTEL",
          "Hotel St. Nicholas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. NICHOLAS HOTEL"
      },
      {
        "from": [
          "CHATEAU FRONTENAC",
          "Chateau Frontenac"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHATEAU FRONTENAC"
      },
      {
        "from": [
          "CASINO CENTRAL PARK",
          "Casino Central Park"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CASINO CENTRAL PARK"
      },
      {
        "from": [
          "TOURO CLUB",
          "Touro Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TOURO CLUB"
      },
      {
        "from": [
          "COLOMBO HOTEL",
          "HOTEL COLOMBO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COLOMBO HOTEL"
      },
      {
        "from": [
          "(MAHARAJA OF BARODA)",
          "MAHARAJA OF BARODA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(MAHARAJA OF BARODA)"
      },
      {
        "from": [
          "GRAND HOTEL HUNGARIA",
          "Grand Hotel Hungaria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAND HOTEL HUNGARIA"
      },
      {
        "from": [
          "ANCIENT ACCEPTED SCOTTISH RITE",
          "ANCIENT & ACCEPTED SCOTTISH RITE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANCIENT ACCEPTED SCOTTISH RITE"
      },
      {
        "from": [
          "La Crépe",
          "La Crêpe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "La Crépe"
      },
      {
        "from": [
          "R.H. MACY & CO.",
          "R.H. Macy & Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.H. MACY & CO."
      },
      {
        "from": [
          "OCEANIC STEAMSHIP COMPANY -S.S.ZEALANDER",
          "OCEANIC STEAMSHIP COMPANY - S.S.ZEALANDER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEANIC STEAMSHIP COMPANY -S.S.ZEALANDER"
      },
      {
        "from": [
          "Pirate's House",
          "Pirates' House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pirate's House"
      },
      {
        "from": [
          "MICHIGAN SOCIETY OF THE SONS OF THE AMERICAN REVOLUTION",
          "MICHIGAN SOCIETY SONS OF THE AMERICAN REVOLUTION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MICHIGAN SOCIETY OF THE SONS OF THE AMERICAN REVOLUTION"
      },
      {
        "from": [
          "MERCHANT'S CLUB OF BOSTON",
          "MERCHANTS' CLUB OF BOSTON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MERCHANT'S CLUB OF BOSTON"
      },
      {
        "from": [
          "NORTHERN PACIFIC RAILWAY",
          "Northern Pacific Railway"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORTHERN PACIFIC RAILWAY"
      },
      {
        "from": [
          "PARK AVENUE HOTEL",
          "Park Avenue Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PARK AVENUE HOTEL"
      },
      {
        "from": [
          "HOTEL WASHINGTON",
          "Hotel Washington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL WASHINGTON"
      },
      {
        "from": [
          "SHERMAN SQUARE HOTEL",
          "Sherman Square Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SHERMAN SQUARE HOTEL"
      },
      {
        "from": [
          "SECOND PANEL SHERIFF'S JURY",
          "SHERIFF'S JURY SECOND PANEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SECOND PANEL SHERIFF'S JURY"
      },
      {
        "from": [
          "Elks Club House",
          "Elks' Club House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Elks Club House"
      },
      {
        "from": [
          "Masonic Temple",
          "MASONIC TEMPLE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Masonic Temple"
      },
      {
        "from": [
          "HOTEL DU MUSEE",
          "HOTEL DU MUSEE'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL DU MUSEE"
      },
      {
        "from": [
          "Astor House",
          "ASTOR HOUSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Astor House"
      },
      {
        "from": [
          "RED STAR LINE - S.S.WESTERNLAND",
          "RED STAR LINE S.S.WESTERNLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RED STAR LINE - S.S.WESTERNLAND"
      },
      {
        "from": [
          "Tavern On The Green",
          "The Tavern On The Green"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tavern On The Green"
      },
      {
        "from": [
          "Congress Hotel",
          "CONGRESS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Congress Hotel"
      },
      {
        "from": [
          "HOTEL MINOT",
          "MINOT HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MINOT"
      },
      {
        "from": [
          "MURRAY HILL HOTEL",
          "Murray Hill Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MURRAY HILL HOTEL"
      },
      {
        "from": [
          "Park Lane",
          "Park lane"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Lane"
      },
      {
        "from": [
          "[Restaurant And/Or Location Not Given.]",
          "[Restaurant And/Or Location Not Given]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "[Restaurant And/Or Location Not Given.]"
      },
      {
        "from": [
          "S.S New Amsterdam",
          "S.S. New Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S New Amsterdam"
      },
      {
        "from": [
          "JOHN WANAMAKER",
          "John Wanamaker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "JOHN WANAMAKER"
      },
      {
        "from": [
          "Ambassador Hotel",
          "Hotel Ambassador"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ambassador Hotel"
      },
      {
        "from": [
          "(PRIVATE)",
          "PRIVATE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(PRIVATE)"
      },
      {
        "from": [
          "The Commodore Hotel",
          "The Hotel Commodore"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Commodore Hotel"
      },
      {
        "from": [
          "Algonquin Hotel",
          "Hotel Algonquin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Algonquin Hotel"
      },
      {
        "from": [
          "Hotel Worthy",
          "WORTHY HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Worthy"
      },
      {
        "from": [
          "WILLARD'S HOTEL",
          "WILLARDS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WILLARD'S HOTEL"
      },
      {
        "from": [
          "Grand Ballroom Of The Hotel Plaza",
          "The Grand Ballroom Of The Hotel Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Ballroom Of The Hotel Plaza"
      },
      {
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. - S.S.ATHABASCA",
          "CANADIAN PACIFIC RAILWAY CO.- S.S.ATHABASCA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CANADIAN PACIFIC RAILWAY CO. - S.S.ATHABASCA"
      },
      {
        "from": [
          "CENTURY CLUB",
          "(CENTURY CLUB?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CENTURY CLUB"
      },
      {
        "from": [
          "Hotel Astor",
          "Astor Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Astor"
      },
      {
        "from": [
          "THE ANNEX",
          "The Annex"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE ANNEX"
      },
      {
        "from": [
          "(EMPEROR NICHOLAS II",
          "EMPEROR NICHOLAS II"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(EMPEROR NICHOLAS II"
      },
      {
        "from": [
          "Eastern Hotel",
          "EASTERN HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eastern Hotel"
      },
      {
        "from": [
          "Hotel Somerset",
          "HOTEL SOMERSET"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Somerset"
      },
      {
        "from": [
          "Grocers Hall",
          "Grocers' Hall"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grocers Hall"
      },
      {
        "from": [
          "CONTINENTAL HOTEL",
          "HOTEL CONTINENTAL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CONTINENTAL HOTEL"
      },
      {
        "from": [
          "THE WINDSOR",
          "The Windsor"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE WINDSOR"
      },
      {
        "from": [
          "LACKAWANNA RAILROAD",
          "Lackawanna Railroad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LACKAWANNA RAILROAD"
      },
      {
        "from": [
          "Mercantile Lunch Co.",
          "Mercantile lunch Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mercantile Lunch Co."
      },
      {
        "from": [
          "CARLTON CLUB",
          "Carlton Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARLTON CLUB"
      },
      {
        "from": [
          "New York Central System",
          "[New York Central System]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Central System"
      },
      {
        "from": [
          "NORTHERN STEAMSHIP COMPANY/GREAT NORTHERN RY LINE.",
          "(NORTHERN STEAMSHIP COMPANY/GREAT NORTHERN RY LINE.)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORTHERN STEAMSHIP COMPANY/GREAT NORTHERN RY LINE."
      },
      {
        "from": [
          "WISCONSIN SOCIETY - SONS OF THE AMERICAN REVOLUTION",
          "WISCONSIN SOCIETY SONS OF THE AMERICAN REVOLUTION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WISCONSIN SOCIETY - SONS OF THE AMERICAN REVOLUTION"
      },
      {
        "from": [
          "KING EDWARD VII",
          "(KING EDWARD VII)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KING EDWARD VII"
      },
      {
        "from": [
          "HOTEL NETHERLAND",
          "NETHERLAND HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL NETHERLAND"
      },
      {
        "from": [
          "ST.REGIS HOTEL",
          "HOTEL ST.REGIS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST.REGIS HOTEL"
      },
      {
        "from": [
          "SOCIETY OF SONS OF THE REVOLUTION IN THE STATE OF MISSOURI",
          "SOCIETY SONS OF THE REVOLUTION IN THE STATE OF MISSOURI"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOCIETY OF SONS OF THE REVOLUTION IN THE STATE OF MISSOURI"
      },
      {
        "from": [
          "New York Athletic Club",
          "NEW YORK ATHLETIC CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Athletic Club"
      },
      {
        "from": [
          "YALE UNIVERSITY",
          "Yale University"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "YALE UNIVERSITY"
      },
      {
        "from": [
          "THE GOLDEN PHEASANT",
          "The Golden Pheasant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE GOLDEN PHEASANT"
      },
      {
        "from": [
          "Don The Beachcomber",
          "Don the Beachcomber"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Don The Beachcomber"
      },
      {
        "from": [
          "HOTEL EMPIRE",
          "EMPIRE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL EMPIRE"
      },
      {
        "from": [
          "Reuben's",
          "Reuben's."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reuben's"
      },
      {
        "from": [
          "Paquebot \\France\\\"\"",
          "Paquebot France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paquebot \\France\\\"\""
      },
      {
        "from": [
          "ROYAL PALM HOTEL",
          "HOTEL ROYAL PALM"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROYAL PALM HOTEL"
      },
      {
        "from": [
          "HOTEL LINCOLN",
          "Hotel Lincoln"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL LINCOLN"
      },
      {
        "from": [
          "(ENGLISH HOTEL RESTAURANT)",
          "ENGLISH HOTEL RESTAURANT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(ENGLISH HOTEL RESTAURANT)"
      },
      {
        "from": [
          "George Washington Hotel",
          "Hotel George Washington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "George Washington Hotel"
      },
      {
        "from": [
          "R.G.(?)",
          "RG"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.G.(?)"
      },
      {
        "from": [
          "COLUMBIA HOTEL",
          "HOTEL COLUMBIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COLUMBIA HOTEL"
      },
      {
        "from": [
          "Brooklyn Club",
          "BROOKLYN CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brooklyn Club"
      },
      {
        "from": [
          "R.M.S. OCEANIC",
          "RMS OCEANIC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. OCEANIC"
      },
      {
        "from": [
          "Hotel DuPont",
          "Hotel duPont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel DuPont"
      },
      {
        "from": [
          "NEW GRAND HOTEL",
          "GRAND NEW HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW GRAND HOTEL"
      },
      {
        "from": [
          "The Hotel Plaza",
          "The Plaza Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Hotel Plaza"
      },
      {
        "from": [
          "HOTEL MARLBOROUGH",
          "Hotel Marlborough"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MARLBOROUGH"
      },
      {
        "from": [
          "Cafe de Paris",
          "Café de Paris"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe de Paris"
      },
      {
        "from": [
          "XIII CLUB",
          "CLUB XIII"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "XIII CLUB"
      },
      {
        "from": [
          "EMPIRE STATE SOCIETY OF SONS OF THE AMERICAN REVOLUTION",
          "EMPIRE STATE SOCIETY SONS OF THE AMERICAN REVOLUTION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EMPIRE STATE SOCIETY OF SONS OF THE AMERICAN REVOLUTION"
      },
      {
        "from": [
          "COMMERCIAL CLUB",
          "Commercial Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COMMERCIAL CLUB"
      },
      {
        "from": [
          "PALACE HOTEL RESTAURANT",
          "Palace Hotel Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PALACE HOTEL RESTAURANT"
      },
      {
        "from": [
          "Lüchow's Restaurant",
          "Luchow's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lüchow's Restaurant"
      },
      {
        "from": [
          "Hotel Pennsylvania",
          "Pennsylvania Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Pennsylvania"
      },
      {
        "from": [
          "R.M.S. Parthia",
          "R.M.S. \"Parthia\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Parthia"
      },
      {
        "from": [
          "The Oriental",
          "THE ORIENTAL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Oriental"
      },
      {
        "from": [
          "Great Northern Railway",
          "GREAT NORTHERN RAILWAY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Great Northern Railway"
      },
      {
        "from": [
          "Café Lafayette",
          "CAFE LAFAYETTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Café Lafayette"
      },
      {
        "from": [
          "THE LINCOLN CLUB",
          "The Lincoln Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE LINCOLN CLUB"
      },
      {
        "from": [
          "MOUQUIN RESTAURANT AND WINE CO",
          "MOUQUIN RESTAURANT AND WINE CO."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MOUQUIN RESTAURANT AND WINE CO"
      },
      {
        "from": [
          "Imperial",
          "IMPERIAL (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Imperial"
      },
      {
        "from": [
          "NEW YORK YACHT CLUB",
          "New York Yacht Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK YACHT CLUB"
      },
      {
        "from": [
          "S.S. Minnetonka",
          "S.S. \"Minnetonka\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Minnetonka"
      },
      {
        "from": [
          "Hotel Commodore",
          "Commodore Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Commodore"
      },
      {
        "from": [
          "THE ALDINE CLUB",
          "The Aldine Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE ALDINE CLUB"
      },
      {
        "from": [
          "[Not Given]",
          "[Not given]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "[Not Given]"
      },
      {
        "from": [
          "USMS ST LOUIS",
          "U.S.M.S. ST. LOUIS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "USMS ST LOUIS"
      },
      {
        "from": [
          "Hotel Winthrop",
          "Winthrop Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Winthrop"
      },
      {
        "from": [
          "South Ferry Hotel",
          "SOUTH FERRY HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "South Ferry Hotel"
      },
      {
        "from": [
          "Meyer's Hotel",
          "MEYERS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Meyer's Hotel"
      },
      {
        "from": [
          "HOTEL SCHENLEY",
          "Hotel Schenley"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL SCHENLEY"
      },
      {
        "from": [
          "(238 EIGHT AVENUE)",
          "238 EIGHT AVENUE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(238 EIGHT AVENUE)"
      },
      {
        "from": [
          "HOTEL PHONIX",
          "PHONIX HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL PHONIX"
      },
      {
        "from": [
          "Harvard Club",
          "(HARVARD CLUB)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Harvard Club"
      },
      {
        "from": [
          "Aldine Club",
          "ALDINE CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aldine Club"
      },
      {
        "from": [
          "Hotel St. Andrew",
          "HOTEL ST. ANDREW"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. Andrew"
      },
      {
        "from": [
          "Ye Olde Dutch Tavern",
          "YE OLDE DUTCH TAVERN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ye Olde Dutch Tavern"
      },
      {
        "from": [
          "MAPLEWOOD HOTEL",
          "Maplewood Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MAPLEWOOD HOTEL"
      },
      {
        "from": [
          "SMITH & MCNELL'S",
          "SMITH & MCNELLS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SMITH & MCNELL'S"
      },
      {
        "from": [
          "Hotel d'Angleterre",
          "D'ANGLETERRE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel d'Angleterre"
      },
      {
        "from": [
          "ELLICOTT CLUB",
          "Ellicott Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ELLICOTT CLUB"
      },
      {
        "from": [
          "R.M.S. \"Queen Mary\"\"\"",
          "R.M.S. \\Queen Mary\\\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. \"Queen Mary\"\"\""
      },
      {
        "from": [
          "AMERICAN LEGATION",
          "(AMERICAN LEGATION)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AMERICAN LEGATION"
      },
      {
        "from": [
          "PLANTERS HOTEL",
          "Planters Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PLANTERS HOTEL"
      },
      {
        "from": [
          "RESTAURANT WALTERSPIEL",
          "Restaurant Walterspiel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RESTAURANT WALTERSPIEL"
      },
      {
        "from": [
          "Sphinx Club",
          "SPHINX CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sphinx Club"
      },
      {
        "from": [
          "The Plaza",
          "THE PLAZA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Plaza"
      },
      {
        "from": [
          "BROADWAY CENTRAL HOTEL",
          "Broadway Central Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADWAY CENTRAL HOTEL"
      },
      {
        "from": [
          "NEW YORK PRESS CLUB",
          "New York Press Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK PRESS CLUB"
      },
      {
        "from": [
          "DENNETT'S",
          "Dennett's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DENNETT'S"
      },
      {
        "from": [
          "R.M.S. \\Mauretania\\\"\"",
          "R.M.S. Mauretania"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. \\Mauretania\\\"\""
      },
      {
        "from": [
          "QUEEN'S HOTEL",
          "Queen's Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "QUEEN'S HOTEL"
      },
      {
        "from": [
          "Met-Life Building",
          "MetLife Building"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Met-Life Building"
      },
      {
        "from": [
          "UNION SQUARE HOTEL",
          "Union Square Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNION SQUARE HOTEL"
      },
      {
        "from": [
          "S.S. \"Frederik VIII\"",
          "S.S. Frederik VIII"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. \"Frederik VIII\""
      },
      {
        "from": [
          "Ballroom, The Plaza",
          "The Plaza Ballroom"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ballroom, The Plaza"
      },
      {
        "from": [
          "Metropolitan Club",
          "METROPOLITAN CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Metropolitan Club"
      },
      {
        "from": [
          "MENZIES HOTEL",
          "MENZIE'S HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENZIES HOTEL"
      },
      {
        "from": [
          "University Club",
          "UNIVERSITY CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "University Club"
      },
      {
        "from": [
          "AMERICAN BANKERS ASSOCIATION",
          "AMERICAN BANKERS' ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AMERICAN BANKERS ASSOCIATION"
      },
      {
        "from": [
          "(KING UMBERTO)",
          "KING UMBERTO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(KING UMBERTO)"
      },
      {
        "from": [
          "KING HAAKON VII",
          "(KING HAAKON VII)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KING HAAKON VII"
      },
      {
        "from": [
          "Hotel Del Monte",
          "HOTEL DEL MONTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Del Monte"
      },
      {
        "from": [
          "Brevoort Restaurant",
          "RESTAURANT BREVOORT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brevoort Restaurant"
      },
      {
        "from": [
          "Promenade Café",
          "Cafe Promenade"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Promenade Café"
      },
      {
        "from": [
          "Walton's Old Homestead Oyster and Chop House",
          "WALTON'S OLD HOMESTEAD OYSTER AND CHOP HOUSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Walton's Old Homestead Oyster and Chop House"
      },
      {
        "from": [
          "OCEANIC STEAMSHIP COMPANY - SIERRA",
          "OCEANIC STEAMSHIP COMPANY -SIERRA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEANIC STEAMSHIP COMPANY - SIERRA"
      },
      {
        "from": [
          "S.S. \"Ile De France\"\"\"",
          "S.S. Ile De France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. \"Ile De France\"\"\""
      },
      {
        "from": [
          "MASTER PRINTERS ASSOCIATION",
          "MASTER PRINTERS' ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MASTER PRINTERS ASSOCIATION"
      },
      {
        "from": [
          "Wärdshuset Stallmästaregarden",
          "Wärdshuset Stallmästaregården"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wärdshuset Stallmästaregarden"
      },
      {
        "from": [
          "Restaurant Mayan",
          "Mayan Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Mayan"
      },
      {
        "from": [
          "El Morocco",
          "el Morocco"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "El Morocco"
      },
      {
        "from": [
          "REVERE HOUSE",
          "Revere House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "REVERE HOUSE"
      },
      {
        "from": [
          "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES COMMANDERY OF THE STATE OF MINNESOTA",
          "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES. COMMANDERY OF THE STATE OF MINNESOTA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES COMMANDERY OF THE STATE OF MINNESOTA"
      },
      {
        "from": [
          "Adams' Restaurant",
          "Adam's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Adams' Restaurant"
      },
      {
        "from": [
          "NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK",
          "THE NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK"
      },
      {
        "from": [
          "GRENOBLE HOTEL",
          "HOTEL GRENOBLE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRENOBLE HOTEL"
      },
      {
        "from": [
          "\\The Manor\\\"\"",
          "The Manor"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "\\The Manor\\\"\""
      },
      {
        "from": [
          "PENN. RR - PULLMAN DINING CAR SERVICE",
          "PENN RR - PULLMAN DINING CAR SERVICE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PENN. RR - PULLMAN DINING CAR SERVICE"
      },
      {
        "from": [
          "SANTA FE ROUTE",
          "SANTA FE' ROUTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SANTA FE ROUTE"
      },
      {
        "from": [
          "(HARVARD UNIVERSITY)",
          "HARVARD UNIVERSITY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(HARVARD UNIVERSITY)"
      },
      {
        "from": [
          "ALPHA KAPPA KAPPA",
          "KAPPA ALPHA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ALPHA KAPPA KAPPA"
      },
      {
        "from": [
          "La Canzone Del Mare",
          "La Canzone del Mare"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "La Canzone Del Mare"
      },
      {
        "from": [
          "Fred Harvey",
          "FRED HARVEY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fred Harvey"
      },
      {
        "from": [
          "The Mouquin Restaurant and Wine Co.",
          "The Mouquin Restaurant And Wine Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Mouquin Restaurant and Wine Co."
      },
      {
        "from": [
          "TOYO KISEN KAISHA - HONG KONG MARU",
          "TOYO KISEN KAISHA -HONG KONG MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TOYO KISEN KAISHA - HONG KONG MARU"
      },
      {
        "from": [
          "HOTEL NATIONAL",
          "NATIONAL HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL NATIONAL"
      },
      {
        "from": [
          "ARION",
          "Arion"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ARION"
      },
      {
        "from": [
          "Parker House",
          "PARKER HOUSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Parker House"
      },
      {
        "from": [
          "HOTEL QUISISANA",
          "QUISISANA HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL QUISISANA"
      },
      {
        "from": [
          "(FIFTH AVE. HOTEL)",
          "FIFTH AVE. HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(FIFTH AVE. HOTEL)"
      },
      {
        "from": [
          "Maxim's",
          "MAXIM'S"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Maxim's"
      },
      {
        "from": [
          "New York Central System, Boston & Albany Railroad",
          "Boston & Albany Railroad , New York Central System"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Central System, Boston & Albany Railroad"
      },
      {
        "from": [
          "Copley Plaza Hotel",
          "Hotel Copley Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley Plaza Hotel"
      },
      {
        "from": [
          "SMITHVILLE INN",
          "Smithville Inn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SMITHVILLE INN"
      },
      {
        "from": [
          "BROWN PALACE HOTEL",
          "Brown Palace Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROWN PALACE HOTEL"
      },
      {
        "from": [
          "OLD GUARD ALBANY ZOUAVE CADETS",
          "ALBANY ZOUAVE CADETS - OLD GUARD"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OLD GUARD ALBANY ZOUAVE CADETS"
      },
      {
        "from": [
          "NEW YORK CENTRAL & HUDSON RIVER R.R.",
          "NEW YORK CENTRAL & HUDSON RIVER R.R.."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK CENTRAL & HUDSON RIVER R.R."
      },
      {
        "from": [
          "ST. GEORGE'S SOCIETY",
          "ST. GEORGES SOCIETY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. GEORGE'S SOCIETY"
      },
      {
        "from": [
          "SAN REMO HOTEL",
          "HOTEL SAN REMO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SAN REMO HOTEL"
      },
      {
        "from": [
          "CRAWFORD HOUSE",
          "Crawford House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CRAWFORD HOUSE"
      },
      {
        "from": [
          "Rathskeller",
          "RATHSKELLER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rathskeller"
      },
      {
        "from": [
          "RECTOR'S",
          "Rector's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RECTOR'S"
      },
      {
        "from": [
          "Le Dome Of The Four Seasons",
          "Le Dôme Of The Four Seasons"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Le Dome Of The Four Seasons"
      },
      {
        "from": [
          "BANKERS' CLUB OF CHICAGO",
          "BANKERS CLUB OF CHICAGO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BANKERS' CLUB OF CHICAGO"
      },
      {
        "from": [
          "GRAND HOTEL",
          "Grand Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAND HOTEL"
      },
      {
        "from": [
          "MACY'S",
          "Macy's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MACY'S"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA - S.S.NASUGA",
          "NIPPON YUSEN KAISHA -S.S.NASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA - S.S.NASUGA"
      },
      {
        "from": [
          "(KING CHRISTIAN IX OF DENMARK)",
          "KING CHRISTIAN IX OF DENMARK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(KING CHRISTIAN IX OF DENMARK)"
      },
      {
        "from": [
          "UNITED STATES HOTEL",
          "United States Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNITED STATES HOTEL"
      },
      {
        "from": [
          "Oustau De Baumaniere",
          "Oustau de Baumaniere"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oustau De Baumaniere"
      },
      {
        "from": [
          "CAFETERIA LUNCH",
          "CAFETERIA - LUNCH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAFETERIA LUNCH"
      },
      {
        "from": [
          "Hotel Ritz",
          "HOTEL RITZ"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Ritz"
      },
      {
        "from": [
          "Le Café Chambord",
          "Le Cafe Chambord"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Le Café Chambord"
      },
      {
        "from": [
          "PINE FOREST INN",
          "Pine Forest Inn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PINE FOREST INN"
      },
      {
        "from": [
          "OCEANIC STEAMSHIP CO. - SONOMA",
          "OCEANIC STEAMSHIP CO. _ SONOMA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEANIC STEAMSHIP CO. - SONOMA"
      },
      {
        "from": [
          "ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA",
          "THE ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA"
      },
      {
        "from": [
          "MANSION HOUSE",
          "Mansion House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MANSION HOUSE"
      },
      {
        "from": [
          "COTILLION CLUB",
          "Cotillion Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COTILLION CLUB"
      },
      {
        "from": [
          "CORTELYOU CLUB",
          "Cortelyou Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CORTELYOU CLUB"
      },
      {
        "from": [
          "The Washington",
          "THE WASHINGTON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Washington"
      },
      {
        "from": [
          "YORK HOTEL",
          "HOTEL YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "YORK HOTEL"
      },
      {
        "from": [
          "THE PORTLAND",
          "The Portland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE PORTLAND"
      },
      {
        "from": [
          "Hotel Royal",
          "ROYAL HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Royal"
      },
      {
        "from": [
          "HOTEL VENDOME",
          "VENDOME HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL VENDOME"
      },
      {
        "from": [
          "CIE TRANSATLANTIQUE",
          "CIE CIE TRANSATLANTIQUE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CIE TRANSATLANTIQUE"
      },
      {
        "from": [
          "US ARMY - SUBSISTENCE DEPT.",
          "U.S. ARMY - SUBSISTENCE DEPT."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "US ARMY - SUBSISTENCE DEPT."
      },
      {
        "from": [
          "Red Coach Grill",
          "RED COACH GRILL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Coach Grill"
      },
      {
        "from": [
          "Hotel Martinique",
          "MARTINIQUE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Martinique"
      },
      {
        "from": [
          "Hotel New Weston",
          "New Weston Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel New Weston"
      },
      {
        "from": [
          "BUFFALO CLUB",
          "Buffalo Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BUFFALO CLUB"
      },
      {
        "from": [
          "Copley-Plaza Hotel",
          "Hotel Copley-Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley-Plaza Hotel"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KINSHIN MARU",
          "NIPPON YUSEN KAISHA -S.S.KINSHIN MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA - S.S.KINSHIN MARU"
      },
      {
        "from": [
          "Hotel Victoria",
          "Victoria Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Victoria"
      },
      {
        "from": [
          "PONCE DE LEON HOTEL",
          "HOTEL PONCE DE LEON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PONCE DE LEON HOTEL"
      },
      {
        "from": [
          "Plaza",
          "PLAZA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Plaza"
      },
      {
        "from": [
          "(AMERICAN LINE)",
          "American Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(AMERICAN LINE)"
      },
      {
        "from": [
          "The Maplewood",
          "THE MAPLEWOOD"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Maplewood"
      },
      {
        "from": [
          "Hotel Lexington",
          "Lexington Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Lexington"
      },
      {
        "from": [
          "HOTEL REVELSTOKE",
          "REVELSTOKE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL REVELSTOKE"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA - S.S. KASUGA",
          "NIPPON YUSEN KAISHA -SS KASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA - S.S. KASUGA"
      },
      {
        "from": [
          "QUEEN CITY CLUB",
          "Queen City Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "QUEEN CITY CLUB"
      },
      {
        "from": [
          "HOTEL ROANOKE",
          "ROANOKE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ROANOKE"
      },
      {
        "from": [
          "Pennsylvania Railroad",
          "PENNSYLVANIA RAILROAD"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pennsylvania Railroad"
      },
      {
        "from": [
          "DES INDES HOTEL",
          "Hotel des Indes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DES INDES HOTEL"
      },
      {
        "from": [
          "Hotel Statler",
          "Statler Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Statler"
      },
      {
        "from": [
          "PROFILE HOUSE AND HOTEL VENDOME",
          "HOTEL VENDOME AND PROFILE HOUSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PROFILE HOUSE AND HOTEL VENDOME"
      },
      {
        "from": [
          "U.S.S. New York",
          "U.S.S. New York (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. New York"
      },
      {
        "from": [
          "CRESCENT ATHLETIC CLUB",
          "Crescent Athletic Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CRESCENT ATHLETIC CLUB"
      },
      {
        "from": [
          "The Lotos Club",
          "THE LOTOS CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Lotos Club"
      },
      {
        "from": [
          "GALLATIN HOTEL",
          "HOTEL GALLATIN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GALLATIN HOTEL"
      },
      {
        "from": [
          "Hofbrau Haus",
          "Hofbräu Haus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hofbrau Haus"
      },
      {
        "from": [
          "BOHEMIAN CLUB",
          "Bohemian Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOHEMIAN CLUB"
      },
      {
        "from": [
          "NEW ENGLAND SHORTHAND REPORTER'S ASSOCIATION",
          "NEW ENGLAND SHORTHAND REPORTERS' ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW ENGLAND SHORTHAND REPORTER'S ASSOCIATION"
      },
      {
        "from": [
          "HARVARD CLUB OF NEW YORK CITY",
          "Harvard Club Of New York City"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HARVARD CLUB OF NEW YORK CITY"
      }
    ],
    "description": "Mass edit cells in column sponsor"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "from": [
          "[NOT GIVEN]",
          "[Not Given]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "[NOT GIVEN]"
      }
    ],
    "description": "Mass edit cells in column sponsor"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.toUppercase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column event using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column event using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column event using expression value.toUppercase()"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value",
    "edits": [
      {
        "from": [
          "DINNER",
          "[DINNER]",
          "(DINNER)",
          "DINNER;",
          "DINNER (?)",
          "DINNER(?)",
          "[DINNER?]",
          "(?DINNER?)",
          "DINNER,",
          "DINNER?",
          "[?DINNER?]",
          "[DINNER ?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER"
      },
      {
        "from": [
          "LUNCH",
          "[LUNCH]",
          "(?LUNCH?)",
          "LUNCH;",
          "[LUNCH?]",
          "(LUNCH)",
          "LUNCH (?)",
          "LUNCH."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCH"
      },
      {
        "from": [
          "BREAKFAST",
          "[BREAKFAST]",
          "BREAKFAST;",
          "BREAKFAST (?)",
          "BREAKFAST(?)",
          "[BREAKFAST ?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BREAKFAST"
      },
      {
        "from": [
          "DAILY MENU",
          "(DAILY MENU)",
          "DAILY MENU;",
          "[DAILY MENU?]",
          "[DAILY] MENU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY MENU"
      },
      {
        "from": [
          "SUPPER",
          "SUPPER (?)",
          "SUPPER(?)",
          "SUPPER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SUPPER"
      },
      {
        "from": [
          "CARTE DU JOUR",
          "(CARTE DU JOUR)",
          "CARTE DU JOUR;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARTE DU JOUR"
      },
      {
        "from": [
          "LUNCH & DINNER",
          "LUNCH; DINNER",
          "[?DINNER? - LUNCH?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCH & DINNER"
      },
      {
        "from": [
          "FRUHSTUCK-BREAKFAST",
          "FRUHSTUCK/BREAKFAST",
          "FRUHSTUCK/BREAKFAST;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRUHSTUCK-BREAKFAST"
      },
      {
        "from": [
          "DAILY MENU, DINNER",
          "DAILY DINNER MENU",
          "DAILY MENU; DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY MENU, DINNER"
      },
      {
        "from": [
          "A LA CARTE; DINNER",
          "DINNER A LA CARTE",
          "DINNER; A LA CARTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A LA CARTE; DINNER"
      },
      {
        "from": [
          "DAILY LUNCH MENU",
          "DAILY MENU, LUNCH",
          "DAILY MENU; LUNCH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY LUNCH MENU"
      },
      {
        "from": [
          "LUNCH OR DINNER",
          "DINNER OR LUNCH",
          "LUNCH &/OR DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCH OR DINNER"
      },
      {
        "from": [
          "LUNCHEON",
          "[LUNCHEON]",
          "LUNCHEON;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCHEON"
      },
      {
        "from": [
          "ANNIVERSARY DINNER",
          "ANNIVERSARY DINNER?",
          "ANNIVERSARY [DINNER]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANNIVERSARY DINNER"
      },
      {
        "from": [
          "MITTAGESSEN",
          "MITTAG-ESSEN",
          "MITTAGESSEN;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MITTAGESSEN"
      },
      {
        "from": [
          "INSPECTION TRIP - LUNCHEON",
          "INSPECTION TRIP, LUNCHEON",
          "INSPECTION TRIP, LUNCHEON;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "INSPECTION TRIP - LUNCHEON"
      },
      {
        "from": [
          "BANQUET AND RECEPTION",
          "RECEPTION AND BANQUET"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BANQUET AND RECEPTION"
      },
      {
        "from": [
          "TABLE D'HOTE DINNER",
          "DINNER TABLE D'HOTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TABLE D'HOTE DINNER"
      },
      {
        "from": [
          "AFTERNOON TEA",
          "AFTERNOON TEA ["
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AFTERNOON TEA"
      },
      {
        "from": [
          "DINNER - SECOND CABIN",
          "DINNER SECOND CABIN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER - SECOND CABIN"
      },
      {
        "from": [
          "INSPECTION TRIP, DINNER",
          "INSPECTION TRIP, DINNER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "INSPECTION TRIP, DINNER"
      },
      {
        "from": [
          "MITTAGESSEN/DINNER",
          "MITTAGESSEN[DINNER]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MITTAGESSEN/DINNER"
      },
      {
        "from": [
          "WINE LIST",
          "WINE LIST;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WINE LIST"
      },
      {
        "from": [
          "DINNER,SECOND CABIN",
          "DINNER-SECOND CABIN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER,SECOND CABIN"
      },
      {
        "from": [
          "REUNION",
          "[?REUNION?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "REUNION"
      },
      {
        "from": [
          "LUNCHEON TABLE D'HOTE",
          "TABLE D'HOTE LUNCHEON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCHEON TABLE D'HOTE"
      },
      {
        "from": [
          "LADIES NIGHT",
          "LADIES' NIGHT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LADIES NIGHT"
      },
      {
        "from": [
          "BREAKFAST AND SUPPER",
          "SUPPER AND BREAKFAST"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BREAKFAST AND SUPPER"
      },
      {
        "from": [
          "WEDDING",
          "WEDDING(?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WEDDING"
      },
      {
        "from": [
          "RECEPTION",
          "[RECEPTION]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RECEPTION"
      },
      {
        "from": [
          "WASHINGTON'S BIRTHDAY BANQUET",
          "BANQUET (WASHINGTON'S BIRTHDAY?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WASHINGTON'S BIRTHDAY BANQUET"
      },
      {
        "from": [
          "ABEND-ESSEN",
          "ABENDESSEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABEND-ESSEN"
      },
      {
        "from": [
          "MENU",
          "MENU;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU"
      },
      {
        "from": [
          "ANNUAL DINNER",
          "[ANNUAL DINNER?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANNUAL DINNER"
      },
      {
        "from": [
          "BREAKFAST (?) HELD BY NORDEUTSCHER LLOYD BREMEN AT ON BOARD THE SS GEORGE WASHINGTON",
          "BREAKFAST HELD BY NORDEUTSCHER LLOYD BREMEN AT ON BOARD THE SS GEORGE WASHINGTON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BREAKFAST HELD BY NORDEUTSCHER LLOYD BREMEN AT ON BOARD THE SS GEORGE WASHINGTON"
      },
      {
        "from": [
          "DINER",
          "[DINER]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINER"
      },
      {
        "from": [
          "DINNER TO ABOVE",
          "DINNER TO ABOVE;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER TO ABOVE"
      },
      {
        "from": [
          "DAILY LUNCH;",
          "DAILY LUNCH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY LUNCH"
      },
      {
        "from": [
          "LUNCHEON A LA CARTE",
          "LUNCHEON, A LA CARTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCHEON A LA CARTE"
      },
      {
        "from": [
          "LINCOLN'S BIRTHDAY DINNER",
          "DINNER, LINCOLNS BIRTHDAY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LINCOLN'S BIRTHDAY DINNER"
      },
      {
        "from": [
          "NEW YEAR'S DINNER",
          "NEW YEARS DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YEAR'S DINNER"
      },
      {
        "from": [
          "FIFTH ANNUAL DINNER",
          "DINNER, FIFTH ANNUAL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FIFTH ANNUAL DINNER"
      },
      {
        "from": [
          "ST. VALENTINE'S DAY DINNER",
          "ST. VALENTINES DAY DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. VALENTINE'S DAY DINNER"
      },
      {
        "from": [
          "FRUHSTUCK/LUNCH",
          "FRUHSTUCK-LUNCH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRUHSTUCK/LUNCH"
      },
      {
        "from": [
          "NEW YEAR'S DAY DINNER",
          "NEW YEARS DAY DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YEAR'S DAY DINNER"
      },
      {
        "from": [
          "EIGHTH ANNUAL BANQUET",
          "EIGHTH ANNUAL BANQUET'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EIGHTH ANNUAL BANQUET"
      },
      {
        "from": [
          "DAILY MENU, BREAKFAST",
          "DAILY BREAKFAST MENU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY MENU, BREAKFAST"
      },
      {
        "from": [
          "DAILY MENU, LUNCHEON",
          "DAILY LUNCHEON MENU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY MENU, LUNCHEON"
      },
      {
        "from": [
          "PRIVATE DINNER",
          "[PRIVATE DINNER?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PRIVATE DINNER"
      },
      {
        "from": [
          "INSPECTION TRIP, BREAKFAST",
          "INSPECTION TRIP - BREAKFAST"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "INSPECTION TRIP, BREAKFAST"
      },
      {
        "from": [
          "MITTAGESSEN - DINNER",
          "MITTAGESSEN [DINNER]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MITTAGESSEN - DINNER"
      },
      {
        "from": [
          "LUNCH-DINNER",
          "LUNCH;DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCH-DINNER"
      },
      {
        "from": [
          "MIDDAG/DINNER",
          "MIDDAG-DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MIDDAG/DINNER"
      },
      {
        "from": [
          "DAILY BILL OF FARE",
          "DAILY BILL OF FARE;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY BILL OF FARE"
      }
    ],
    "description": "Mass edit cells in column event"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "physical_description",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column physical_description using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.toUppercase()"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "from": [
          "DELMONICO'S NY",
          "DELMONICO'S [NY]",
          "DELMONICO'S [NY?]",
          "DELMONICO'S, NY",
          "DELMONICO'S, N.Y.",
          "DELMONICO'S, NY;",
          "DELMONICO'S, [NY]",
          "DELMONICOS NY",
          "DELMONICOS', NY",
          "DELMONICOS, (NY)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DELMONICO'S NY"
      },
      {
        "from": [
          "DELMONICO'S, NEW YORK, NY",
          "DELMONICO'S, [NEW YORK, N.Y.]",
          "DELMONICOS, [NEW YORK, N.Y.]",
          "DELMONICO'S, (NEW YORK, NY?)",
          "DELMONICO'S, [NEW YORK, NY]",
          "DELMONICO'S, [NEW YORK, NY];",
          "DELMONICO'S. NEW YORK, NY",
          "DELMONICOS, (NEW YORK, NY?)",
          "DELMONICOS, NEW YORK, NY",
          "[DELMONICO'S], NEW YORK, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DELMONICO'S, NEW YORK, NY"
      },
      {
        "from": [
          "NEW YORK, NY",
          "NEW YORK, [NY]",
          "[NEW YORK, NY]",
          "[NEW YORK, NY?]",
          "(NEW YORK, NY?)",
          "NEW YORK, [NY];",
          "NEW YORK [NY]",
          "NEW YORK, NY [?]",
          "[NEW YORK, NY];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK, NY"
      },
      {
        "from": [
          "NEW YORK",
          "[NEW YORK]",
          "(NEW YORK?)",
          "NEW YORK;",
          "\"NEW YORK\"",
          "(NEW YORK)",
          "NEW YORK (?)",
          "NEW YORK(?)",
          "NEW YORK?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK"
      },
      {
        "from": [
          "AUDITORIUM HOTEL [CHICAGO, IL]",
          "AUDITORIUM HOTEL, CHICAGO, IL",
          "AUDITORIUM HOTEL , CHICAGO, IL",
          "AUDITORIUM HOTEL [CHICAGO IL]",
          "AUDITORIUM HOTEL, (?CHICAGO, IL?)",
          "AUDITORIUM HOTEL, (CHICAGO, IL?)",
          "AUDITORIUM HOTEL, CHICAGO [IL]",
          "AUDITORIUM HOTEL, CHICAGO, [IL]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AUDITORIUM HOTEL, CHICAGO, IL"
      },
      {
        "from": [
          "EN ROUTE \"FRIEDRICH DER GROSSE\"",
          "EN ROUTE - \"FRIEDRICH DER GROSSE\"",
          "EN ROUTE \" FRIEDRICH DER GROSSE\"",
          "EN ROUTE \"FRIEDRICH DER GROSSE \"",
          "EN ROUTE 'FRIEDRICH DER GROSSE\"",
          "EN ROUTE - 'FRIEDRICH DER GROSSE \"",
          "EN ROUTE - :FRIEDRICH DER GROSSE\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE \"FRIEDRICH DER GROSSE\""
      },
      {
        "from": [
          "PHILADELPHIA, PA",
          "PHILADELPHIA [PA]",
          "[PHILADELPHIA, PA]",
          "PHILADELPHIA, PA.",
          "PHILADELPHIA, [PA]",
          "PHILADELPHIA. PA",
          "[PHILADELPHIA, PA?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PHILADELPHIA, PA"
      },
      {
        "from": [
          "CHICAGO, IL",
          "CHICAGO, [IL]",
          "[CHICAGO, IL]",
          "CHICAGO IL",
          "CHICAGO [IL]",
          "[CHICAGO IL?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHICAGO, IL"
      },
      {
        "from": [
          "PROVIDENCE, RI",
          "PROVIDENCE, R.I.",
          "PROVIDENCE RI",
          "[PROVIDENCE RI?]",
          "[PROVIDENCE, R.I.]",
          "[PROVIDENCE, RI?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PROVIDENCE, RI"
      },
      {
        "from": [
          "SHERRY'S [NY]",
          "SHERRY'S NY",
          "SHERRY'S, NY",
          "SHERRY'S (NY?)",
          "SHERRYS, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SHERRY'S NY"
      },
      {
        "from": [
          "OLD POINT COMFORT, VA",
          "OLD POINT COMFORT VA",
          "OLD POINT COMFORT, VA.",
          "OLD POINT, COMFORT, VA",
          "[OLD POINT COMFORT, VA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OLD POINT COMFORT, VA"
      },
      {
        "from": [
          "HOTEL BRUNSWICK NY",
          "BRUNSWICK HOTEL [NY?]",
          "HOTEL BRUNSWICK [NY?]",
          "HOTEL BRUNSWICK, NY",
          "HOTEL BRUNSWICK; NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL BRUNSWICK NY"
      },
      {
        "from": [
          "HOTEL MANHATTAN, NY",
          "HOTEL MANHATTAN [NY]",
          "MANHATTAN HOTEL NY",
          "MANHATTAN HOTEL, NY",
          "HOTEL MANHATTAN, [NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MANHATTAN, NY"
      },
      {
        "from": [
          "DELMONICO'S,NY",
          "DELMONICO'S,[NY]",
          "DELMONICO'S[NY]",
          "DELMONICO'S,(NY?)",
          "DELMONICOS,[NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DELMONICO'S,NY"
      },
      {
        "from": [
          "SS FRIESLAND",
          "S.S. FRIESLAND",
          "SS. FRIESLAND",
          "S.S. \"FRIESLAND\"",
          "SS; \"FRIESLAND\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS FRIESLAND"
      },
      {
        "from": [
          "DELMONICO'S [NEW YORK]",
          "DELMONICO'S, [NEW YORK]",
          "DELMONICO'S, NEW YORK",
          "DELMONICO'S,( NEW YORK)",
          "DELMONICOS, NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DELMONICO'S, NEW YORK"
      },
      {
        "from": [
          "NY",
          "[NY]",
          "(NY)",
          "(N.Y.)",
          "(NY?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NY"
      },
      {
        "from": [
          "THE AUDITORIUM [CHICAGO, IL]",
          "THE AUDITORIUM, CHICAGO, IL",
          "AUDITORIUM, THE, CHICAGO, IL",
          "THE AUDITORIUM CHICAGO IL",
          "THE AUDITORIUM, [CHICAGO, IL]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE AUDITORIUM, CHICAGO, IL"
      },
      {
        "from": [
          "GRAND HOTEL, CINCINNATI OH",
          "GRAND HOTEL, CINCINNATI OH;",
          "GRAND HOTEL, CINCINNATI [OH]",
          "GRAND HOTEL, CINCINNATI, OH",
          "GRAND HOTEL, [CINCINNATI, OH]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAND HOTEL, CINCINNATI OH"
      },
      {
        "from": [
          "[SAN FRANCISCO,CA]",
          "SAN FRANCISCO,CA;",
          "SAN FRANCISCO,[CA?]",
          "SAN FRANCISCO,CA",
          "SAN FRANCISCO,CA."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SAN FRANCISCO,CA"
      },
      {
        "from": [
          "THE NEW WILLARD, WASHINGTON, DC",
          "NEW WILLARD, THE, WASHINGTON, DC",
          "THE NEW WILLARD [WASHINGTON, DC",
          "THE NEW WILLARD, WASHINGTON DC",
          "THE NEW WILLARD, WASHINGTON, D.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE NEW WILLARD, WASHINGTON, DC"
      },
      {
        "from": [
          "EN ROUTE - SS \"LAHN\"",
          "EN ROUTE - \"SS LAHN\"",
          "EN ROUTE \"SS LAHN\"",
          "EN ROUTE -SS \"LAHN\"",
          "EN ROUTE _ SS \"LAHN\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE - SS LAHN"
      },
      {
        "from": [
          "BUFFALO, NY",
          "(BUFFALO, NY?)",
          "BUFFALO NY(?)",
          "[BUFFALO, NY",
          "[BUFFALO, NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BUFFALO, NY"
      },
      {
        "from": [
          "PARIS, FRANCE",
          "PARIS, FRANCE(?)",
          "PARIS, [FRANCE]",
          "[PARIS, FRANCE?]",
          "[PARIS, FRANCE]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PARIS, FRANCE"
      },
      {
        "from": [
          "HOTEL SAVOY [NEW YORK]",
          "HOTEL SAVOY, NEW YORK",
          "HOTEL SAVOY, [NEW YORK]",
          "HOTEL SAVOY; NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL SAVOY, NEW YORK"
      },
      {
        "from": [
          "NEW YORK,NY",
          "(NEW YORK,NY)",
          "[NEW YORK,NY]",
          "NEW YORK,[NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK,NY"
      },
      {
        "from": [
          "EN ROUTE S.S.\"BARBAROSSA\"",
          "EN ROUTE - S.S.BARBAROSSA",
          "EN ROUTE; S.S.BARBAROSSA",
          "EN ROUTE; S.S.BARBAROSSA\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE - S.S.BARBAROSSA"
      },
      {
        "from": [
          "BROOKLYN,NY",
          "BROOKLYN,NY(?)",
          "BROOKLYN[NY]",
          "[BROOKLYN,NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROOKLYN,NY"
      },
      {
        "from": [
          "QUEBEC, CANADA",
          "QUEBEC [CANADA]",
          "QUEBEC,[ CANADA]",
          "QUEBEC, [CANADA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "QUEBEC, CANADA"
      },
      {
        "from": [
          "QUEEN CITY CLUB, [CINCINNATI, OH]",
          "QUEEN CITY CLUB (CINCINNATI OH?)",
          "QUEEN CITY CLUB CINCINNATI OH",
          "QUEEN CITY CLUB, CINCINNATI, OH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "QUEEN CITY CLUB CINCINNATI OH"
      },
      {
        "from": [
          "SS CITY OF RIO DE JANEIRO",
          "S.S. \"CITY OF RIO DE JANEIRO\"",
          "[SS CITY OF RIO DE JANEIRO?]",
          "[SS CITY OF RIO DE JANEIRO]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS CITY OF RIO DE JANEIRO"
      },
      {
        "from": [
          "AT SEA",
          "[AT SEA ?]",
          "(AT SEA)",
          "[AT SEA?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AT SEA"
      },
      {
        "from": [
          "DETROIT, MI",
          "(DETROIT, MI?)",
          "DETROIT, [MI]",
          "[DETROIT, MI]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DETROIT, MI"
      },
      {
        "from": [
          "WASHINGTON,D.C.",
          "WASHINGTON,DC",
          "WASHINGTON,[D.C.]",
          "[WASHINGTON,DC]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WASHINGTON,D.C."
      },
      {
        "from": [
          "MARLBOROUGH HOTEL, (?)",
          "HOTEL MARLBOROUGH",
          "HOTEL MARLBOROUGH, (?)",
          "MARLBOROUGH HOTEL, [?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MARLBOROUGH"
      },
      {
        "from": [
          "CHICAGO,ILL.",
          "CHICAGO,ILL;",
          "CHICAGO,ILL",
          "[CHICAGO,ILL]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHICAGO,ILL."
      },
      {
        "from": [
          "PHILADELPHIA,PA.",
          "PHILADELPHIA,PA",
          "PHILADELPHIA,[PA]",
          "[PHILADELPHIA,PA.]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PHILADELPHIA,PA."
      },
      {
        "from": [
          "BELLEVUE-STRATFORD HOTEL, PHILADELPHIA, PA",
          "HOTEL BELLEVUE-STRATFORD [PHILADELPHIA, PA]",
          "HOTEL BELLEVUE-STRATFORD, PHILADELPHIA, PA",
          "HOTEL BELLEVUE-STRATFORD, [PHILADELPHIA, PA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BELLEVUE-STRATFORD HOTEL, PHILADELPHIA, PA"
      },
      {
        "from": [
          "RMS CAMPANIA",
          "R.M.S. CAMPANIA",
          "R.M.S. \"CAMPANIA\"",
          "R.M.S. \" CAMPANIA\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RMS CAMPANIA"
      },
      {
        "from": [
          "SAN FRANCISCO, CA",
          "(SAN FRANCISCO, CA?)",
          "SAN FRANCISCO, CA;",
          "[SAN FRANCISCO, CA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SAN FRANCISCO, CA"
      },
      {
        "from": [
          "ATLANTIC CITY, NJ",
          "ATLANTIC CITY, N.J.",
          "ATLANTIC CITY, NJ;",
          "[ATLANTIC CITY, NJ]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ATLANTIC CITY, NJ"
      },
      {
        "from": [
          "ROME, ITALY",
          "ROME [ITALY]",
          "ROME ITALY",
          "[ROME, ITALY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROME, ITALY"
      },
      {
        "from": [
          "HOTEL VENDOME, BOSTON, MA",
          "HOTEL VENDOME, [BOSTON, MA];",
          "HOTEL VENDOME; BOSTON, MA",
          "VENDOME HOTEL, BOSTON, MA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL VENDOME, BOSTON, MA"
      },
      {
        "from": [
          "NASSAU,N.P.BAHAMAS",
          "NASSAU,NP,BAHAMAS",
          "NASSAU,NP;BAHAMAS",
          "[NASSAU,N.P.,BAHAMAS]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NASSAU,N.P.BAHAMAS"
      },
      {
        "from": [
          "[LONDON,ENGLAND]",
          "LONDON,[ENGLAND]",
          "LONDON,ENGLAND",
          "[LONDON,ENGLAND ?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LONDON,ENGLAND"
      },
      {
        "from": [
          "NEW ALGONQUIN CLUB, BOSTON, MA",
          "NEW ALGONQUIN CLUB [BOSTON, MA]",
          "NEW ALGONQUIN CLUB, (BOSTON, MA?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW ALGONQUIN CLUB, BOSTON, MA"
      },
      {
        "from": [
          "KONIGIN LUISE",
          "\"KONIGIN LUISE\"",
          "KONIGIN LUISE;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KONIGIN LUISE"
      },
      {
        "from": [
          "HOTEL PFISTER, MILWAUKEE, WI",
          "HOTEL PFISTER, MILWAUKEE WI",
          "PFISTER HOTEL, MILWAUKEE, WI"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL PFISTER, MILWAUKEE, WI"
      },
      {
        "from": [
          "SS: KAMAKURA MARU",
          "SS: \"KAMAKURA MARU\"",
          "SS; KAMAKURA MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS: KAMAKURA MARU"
      },
      {
        "from": [
          "66 ST. & B'WAY NY",
          "66 ST. & B'WAY. NY",
          "66 ST. & BWAY. NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "66 ST. & B'WAY. NY"
      },
      {
        "from": [
          "NEW YORK CITY",
          "[NEW YORK CITY]",
          "[?NEW YORK CITY?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK CITY"
      },
      {
        "from": [
          "R.M.S. \"EMPRESS OF CHINA\"",
          "RMS EMPRESS OF CHINA",
          "R.M.S. EMPRESS OF CHINA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. \"EMPRESS OF CHINA\""
      },
      {
        "from": [
          "LOS ANGELES,CA",
          "LOS ANGELES,CA;",
          "LOS ANGELES,[CA?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LOS ANGELES,CA"
      },
      {
        "from": [
          "SS WESTERNLAND",
          "S.S. WESTERNLAND",
          "S.S. \"WESTERNLAND\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS WESTERNLAND"
      },
      {
        "from": [
          "WASHINGTON, DC",
          "WASHINGTON, D.C.",
          "WASHINGTON DC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WASHINGTON, DC"
      },
      {
        "from": [
          "LONG BEACH,L.I.,NY;",
          "LONG BEACH,L.I.,[NY&]",
          "LONG BEACH,LI,[NY?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LONG BEACH,L.I.,NY;"
      },
      {
        "from": [
          "(CHICAGO, ILL)",
          "CHICAGO ,ILL",
          "CHICAGO, ILL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHICAGO ,ILL"
      },
      {
        "from": [
          "(CHICAGO,IL)",
          "CHICAGO,IL.",
          "CHICAGO,[IL]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(CHICAGO,IL)"
      },
      {
        "from": [
          "HOTEL SAVOY, NY",
          "HOTEL SAVOY NY",
          "HOTEL SAVOY, [NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL SAVOY, NY"
      },
      {
        "from": [
          "DETROIT,MI",
          "(DETROIT,MI?)",
          "DETROIT,[MI?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DETROIT,MI"
      },
      {
        "from": [
          "THE WALDORF, NEW YORK, NY",
          "THE WALDORF, [?NEW YORK, NY]",
          "THE WALDORF, [NEW YORK, NY?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE WALDORF, NEW YORK, NY"
      },
      {
        "from": [
          "MONTREAL [CANADA?]",
          "MONTREAL, CANADA",
          "MONTREAL, [CANADA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MONTREAL, CANADA"
      },
      {
        "from": [
          "NASSAU, N.P. BAHAMAS",
          "NASSAU, N.P., BAHAMAS",
          "[NASSAU, N.P., BAHAMAS]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NASSAU, N.P. BAHAMAS"
      },
      {
        "from": [
          "MANHATTAN HOTEL, NEW YORK, NY",
          "HOTEL MANHATTAN, NEW YORK, [NY];",
          "HOTEL MANHATTAN, [NEW YORK, NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MANHATTAN HOTEL, NEW YORK, NY"
      },
      {
        "from": [
          "COMMERCIAL CLUB, PORTLAND, OR",
          "COMMERCIAL CLUB, [PORTLAND, OR]",
          "PORTLAND COMMERCIAL CLUB, PORTLAND, OR"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COMMERCIAL CLUB, PORTLAND, OR"
      },
      {
        "from": [
          "BOSTON, MA",
          "BOSTON MA",
          "BOSTON; MA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOSTON, MA"
      },
      {
        "from": [
          "DELMONICO'S, NEW YORK CITY",
          "NEW YORK CITY, DELMONICO'S",
          "NEW YORK CITY; DELMONICO'S"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DELMONICO'S, NEW YORK CITY"
      },
      {
        "from": [
          "LAKEWOOD, NJ",
          "LAKEWOOD NJ",
          "LAKEWOOD, N.J."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LAKEWOOD, NJ"
      },
      {
        "from": [
          "MERCANTILE CLUB (ST LOUIS, MO)",
          "MERCANTILE CLUB, ST LOUIS [MO]",
          "MERCANTILE CLUB, ST. LOUIS, MO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MERCANTILE CLUB (ST LOUIS, MO)"
      },
      {
        "from": [
          "BOSTON,MASS",
          "BOSTON,MASS;",
          "(BOSTON,MASS)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOSTON,MASS"
      },
      {
        "from": [
          "COPENHAGEN, DENMARK",
          "[COPENHAGEN DENMARK?]",
          "[COPENHAGEN, DENMARK]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COPENHAGEN, DENMARK"
      },
      {
        "from": [
          "SS RIO DE JANEIRO",
          "SS: RIO DE JANEIRO",
          "SS; RIO DE JANEIRO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS RIO DE JANEIRO"
      },
      {
        "from": [
          "LONG BEACH, L.I, NY",
          "LONG BEACH, LI, [NY];",
          "LONG BEACH, L.I., NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LONG BEACH, L.I, NY"
      },
      {
        "from": [
          "HOTEL SOMERSET, BOSTON, MA",
          "HOTEL SOMERSET, BOSTON, [MA]",
          "HOTEL SOMERSET, [BOSTON, MA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL SOMERSET, BOSTON, MA"
      },
      {
        "from": [
          "NEW TONTINE HOTEL, NEW HAVEN [CT]",
          "TONTINE HOTEL, NEW HAVEN, CT",
          "TONTINE HOTEL, [NEW HAVEN, CT]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW TONTINE HOTEL, NEW HAVEN [CT]"
      },
      {
        "from": [
          "HOTEL SAVOY",
          "SAVOY HOTEL",
          "SAVOY HOTEL, (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL SAVOY"
      },
      {
        "from": [
          "SS COPTIC",
          "S.S. \"COPTIC\"",
          "S.S. COPTIC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS COPTIC"
      },
      {
        "from": [
          "ADELAIDE [AUSTRALIA?]",
          "ADELAIDE, AUSTRALIA",
          "[ADELAIDE, AUSTRALIA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ADELAIDE, AUSTRALIA"
      },
      {
        "from": [
          "ST. LOUIS, MO",
          "ST. LOUIS, [MO];",
          "ST. LOUIS [MO]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. LOUIS, MO"
      },
      {
        "from": [
          "ZERMATT, [SWITZERLAND]",
          "(ZERMATT, SWITZERLAND?)",
          "ZERMATT [SWITZERLAND]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ZERMATT, SWITZERLAND"
      },
      {
        "from": [
          "BELLEVUE-STRATFORD, (PHILADELPHIA, PA?)",
          "BELLEVUE-STRATFORD, PHILADELPHIA, PA",
          "BELLEVUE-STRATFORD, [PHILADELPHIA, PA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BELLEVUE-STRATFORD, PHILADELPHIA, PA"
      },
      {
        "from": [
          "SARATOGA SPRINGS, NY",
          "SARATOGA SPRINGS, NY.",
          "SARATOGA SPRINGS, [NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SARATOGA SPRINGS, NY"
      },
      {
        "from": [
          "WALDORF-ASTORIA, NEW YORK",
          "WALDORF-ASTORIA [NEW YORK]",
          "WALDORF-ASTORIA, [NEW YORK]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WALDORF-ASTORIA, NEW YORK"
      },
      {
        "from": [
          "R.M.S. \"ETRURIA\"",
          "R.M.S. ETRURIA",
          "RMS ETRURIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. ETRURIA"
      },
      {
        "from": [
          "ST. DENIS HOTEL",
          "HOTEL ST. DENIS",
          "ST. DENIS HOTEL, (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. DENIS HOTEL"
      },
      {
        "from": [
          "THE HOLLENDEN [CLEVELAND OH?]",
          "THE HOLLENDEN, CLEVELAND, OH",
          "THE HOLLENDEN, CLEVELAND; OH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE HOLLENDEN, CLEVELAND, OH"
      },
      {
        "from": [
          "SS CITY OF PARA",
          "S.S. \"CITY OF PARA\"",
          "S.S. \"CITY OF PARA'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS CITY OF PARA"
      },
      {
        "from": [
          "YOUNG'S HOTEL, BOSTON, MA",
          "YOUNG\"S HOTEL, BOSTON, MA",
          "YOUNG'S HOTEL, [BOSTON MA?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "YOUNG'S HOTEL, BOSTON, MA"
      },
      {
        "from": [
          "SS DORIC",
          "SS DORIC;",
          "S.S. \"DORIC\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS DORIC"
      },
      {
        "from": [
          "HOTEL MAJESTIC [PHILADELPHIA, PA]",
          "HOTEL MAJESTIC, PHILADELPHIA, PA",
          "MAJESTIC HOTEL, PHILADELPHIA. PA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MAJESTIC [PHILADELPHIA, PA]"
      },
      {
        "from": [
          "DELMONICO'S,[NEW YORK]",
          "DELMONICOS,[NEW YORK]",
          "(DELMONICO'S.NEW YORK)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DELMONICO'S, NEW YORK"
      },
      {
        "from": [
          "BERGEN, NORWAY",
          "(BERGEN, NORWAY)",
          "[BERGEN, NORWAY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BERGEN, NORWAY"
      },
      {
        "from": [
          "BROOKLYN, NY",
          "[BROOKLYN, NY]",
          "BROOKLYN NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROOKLYN, NY"
      },
      {
        "from": [
          "BRUNSWICK HOTEL, BOSTON, MA",
          "HOTEL BRUNSWICK, BOSTON, MA",
          "HOTEL BRUNSWICK, BOSTON [MA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BRUNSWICK HOTEL, BOSTON, MA"
      },
      {
        "from": [
          "R.M.S. \"LUCANIA\"",
          "RMS LUCANIA",
          "R.M.S. LUCANIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. LUCANIA"
      },
      {
        "from": [
          "HOTEL MARLBOROUGH, NEW YORK, NY",
          "HOTEL MARLBOROUGH, [NEW YORK, NY]",
          "MARLBOROUGH HOTEL, NEW YORK, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MARLBOROUGH, NEW YORK, NY"
      },
      {
        "from": [
          "66TH ST AND BROADWAY,NEW YORK,NY",
          "66TH ST. AND BROADWAY;NEW YORK,NY",
          "[66TH ST AND BROADWAY,NEW YORK,NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "66TH ST AND BROADWAY,NEW YORK,NY"
      },
      {
        "from": [
          "CLINTON COUNTY, NY",
          "CLINTON COUNTY NY",
          "CLINTON COUNTY, NY."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CLINTON COUNTY, NY"
      },
      {
        "from": [
          "SS KASUGA",
          "S.S. KASUGA",
          "SS: KASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS KASUGA"
      },
      {
        "from": [
          "CLEVELAND, OH",
          "[CLEVELAND, OH]",
          "CLEVELAND [OH]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CLEVELAND, OH"
      },
      {
        "from": [
          "THE ARLINGTON, WASHINGTON, D.C.",
          "THE ARLINGTON (WASHINGTON DC?)",
          "THE ARLINGTON, WASHINGTON, DC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE ARLINGTON, WASHINGTON, D.C."
      },
      {
        "from": [
          "?",
          "[?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "[NOT GIVEN]"
      },
      {
        "from": [
          "JACKSONVILLE, FL",
          "JACKSONVILLE, FL;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "JACKSONVILLE, FL"
      },
      {
        "from": [
          "ASTOR HOTEL, NEW YORK, NY",
          "HOTEL ASTOR, NEW YORK, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ASTOR HOTEL, NEW YORK, NY"
      },
      {
        "from": [
          "ABOARD SS KAMAKURA MARU",
          "ABOARD SS KAMAKURA MARU;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD SS KAMAKURA MARU"
      },
      {
        "from": [
          "PARKER HOUSE [BOSTON,MASS ?]",
          "PARKER HOUSE, BOSTON,MASS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PARKER HOUSE, BOSTON,MASS"
      },
      {
        "from": [
          "ST. CHARLES HOTEL,NEW ORLEANS,LA",
          "ST. CHARLES HOTEL,NEW ORLEANS,[LA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. CHARLES HOTEL,NEW ORLEANS,LA"
      },
      {
        "from": [
          "FANEUIL HALL, BOSTON, MA",
          "FANEUIL HALL, [BOSTON, MA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FANEUIL HALL, BOSTON, MA"
      },
      {
        "from": [
          "EN ROUTE \"H.H.MEIER\"",
          "EN ROUTE \" H.H.MEIER\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE \"H.H.MEIER\""
      },
      {
        "from": [
          "BERLIN, GERMANY",
          "BERLIN [GERMANY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BERLIN, GERMANY"
      },
      {
        "from": [
          "WALDORF-ASTORIA,NY",
          "WALDORF-ASTORIA,[NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WALDORF-ASTORIA,NY"
      },
      {
        "from": [
          "PITTSBURGH, PA",
          "[PITTSBURGH, PA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PITTSBURGH, PA"
      },
      {
        "from": [
          "PARIS,FRANCE",
          "(PARIS,FRANCE)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PARIS,FRANCE"
      },
      {
        "from": [
          "SAVOY HOTEL, NEW YORK, NY",
          "HOTEL SAVOY, NEW YORK, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SAVOY HOTEL, NEW YORK, NY"
      },
      {
        "from": [
          "ABOARD R.M.S. \"ETRURIA\"",
          "ABOARD R.M.S. ETRURIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD R.M.S. \"ETRURIA\""
      },
      {
        "from": [
          "HAMBURG, GERMANY",
          "HAMBURG, [GERMANY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HAMBURG, GERMANY"
      },
      {
        "from": [
          "LINCOLN CLUB - NY",
          "LINCOLN CLUB [NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LINCOLN CLUB - NY"
      },
      {
        "from": [
          "BANGKOK, THAILAND",
          "BANGKOK, [THAILAND]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BANGKOK, THAILAND"
      },
      {
        "from": [
          "66TH STREET AND BROADWAY,NEW YORK,NY",
          "[66TH STREET AND BROADWAY,NEW YORK,NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "66TH STREET AND BROADWAY,NEW YORK,NY"
      },
      {
        "from": [
          "ST. AUGUSTINE, FLA",
          "ST. AUGUSTINE, FLA."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. AUGUSTINE, FLA"
      },
      {
        "from": [
          "NEW HAVEN CT",
          "NEW HAVEN [CT]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW HAVEN CT"
      },
      {
        "from": [
          "MELBOURNE,AUSTRALIA",
          "[MELBOURNE,AUSTRALIA?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MELBOURNE,AUSTRALIA"
      },
      {
        "from": [
          "GRAMERCY PARK HOTEL",
          "HOTEL GRAMERCY PARK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAMERCY PARK HOTEL"
      },
      {
        "from": [
          "SHERRY'S, NEW YORK, NY",
          "SHERRY'S, [NEW YORK, NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SHERRY'S, NEW YORK, NY"
      },
      {
        "from": [
          "NASSAU, NP",
          "[NASSAU, N.P.]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NASSAU, NP"
      },
      {
        "from": [
          "HOFFMAN HOUSE NEW YORK, NY",
          "HOFFMAN HOUSE, NEW YORK, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOFFMAN HOUSE NEW YORK, NY"
      },
      {
        "from": [
          "HOTEL JEFFERSON, ST. LOUIS, MO",
          "JEFFERSON HOTEL, ST. LOUIS [MO]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL JEFFERSON, ST. LOUIS, MO"
      },
      {
        "from": [
          "EN ROUTE",
          "[EN ROUTE]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE"
      },
      {
        "from": [
          "ABOARD PAQUEBOT LA PROVENCE",
          "ABOARD PAQUEBOT \"LA PROVENCE\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD PAQUEBOT LA PROVENCE"
      },
      {
        "from": [
          "HOTEL STENTON [PHILADELPHIA PA]",
          "HOTEL STENTON, PHILADELPHIA, PA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL STENTON [PHILADELPHIA PA]"
      },
      {
        "from": [
          "(ROME,ITALY)",
          "ROME,ITALY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROME,ITALY"
      },
      {
        "from": [
          "SS TRINIDAD",
          "S.S. \"TRINIDAD\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS TRINIDAD"
      },
      {
        "from": [
          "WHITE MOUNTAINS, NH",
          "WHITE MOUNTAINS, NH;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WHITE MOUNTAINS, NH"
      },
      {
        "from": [
          "LIVERPOOL [ENGLAND?}",
          "LIVERPOOL, [ENGLAND]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LIVERPOOL, ENGLAND"
      },
      {
        "from": [
          "FRANKFURT, GERMANY",
          "[FRANKFURT, GERMANY?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRANKFURT, GERMANY"
      },
      {
        "from": [
          "PORTLAND, ME",
          "PORTLAND ME"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PORTLAND, ME"
      },
      {
        "from": [
          "ABOARD PAQUEBOT \"LA SAVOIE\"",
          "ABOARD PAQUEBOT LA SAVOIE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD PAQUEBOT LA SAVOIE"
      },
      {
        "from": [
          "THE BELLEVUE-STRATFORD, PHILADELPHIA, PA",
          "THE BELLEVUE-STRATFORD, [PHILADELPHIA, PA?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE BELLEVUE-STRATFORD, PHILADELPHIA, PA"
      },
      {
        "from": [
          "YOUNG'S HOTEL",
          "YOUNG'S HOTEL [?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "YOUNG'S HOTEL"
      },
      {
        "from": [
          "CLEVELAND,OH",
          "CLEVELAND,[OH?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CLEVELAND,OH"
      },
      {
        "from": [
          "MECHANICS HALL, [BOSTON, MA];",
          "MECHANICS' HALL, BOSTON, MA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MECHANICS' HALL, BOSTON, MA"
      },
      {
        "from": [
          "130 BROADWAY, NEW YORK",
          "130 BROADWAY, [NEW YORK]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "130 BROADWAY, NEW YORK"
      },
      {
        "from": [
          "EAGLE HOTEL (GETTYSBURG, PA?)",
          "EAGLE HOTEL, GETTYSBURG, PA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EAGLE HOTEL (GETTYSBURG, PA?)"
      },
      {
        "from": [
          "HOTEL DEL CAMPIDOGLIO, NEW YORK, NY",
          "HOTEL DEL CAMPIDOGLIO, [NEW YORK, N.Y.]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL DEL CAMPIDOGLIO, NEW YORK, NY"
      },
      {
        "from": [
          "ABOARD SS KASUGA;",
          "ABOARD SS KASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD SS KASUGA"
      },
      {
        "from": [
          "(CALIFORNIA?)",
          "CALIFORNIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CALIFORNIA"
      },
      {
        "from": [
          "SOUTHERN HOTEL, ST. LOUIS, MO",
          "SOUTHERN HOTEL, [ST. LOUIS, MO]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOUTHERN HOTEL, ST. LOUIS, MO"
      },
      {
        "from": [
          "CLINTON COUNTY,NY",
          "CLINTON COUNTY.NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CLINTON COUNTY,NY"
      },
      {
        "from": [
          "HOTEL GRAMERCY PARK; 52 GRAMERCY PARK NORTH",
          "GRAMERCY PARK HOTEL; HOTEL GRAMERCY PARK; 52 GRAMERCY PARK NORTH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL GRAMERCY PARK; 52 GRAMERCY PARK NORTH"
      },
      {
        "from": [
          "TACOMA, [WA?}",
          "TACOMA; WA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TACOMA; WA"
      },
      {
        "from": [
          "THE AUDITORIUM,CHICAGO,ILL;",
          "THE AUDITORIUM,[CHICAGO,ILL.]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE AUDITORIUM,CHICAGO,ILL"
      },
      {
        "from": [
          "DELMONICO'S,[NEW YORK,NY?]",
          "DELMONICO'S,NEW YORK,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DELMONICO'S,[NEW YORK,NY?]"
      },
      {
        "from": [
          "ROUND TABLE CLUB",
          "[ROUND TABLE CLUB]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROUND TABLE CLUB"
      },
      {
        "from": [
          "R.M.S. EMPRESS OF INDIA",
          "R.M.S. \"EMPRESS OF INDIA\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. EMPRESS OF INDIA"
      },
      {
        "from": [
          "BALTIMORE,MD",
          "BALTIMORE,MD."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BALTIMORE,MD"
      },
      {
        "from": [
          "EN ROUTE ABOARD SS KASUGA MARU",
          "EN ROUTE ABOARD SS. KASUGA MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD SS KASUGA MARU"
      },
      {
        "from": [
          "MAXWELL HOUSE, NASHVILLE, [TN];",
          "MAXWELL HOUSE, NASHVILLE, TN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MAXWELL HOUSE, NASHVILLE, [TN];"
      },
      {
        "from": [
          "HOTEL ZINZENDORF, WINSTON-SALEM, NC",
          "ZINZENDORF HOTEL, WINSTON-SALEM, NC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ZINZENDORF, WINSTON-SALEM, NC"
      },
      {
        "from": [
          "ORMOND, FL",
          "ORMOND, FL;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ORMOND, FL"
      },
      {
        "from": [
          "NASHVILLE, [TN?]",
          "NASHVILLE, TN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NASHVILLE, TN"
      },
      {
        "from": [
          "CLEVELAND, OHIO",
          "CLEVELAND. OHIO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CLEVELAND, OHIO"
      },
      {
        "from": [
          "THE TEN EYCK, ALBANY, NY",
          "TEN EYCK, THE, ALBANY, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE TEN EYCK, ALBANY, NY"
      },
      {
        "from": [
          "BUTLER, PA",
          "BUTLER, PA."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BUTLER, PA"
      },
      {
        "from": [
          "HOTEL MAJESTIC",
          "MAJESTIC HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MAJESTIC"
      },
      {
        "from": [
          "HOTEL ASTOR",
          "ASTOR HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ASTOR"
      },
      {
        "from": [
          "VIRGINIA BEACH, VA",
          "VIRGINIA BEACH VA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "VIRGINIA BEACH, VA"
      },
      {
        "from": [
          "MANILA, P.I.",
          "MANILA, PI"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MANILA, P.I."
      },
      {
        "from": [
          "BELLEVUE HOTEL, PHILADELPHIA, PA",
          "HOTEL BELLEVUE, PHILADELPHIA [PA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BELLEVUE HOTEL, PHILADELPHIA, PA"
      },
      {
        "from": [
          "ST. PETERSBURG,[RUSSIA]",
          "ST. PETERSBURG.RUSSIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. PETERSBURG.RUSSIA"
      },
      {
        "from": [
          "ROANOKE, VA",
          "ROANOKE, VA;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROANOKE, VA"
      },
      {
        "from": [
          "HAMBURG,GERMANY",
          "HAMBURG,[GERMANY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HAMBURG,GERMANY"
      },
      {
        "from": [
          "GRAND PACIFIC HOTEL, CHICAGO, IL",
          "GRAND PACIFIC HOTEL [CHICAGO, IL];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAND PACIFIC HOTEL, CHICAGO, IL"
      },
      {
        "from": [
          "DELMONICO'S NEW YORK,NY",
          "DELMONICO'S, [NEW YORK,N.Y.]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DELMONICO'S NEW YORK,NY"
      },
      {
        "from": [
          "CINCINNATI,OH",
          "[CINCINNATI,OH?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CINCINNATI,OH"
      },
      {
        "from": [
          "CORONADO BEACH, CA",
          "CORONADO BEACH, CA;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CORONADO BEACH, CA"
      },
      {
        "from": [
          "TAMPA, FL",
          "TAMPA FL?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TAMPA, FL"
      },
      {
        "from": [
          "UNION LEAGUE PHILADELPHIA [PA?]",
          "UNION LEAGUE, [PHILADELPHIA, PA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNION LEAGUE PHILADELPHIA [PA?]"
      },
      {
        "from": [
          "NARRAGANSETT HOTEL, PROVIDENCE RI",
          "NARRAGANSETT HOTEL, PROVIDENCE, RI"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NARRAGANSETT HOTEL, PROVIDENCE RI"
      },
      {
        "from": [
          "NYC",
          "[NYC]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NYC"
      },
      {
        "from": [
          "THE RALEIGH, WASHINGTON, DC",
          "THE RALEIGH, WASHINGTON DC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE RALEIGH, WASHINGTON, DC"
      },
      {
        "from": [
          "HORTICULTURAL HALL, PHILADELPHIA, PA",
          "HORTICULTURAL HALL, PHILADELPHIA [PA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HORTICULTURAL HALL, PHILADELPHIA, PA"
      },
      {
        "from": [
          "AZ",
          "[AZ]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AZ"
      },
      {
        "from": [
          "THE WELLINGTON, PROVIDENCE RI",
          "WELLINGTON, THE, PROVIDENCE, RI"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE WELLINGTON, PROVIDENCE RI"
      },
      {
        "from": [
          "(?FLA?)",
          "[FLA.]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FLA."
      },
      {
        "from": [
          "NEW YORK ATHLETIC CLUB",
          "NEW YORK ATHLETIC CLUB, [NEW YORK]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK ATHLETIC CLUB"
      },
      {
        "from": [
          "TAMPA,FLA.",
          "TAMPA.FLA."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TAMPA,FLA."
      },
      {
        "from": [
          "BOSTON, MASS.",
          "BOSTON, MASS;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOSTON, MASS."
      },
      {
        "from": [
          "HOTEL ST. GEORGE, NYACK, NY",
          "ST. GEORGE HOTEL, NYACK, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ST. GEORGE, NYACK, NY"
      },
      {
        "from": [
          "EN ROUTE ABOARD SS KOBE MARU",
          "EN ROUTE ABOARD SS. KOBE MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD SS KOBE MARU"
      },
      {
        "from": [
          "PARKER HOUSE,BOSTON,MASS;",
          "PARKER HOUSE,[BOSTON,MASS]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PARKER HOUSE,BOSTON,MASS;"
      },
      {
        "from": [
          "MELBOURNE, AUSTRALIA",
          "MELBOURNE [AUSTRALIA?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MELBOURNE, AUSTRALIA"
      },
      {
        "from": [
          "LUCERNE,SWITZERLAND",
          "[LUCERNE,SWITZERLAND?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUCERNE,SWITZERLAND"
      },
      {
        "from": [
          "NOS. 667 TO 677 [BROADWAY], OPPOSITE BOND STREET, MIDWAY BETWEEN BATTERY AND CENTRAL PARK, NEW YORK [NY];",
          "NOS. 667 TO 677 [BROADWAY], OPPOSITE BOND STREET, MIDWAY BETWEEN BATTERY AND CENTRAL PARK, NEW YORK, [NY];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NOS. 667 TO 677 [BROADWAY], OPPOSITE BOND STREET, MIDWAY BETWEEN BATTERY AND CENTRAL PARK, NEW YORK [NY];"
      },
      {
        "from": [
          "U.S.M.S. NEW YORK",
          "USMS NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S. NEW YORK"
      },
      {
        "from": [
          "DENVER, COLO.",
          "DENVER, COLO;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DENVER, COLO."
      },
      {
        "from": [
          "HOTEL WALTON,PHILADELPHIA,PA;",
          "HOTEL WALTON,[PHILADELPHIA,PA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL WALTON,PHILADELPHIA,PA;"
      },
      {
        "from": [
          "S.S. NACOOCHEE",
          "SS NACOOCHEE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. NACOOCHEE"
      },
      {
        "from": [
          "RMS OCEANIC",
          "R.M.S. OCEANIC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RMS OCEANIC"
      },
      {
        "from": [
          "ARGYLE, THE, BROOKLYN, NY",
          "THE ARGYLE, BROOKLYN, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ARGYLE, THE, BROOKLYN, NY"
      },
      {
        "from": [
          "CHAMBERLIN'S, (WASHINGTON,D.C.)",
          "CHAMBERLIN'S; [WASHINGTON,DC?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHAMBERLIN'S, (WASHINGTON,D.C.)"
      },
      {
        "from": [
          "117 WEST 34TH STREET,NEW YORK,NY",
          "117 WEST 34TH STREET,[NEW YORK,NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "117 WEST 34TH STREET,NEW YORK,NY"
      },
      {
        "from": [
          "UNION LEAGUE CLUB NY;",
          "UNION LEAGUE CLUB, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNION LEAGUE CLUB NY;"
      },
      {
        "from": [
          "METROPOLITAN CLUB, NEW YORK, NY",
          "METROPOLITAN CLUB, [?NEW YORK, NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "METROPOLITAN CLUB, NEW YORK, NY"
      },
      {
        "from": [
          "PUT-IN-BAY-ISLAND, LAKE ERIE, OH;",
          "PUT-IN-BAY-ISLAND, LAKE ERIE, OH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PUT-IN-BAY-ISLAND, LAKE ERIE, OH;"
      },
      {
        "from": [
          "HOTEL ST. DENIS, NY",
          "ST. DENIS HOTEL; NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ST. DENIS, NY"
      },
      {
        "from": [
          "DELMONICO'S",
          "DELMONICOS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DELMONICO'S"
      },
      {
        "from": [
          "\"THE ARGYLE\"",
          "THE ARGYLE [?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE ARGYLE"
      },
      {
        "from": [
          "MANHATTAN BEACH, LONG ISLAND [NY]",
          "MANHATTAN BEACH, LONG ISLAND, [NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MANHATTAN BEACH, LONG ISLAND [NY]"
      },
      {
        "from": [
          "EN ROUTE ABOARD S.S. \"KOBE WARU\"",
          "EN ROUTE ABOARD S.S. KOBE WARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD S.S. \"KOBE WARU\""
      },
      {
        "from": [
          "RESIDENCE-PALAIS, COPENHAGEN, DENMARK",
          "[RESIDENCE-PALAIS, COPENHAGEN, DENMARK]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RESIDENCE-PALAIS, COPENHAGEN, DENMARK"
      },
      {
        "from": [
          "GERMANTOWN (PA?)",
          "[GERMANTOWN, PA?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GERMANTOWN, PA"
      },
      {
        "from": [
          "DAMPFER; H.H. MEIER",
          "DAMPFER \"H.H. MEIER\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAMPFER; H.H. MEIER"
      },
      {
        "from": [
          "BATTLE CREEK, MI",
          "BATTLE CREEK, MI;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BATTLE CREEK, MI"
      },
      {
        "from": [
          "OMAHA NEBRASKA",
          "OMAHA, NEBRASKA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OMAHA NEBRASKA"
      },
      {
        "from": [
          "114 WEST FOURTEENTH STREET, NEW YORK",
          "114 WEST FOURTEENTH STREET, [NEW YORK]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "114 WEST FOURTEENTH STREET, NEW YORK"
      },
      {
        "from": [
          "GERMANY(?)",
          "[GERMANY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GERMANY"
      },
      {
        "from": [
          "NEW WILLARD [WASHINGTON, [DC]",
          "NEW WILLARD, WASHINGTON, DC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW WILLARD [WASHINGTON, [DC]"
      },
      {
        "from": [
          "CINCINNATI , OHIO",
          "CINCINNATI, OHIO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CINCINNATI , OHIO"
      },
      {
        "from": [
          "DAMPFER KAISER WILHELM DER GROSSE;",
          "DAMPFER \"KAISER WILHELM DER GROSSE\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAMPFER KAISER WILHELM DER GROSSE;"
      },
      {
        "from": [
          "ELLICOTT SQUARE, BUFFALO, NY",
          "ELLICOTT SQUARE, BUFFALO, [NY];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ELLICOTT SQUARE, BUFFALO, NY"
      },
      {
        "from": [
          "BRUNSWICK,THE,BOSTON,[MASS]",
          "BRUNSWICK,THE,BOSTON[MASS]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BRUNSWICK,THE,BOSTON,[MASS]"
      },
      {
        "from": [
          "CONVENTION HALL, (BUFFALO, NY?)",
          "CONVENTION HALL, BUFFALO, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CONVENTION HALL, BUFFALO, NY"
      },
      {
        "from": [
          "WALDORF-ASTORIA [NY?]",
          "WALDORF-ASTORIA, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WALDORF-ASTORIA, NY"
      },
      {
        "from": [
          "ASCOT [ENGLAND]",
          "ASCOT, ENGLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ASCOT, ENGLAND"
      },
      {
        "from": [
          "LOGAN HOUSE, ALTOONA, PA",
          "LOGAN HOUSE; ALTOONA, PA;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LOGAN HOUSE, ALTOONA, PA"
      },
      {
        "from": [
          "PENN.",
          "PENN;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PENN."
      },
      {
        "from": [
          "NARRAGANSETT PIER R.I.",
          "NARRAGANSETT PIER, RI"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NARRAGANSETT PIER R.I."
      },
      {
        "from": [
          "WORCESTER, MASS",
          "WORCESTER, MASS;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WORCESTER, MASS"
      },
      {
        "from": [
          "UNION LEAGUE,(PHILADELPHIA,PA)",
          "UNION LEAGUE,[PHILADELPHIA,PA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNION LEAGUE,(PHILADELPHIA,PA)"
      },
      {
        "from": [
          "UNION CLUB",
          "UNION CLUB, (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNION CLUB"
      },
      {
        "from": [
          "PULLMAN DINING CAR SERVICE EN ROUTE",
          "PULLMAN DINING CAR SERVICE (EN ROUTE?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PULLMAN DINING CAR SERVICE EN ROUTE"
      },
      {
        "from": [
          "DELMONICO'S,[NEW YORK, N.Y.]",
          "[DELMONICO'S,NEW YORK NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DELMONICO'S,[NEW YORK, N.Y.]"
      },
      {
        "from": [
          "EN ROUTE S.S VADERLAND",
          "EN ROUTE S.S. VADERLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE S.S VADERLAND"
      },
      {
        "from": [
          "ACADEMY OF MUSIC BROOKLYN, NY",
          "ACADEMY OF MUSIC, [BROOKLYN, NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ACADEMY OF MUSIC BROOKLYN, NY"
      },
      {
        "from": [
          "FAIRMONT HOTEL [SAN FRANCISCO, CA]",
          "FAIRMONT HOTEL, SAN FRANCISCO, CA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FAIRMONT HOTEL, SAN FRANCISCO, CA"
      },
      {
        "from": [
          "PARK ROW BLDG. [NY]",
          "PARK ROW BLDG., [NY, NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PARK ROW BLDG., NY"
      },
      {
        "from": [
          "ST.DENIS HOTEL,NY",
          "ST.DENIS HOTEL[NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST.DENIS HOTEL,NY"
      },
      {
        "from": [
          "THE PLAZA",
          "PLAZA, THE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE PLAZA"
      },
      {
        "from": [
          "COLORADO SPRINGS, CO",
          "[COLORADO SPRINGS, CO]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COLORADO SPRINGS, CO"
      },
      {
        "from": [
          "EN ROUTE ABOARD S.S. WESTERNLAND",
          "EN ROUTE ABOARD S.S. WESTERNLAND;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD S.S. WESTERNLAND"
      },
      {
        "from": [
          "ARGYLE,THE,BROOKLYN,NY",
          "ARGYLE,THE,[BROOKLYN,NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ARGYLE,THE,BROOKLYN,NY"
      },
      {
        "from": [
          "PUT-IN-BAY, OH",
          "PUT-IN-BAY, OH;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PUT-IN-BAY, OH"
      },
      {
        "from": [
          "ABOARD PAQUEBOT LA TOURAINE",
          "ABOARD PAQUEBOT \"LA TOURAINE\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD PAQUEBOT LA TOURAINE"
      },
      {
        "from": [
          "AUDITORIUM",
          "AUDITORIUM, (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AUDITORIUM"
      },
      {
        "from": [
          "HOTEL IROQUOIS,(BUFFALO,N.Y.)",
          "HOTEL IROQUOIS,BUFFALO,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL IROQUOIS,BUFFALO,NY"
      },
      {
        "from": [
          "HOTEL CONTINENTAL (PARIS, FRANCE?)",
          "HOTEL CONTINENTAL, [PARIS, FRANCE]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL CONTINENTAL, PARIS, FRANCE"
      },
      {
        "from": [
          "GLENWOOD SPRINGS, CO",
          "[GLENWOOD SPRINGS, CO]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GLENWOOD SPRINGS, CO"
      },
      {
        "from": [
          "PAWLING, NY",
          "PAWLING NY(?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PAWLING, NY"
      },
      {
        "from": [
          "R.M.S.ROTTERDAM",
          "RMS-ROTTERDAM"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S.ROTTERDAM"
      },
      {
        "from": [
          "SS KAISER WILHELM DER GROSSE",
          "S.S. \"KAISER WILHELM DER GROSSE\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS KAISER WILHELM DER GROSSE"
      },
      {
        "from": [
          "ABOARD 'PRINZ FRIEDRICH WILHELM'",
          "ABOARD PRINZ FRIEDRICH WILHELM''"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD 'PRINZ FRIEDRICH WILHELM'"
      },
      {
        "from": [
          "EN ROUTE ABOARD ABOVE",
          "EN ROUTE ABOARD ABOVE (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD ABOVE"
      },
      {
        "from": [
          "PUT-IN-BAY ISLAND, LAKE ERIE, OH",
          "PUT-IN-BAY ISLAND, LAKE ERIE, OH;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PUT-IN-BAY ISLAND, LAKE ERIE, OH"
      },
      {
        "from": [
          "RUSSELL HOUSE, DETROIT, MI",
          "RUSSELL HOUSE; DETROIT, MI"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RUSSELL HOUSE, DETROIT, MI"
      },
      {
        "from": [
          "NEW ORLEANS, LA",
          "NEW ORLEANS, [LA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW ORLEANS, LA"
      },
      {
        "from": [
          "BAR HARBOR [ME]",
          "BAR HARBOR, ME"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BAR HARBOR [ME]"
      },
      {
        "from": [
          "SCHNELLDAMPFER \"AUGUSTE VICTORIA\"",
          "SCHNELLDAMPFER: \"AUGUSTE VICTORIA\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SCHNELLDAMPFER \"AUGUSTE VICTORIA\""
      },
      {
        "from": [
          "S.S. ZEALANDIA",
          "SS ZEALANDIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. ZEALANDIA"
      },
      {
        "from": [
          "EN ROUTE S.S. ZEELAND",
          "EN ROUTE S.S ZEELAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE S.S. ZEELAND"
      },
      {
        "from": [
          "THE ARLINGTON,WASH.DC",
          "THE ARLINGTON,WASH.DC."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE ARLINGTON,WASH.DC"
      },
      {
        "from": [
          "UNION LEAGUE",
          "(UNION LEAGUE?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNION LEAGUE"
      },
      {
        "from": [
          "MIRAMAR (?)",
          "[MIRAMAR?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MIRAMAR"
      },
      {
        "from": [
          "ABOARD PAQUEBOT LA LORRAINE",
          "ABOARD PAQUEBOT \"LA LORRAINE\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD PAQUEBOT LA LORRAINE"
      },
      {
        "from": [
          "57 BROAD STREET, NY",
          "57 BROAD STREET - NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "57 BROAD STREET, NY"
      },
      {
        "from": [
          "CINCINNATI, OH",
          "CINCINNATI [OH]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CINCINNATI, OH"
      },
      {
        "from": [
          "EN ROUTE ABOARD SS. KASUGA",
          "EN ROUTE ABOARD SS KASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD SS. KASUGA"
      },
      {
        "from": [
          "ABOARD PAQUEBOT \"LA BRETAGNE\"",
          "ABOARD PAQUEBOT LA BRETAGNE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD PAQUEBOT LA BRETAGNE"
      },
      {
        "from": [
          "ROANOKE,VA",
          "ROANOKE,VA;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROANOKE,VA"
      },
      {
        "from": [
          "HOTEL MANHATTAN,NY",
          "HOTEL MANHATTAN,[NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MANHATTAN,NY"
      },
      {
        "from": [
          "MINNEAPOLIS CLUB, MINNEAPOLIS, MN",
          "MINNEAPOLIS CLUB; MINNEAPOLIS, MN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MINNEAPOLIS CLUB, MINNEAPOLIS, MN"
      },
      {
        "from": [
          "EN ROUTE ABOARD S.S. FRIESLAND",
          "EN ROUTE ABOARD SS FRIESLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD S.S. FRIESLAND"
      },
      {
        "from": [
          "ATLANTIC CITY,NJ",
          "ATLANTIC CITY,[NJ]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ATLANTIC CITY,NJ"
      },
      {
        "from": [
          "BWAY & 63RD ST. NY",
          "B'WAY & 63RD ST. NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BWAY & 63RD ST. NY"
      },
      {
        "from": [
          "SYRACUSE NY",
          "SYRACUSE, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SYRACUSE NY"
      },
      {
        "from": [
          "ADIRONDACKS, NY",
          "ADIRONDACKS [NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ADIRONDACKS, NY"
      },
      {
        "from": [
          "FRANCONIA NOTCH NH",
          "FRANCONIA NOTCH NH,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRANCONIA NOTCH NH"
      },
      {
        "from": [
          "ALTOONA, PA",
          "ALTOONA, PA;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ALTOONA, PA"
      },
      {
        "from": [
          "139 EIGHTH STREET BET. BROADWAY AND 4TH AVE., NEW YORK [NY];",
          "139 EIGHTH STREET, BET. BROADWAY AND 4TH AVE., NEW YORK, [NY];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "139 EIGHTH STREET BET. BROADWAY AND 4TH AVE., NEW YORK [NY];"
      },
      {
        "from": [
          "LOS ANGELES, CA;",
          "LOS ANGELES, CA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LOS ANGELES, CA"
      },
      {
        "from": [
          "HOTEL MANHATTAN, NEW YORK",
          "HOTEL MANHATTAN, [NEW YORK]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MANHATTAN, NEW YORK"
      },
      {
        "from": [
          "MILWAUKEE, WI",
          "MILWAUKEE, [WI];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MILWAUKEE, WI"
      },
      {
        "from": [
          "WINDSOR HOTEL,(NY)",
          "WINDSOR HOTEL[NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WINDSOR HOTEL,(NY)"
      },
      {
        "from": [
          "NAPLES [ITALY]",
          "NAPLES, ITALY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NAPLES, ITALY"
      },
      {
        "from": [
          "KRUEGER AUDITORIUM (NEWARK NJ?)",
          "KRUEGER AUDITORIUM, NEWARK, NJ"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KRUEGER AUDITORIUM (NEWARK NJ?)"
      },
      {
        "from": [
          "DINING CAR",
          "DINING CAR;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINING CAR"
      },
      {
        "from": [
          "UNION LEAGUE CLUB, NEW YORK, NY",
          "UNION LEAGUE CLUB, [NEW YORK, NY?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNION LEAGUE CLUB, NEW YORK, NY"
      },
      {
        "from": [
          "SS \"FRIEDRICH DER GROSSE\"",
          "SS FRIEDRICH DER GROSSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS \"FRIEDRICH DER GROSSE\""
      },
      {
        "from": [
          "HOTEL ASTOR, NEW YORK",
          "HOTEL ASTOR, [NEW YORK]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ASTOR, NEW YORK"
      },
      {
        "from": [
          "CHICAGO ATHLETIC ASSOCIATION",
          "CHICAGO ATHLETIC ASSOCIATION;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHICAGO ATHLETIC ASSOCIATION"
      },
      {
        "from": [
          "ST. DENIS HOTEL (NEW YORK?)",
          "ST. DENIS HOTEL, NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. DENIS HOTEL, NEW YORK"
      },
      {
        "from": [
          "TERRACE GARDEN",
          "TERRACE GARDEN,?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TERRACE GARDEN"
      },
      {
        "from": [
          "66TH ST. & BWAY NY",
          "66TH ST & B'WAY, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "66TH ST. & BWAY NY"
      },
      {
        "from": [
          "ST. CHARLES HOTEL, NEW ORLEANS LA",
          "ST. CHARLES HOTEL, NEW ORLEANS, LA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. CHARLES HOTEL, NEW ORLEANS LA"
      },
      {
        "from": [
          "ELLICOTT CLUB, BUFFALO, NY",
          "ELLICOTT CLUB (BUFFALO NY?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ELLICOTT CLUB, BUFFALO, NY"
      },
      {
        "from": [
          "57 BROAD STREET, NEW YORK, [NY]",
          "57 BROAD STREET, NEW YORK, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "57 BROAD STREET, NEW YORK, NY"
      },
      {
        "from": [
          "CAMPOBELLO ISLAND",
          "CAMPOBELLO ISLAND,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAMPOBELLO ISLAND"
      },
      {
        "from": [
          "HOTEL BELLEVUE",
          "BELLEVUE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL BELLEVUE"
      },
      {
        "from": [
          "HAVANA,CUBA",
          "[HAVANA,CUBA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HAVANA,CUBA"
      },
      {
        "from": [
          "CECIL HOTEL, LONDON, ENGLAND",
          "HOTEL CECIL, LONDON, ENGLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CECIL HOTEL, LONDON, ENGLAND"
      },
      {
        "from": [
          "SARATOGA SPRINGS,NY",
          "SARATOGA SPRINGS,[NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SARATOGA SPRINGS,NY"
      },
      {
        "from": [
          "WINDSOR CASTLE, ENGLAND",
          "WINDSOR CASTLE, [ENGLAND]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WINDSOR CASTLE, ENGLAND"
      },
      {
        "from": [
          "NASHVILLE, TENN.",
          "NASHVILLE, TENN;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NASHVILLE, TENN."
      },
      {
        "from": [
          "HOTEL WILLARD, WASHINGTON, DC",
          "WILLARD HOTEL, [WASHINGTON, DC]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL WILLARD, WASHINGTON, DC"
      },
      {
        "from": [
          "THE WALDORF ASTORIA",
          "WALDORF ASTORIA, THE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE WALDORF ASTORIA"
      },
      {
        "from": [
          "SS WESTERNLAND, EN ROUTE",
          "SS WESTERNLAND - EN ROUTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS WESTERNLAND, EN ROUTE"
      },
      {
        "from": [
          "NARRAGANSETT PIER,R.I.",
          "NARRAGANSETT PIER,RI"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NARRAGANSETT PIER,RI"
      },
      {
        "from": [
          "BUDAPEST, HUNGARY",
          "BUDAPEST, (HUNGARY)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BUDAPEST, HUNGARY"
      },
      {
        "from": [
          "SARATOGA, NY",
          "SARATOGA, [NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SARATOGA, NY"
      },
      {
        "from": [
          "156 SECOND AVENUE (NY?)",
          "156 SECOND AVENUE, [NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "156 SECOND AVENUE, NY"
      },
      {
        "from": [
          "TAYLOR'S HOTEL, JERSEY CITY [NJ]",
          "TAYLOR'S HOTEL, JERSEY CITY, N.J."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TAYLOR'S HOTEL, JERSEY CITY [NJ]"
      },
      {
        "from": [
          "WHITEHALL ROOMS, THE HOTEL METROPOLE, LONDON [ENGLAND]",
          "WHITEHALL ROOMS, THE HOTEL METROPOLE, LONDON, [ENGLAND]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WHITEHALL ROOMS, THE HOTEL METROPOLE, LONDON [ENGLAND]"
      },
      {
        "from": [
          "CHICAGO BEACH HOTEL [CHICAGO, IL]",
          "CHICAGO BEACH HOTEL, CHICAGO, [IL];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHICAGO BEACH HOTEL, CHICAGO, IL"
      },
      {
        "from": [
          "[TOKYO, JAPAN]",
          "TOKYO, JAPAN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TOKYO, JAPAN"
      },
      {
        "from": [
          "PARK ROW BUILDING [NY]",
          "PARK ROW BUILDING, [NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PARK ROW BUILDING, NY"
      },
      {
        "from": [
          "GRAND PACIFIC HOTEL",
          "GRAND PACIFIC HOTEL,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAND PACIFIC HOTEL"
      }
    ],
    "description": "Mass edit cells in column place"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "physical_description",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column physical_description using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "physical_description",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column physical_description using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "physical_description",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column physical_description using expression value.toUppercase()"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "physical_description",
    "expression": "value",
    "edits": [
      {
        "from": [
          "CARD; ILLUS; COL; 5.5 X 8.25;",
          "CARD; COL; ILLUS; 5.5 X 8.25;",
          "CARD; ILLUS; COL; 5.5 X 8.25",
          "CARD ILLUS; COL; 5.5 X 8.25;",
          "CARD; COL; ILLUS; 5.5 X 8.25",
          "CARD; ILLUS COL; 5.5 X 8.25;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; COL; 5.5 X 8.25;"
      },
      {
        "from": [
          "CARD; COL; ILLUS; 5.5 X 8;",
          "CARD; ILLUS; COL; 5.5 X 8;",
          "CARD, ILLUS; COL; 5.5 X 8;",
          "CARD; COL; ILLUS; 5.5 X 8",
          "CARD; ILLUS; COL; 5.5 X 8"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; COL; ILLUS; 5.5 X 8;"
      },
      {
        "from": [
          "BROADSIDE; ILLUS; COL; 5.5 X 8;",
          "BROADSIDE; ILLUS; COL; 5.5. X 8;",
          "BROADSIDE; ILLUS ;COL; 5.5 X 8;",
          "BROADSIDE; ILLUS; COL; 5.5 X 8 ;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSIDE; ILLUS; COL; 5.5 X 8;"
      },
      {
        "from": [
          "FOLDER; ILLUS; COL; 5.25 X 7.5;",
          "FOLDER; COL; ILLUS; 5.25 X 7.5;",
          "FOLDER; ILLUS; COL; 5.25 X 7.5",
          "FOLDER ILLUS; COL; 5.25 X 7.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; COL; 5.25 X 7.5;"
      },
      {
        "from": [
          "12 1/2 X 9 1/2 IN. FOLD.",
          "12 1/2 X 9 IN. FOLD.",
          "9 1/2 X 12 IN. FOLD."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "12 1/2 X 9 1/2 IN. FOLD."
      },
      {
        "from": [
          "FOLDER; ILLUS; COL; 4.5 X 6.75;",
          "FOLDER; COL; ILLUS; 4.5 X 6.75;",
          "FOLDER; ILLUS; COL; 4.5 X 6.75"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; COL; 4.5 X 6.75;"
      },
      {
        "from": [
          "FOLDER; ILLUS; 4.5 X 7;",
          "FOLDER; ILLUS; 4.5 X 7",
          "FOLDER; ILLUS; 4.5 X 7.;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; 4.5 X 7;"
      },
      {
        "from": [
          "8 1/2 X 5 1/2 IN. FOLD. ; ILL.",
          "8 X 5 1/2 IN. FOLD. ; ILL.",
          "8 1/2 X 5 1/2 IN., FOLD. ; ILL."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "8 1/2 X 5 1/2 IN. FOLD. ; ILL."
      },
      {
        "from": [
          "BROADSIDE; ILLUS BORDER; 5.25 X 7.75;",
          "BROADSIDE; ILLUS, BORDER; 5.25 X 7.75;",
          "BROADSIDE; ILLUS. BORDER; 5.25 X 7.75;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSIDE; ILLUS BORDER; 5.25 X 7.75;"
      },
      {
        "from": [
          "ILLUS. FOLDER",
          "FOLDER ILLUS.",
          "FOLDER; ILLUS;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ILLUS. FOLDER"
      },
      {
        "from": [
          "CARD; ILLUS; COL; 5.5 X 8.5",
          "CARD; COL; ILLUS; 5.5 X 8.5",
          "CARD; ILLUS; COL; 5.5 X 8.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; COL; 5.5 X 8.5"
      },
      {
        "from": [
          "CARD; 4.5X6.75;",
          "CARD; 4.5X6.75",
          "CARD; 4/5X6/75;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 4.5X6.75;"
      },
      {
        "from": [
          "CARD; 4X6.5;",
          "CARD; 4X6.5",
          "CARD; 4X6/5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 4X6.5;"
      },
      {
        "from": [
          "FOLDER; ILLUS; 6 X 9.5;",
          "FOLDER; ILLUS; 6 X 9.5",
          "FOLDER; ILLUS; 9.5 X 6;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; 6 X 9.5;"
      },
      {
        "from": [
          "10 X 6 1/2 IN. ; ILL.",
          "10 1/2 X 6 1/2 IN. ; ILL.",
          "10 1/2 X 6 IN. ; ILL."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "10 X 6 1/2 IN. ; ILL."
      },
      {
        "from": [
          "BROADSIDE; EMBLEM; COL; 5.5 X 7;",
          "BROADSIDE; EMBLEM COL; 5.5 X 7;",
          "BROADSIDE EMBLEM COL; 5.5 X 7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSIDE; EMBLEM; COL; 5.5 X 7;"
      },
      {
        "from": [
          "9 X 6 1/2 IN. FOLD. ; ILL.",
          "9 1/2 X 6 IN. FOLD. ; ILL.",
          "9 1/2 X 6 1/2 IN. FOLD. ; ILL."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "9 X 6 1/2 IN. FOLD. ; ILL."
      },
      {
        "from": [
          "FOLDER; ILLUS; 5.5 X 7;",
          "FOLDER, ILLUS; 5.5 X 7;",
          "FOLDER,; ILLUS; 5.5 X 7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; 5.5 X 7;"
      },
      {
        "from": [
          "FOLDER; ILLUS; COL; 4.5 X 7;",
          "FOLDER; COL; ILLUS; 4.5 X 7;",
          "FOLDER, COL. ILLUS. 4.5 X 7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; COL; 4.5 X 7;"
      },
      {
        "from": [
          "FOLDER; COL; ILLUS; 4.5 X 6;",
          "FOLDER; ILLUS; COL; 4.5 X 6;",
          "FOLDER; ILLUS; COL; 6 X 45;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; COL; ILLUS; 4.5 X 6;"
      },
      {
        "from": [
          "CARD; ILLUS; COL; 5.5X8.25;",
          "CARD, ILLUS, COL, 5.5X8.25",
          "CARD; 5.5X8.25; ILLUS; COL;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; COL; 5.5X8.25;"
      },
      {
        "from": [
          "CARD; 5X7.5;",
          "CARD 5X7.5",
          "CARD; 5X7.5"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 5X7.5;"
      },
      {
        "from": [
          "CARD; ILLUS; COL; 4X6;",
          "CARD; ILLUS; 4X6; COL;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; COL; 4X6;"
      },
      {
        "from": [
          "CARD; ILLUS; COL; 6X7.75;",
          "CARD; ILLUS; COL; 6X7;75;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; COL; 6X7.75;"
      },
      {
        "from": [
          "CARD; ILL; 4.75X7",
          "CARD; ILL; 4.75X7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILL; 4.75X7"
      },
      {
        "from": [
          "FOLDER; 4X5;",
          "FOLDER; 4X5"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 4X5;"
      },
      {
        "from": [
          "CARD, ILLUS; COL; 5.5 X 7; COL;",
          "CARD; ILLUS; COL; 5.5 X 7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD, ILLUS; COL; 5.5 X 7; COL;"
      },
      {
        "from": [
          "CARD; COL; ILLUS; 5.5 X 10;",
          "CARD; ILLUS; COL; 5.5 X 10;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; COL; ILLUS; 5.5 X 10;"
      },
      {
        "from": [
          "FOLDER;4.5X7",
          "FOLDER;4.5X7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER;4.5X7"
      },
      {
        "from": [
          "CARD; ILLUS; COL; 5.25 X 8.25;",
          "CARD; ILLUS; COL; 5.25 X 8.25"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; COL; 5.25 X 8.25;"
      },
      {
        "from": [
          "FOLDER; 5 X 7.25; ILLUS; COL;",
          "FOLDER; ILLUS; COL; 5 X 7.25;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 5 X 7.25; ILLUS; COL;"
      },
      {
        "from": [
          "FOLDER; 6X9.5;",
          "FOLDER; 6X9.5"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 6X9.5;"
      },
      {
        "from": [
          "FOLDER;ILL;COL;4.5X7;",
          "FOLDER;ILL;COL;4.5X7"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER;ILL;COL;4.5X7;"
      },
      {
        "from": [
          "BOOKLET; ILLUS; COL; 5.5 X 8.5",
          "BOOKLET; ILLUS; COL; 5.5 X 8.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; ILLUS; COL; 5.5 X 8.5"
      },
      {
        "from": [
          "BOOKLET; ILLUS; COL; 3.5 X 5;",
          "BOOKLET; COL; ILLUS; 3.5 X 5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; ILLUS; COL; 3.5 X 5;"
      },
      {
        "from": [
          "10 X 7 IN. FOLD. ; ILL.",
          "10 X 7 IN., FOLD. ; ILL."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "10 X 7 IN. FOLD. ; ILL."
      },
      {
        "from": [
          "18X14CM FOLDED; 18X28CM OPEN",
          "18X14CM FOLDED' 18X28CM OPEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "18X14CM FOLDED; 18X28CM OPEN"
      },
      {
        "from": [
          "BOOKLET; ILLUS; 8X6",
          "BOOKLET; ILLUS; 8X6;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; ILLUS; 8X6"
      },
      {
        "from": [
          "BOOKLET; COL; ILLUS; 7 X 10;",
          "BOOKLET; ILLUS; COL; 7 X 10;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; COL; ILLUS; 7 X 10;"
      },
      {
        "from": [
          "CARD; ILLUS; COL; 4.5X6.75;",
          "CARD; 4.5X6.75; ILLUS; COL;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; COL; 4.5X6.75;"
      },
      {
        "from": [
          "CARD; ILLUS; COL; 5.5X8.5;",
          "CARD; ILLUS; COL; 5.5X8;5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; COL; 5.5X8.5;"
      },
      {
        "from": [
          "FOLDER; ILLUS; COL; 7.6X10",
          "FOLDER; ILLUS; COL; 7.6X10;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; COL; 7.6X10"
      },
      {
        "from": [
          "FOLDER; ILLUS; COL; 5.25 X 7;",
          "FOLDER; ILLUS; COL; 5.25 X 7"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; COL; 5.25 X 7;"
      },
      {
        "from": [
          "CARD; 3.5 X 5.5;",
          "CARD; 3.5 X 5.5"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 3.5 X 5.5;"
      },
      {
        "from": [
          "CARD; 4X6;",
          "CARD; 4X6"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 4X6;"
      },
      {
        "from": [
          "8 1/2 X 5 1/2 IN. FOLD.",
          "8 X 5 1/2 IN. FOLD."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "8 1/2 X 5 1/2 IN. FOLD."
      },
      {
        "from": [
          "ILLUS.;FOLDER",
          "ILLUS.FOLDER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ILLUS.;FOLDER"
      },
      {
        "from": [
          "FOLDER; ILL; 6X9;",
          "FOLDER; ILL; 6X9"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILL; 6X9;"
      },
      {
        "from": [
          "BROADSIDE; ILLUS; COL; 3.5X7;",
          "BROADSIDE; ILLUS; COL; 3,5X7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSIDE; ILLUS; COL; 3.5X7;"
      },
      {
        "from": [
          "FOLDER; COL; ILLUS; 6 X 9;",
          "FOLDER; ILLUS; COL; 6 X 9;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; COL; ILLUS; 6 X 9;"
      },
      {
        "from": [
          "FOLDER, ILLUS, COL, 3X4.5",
          "FOLDER; ILLUS; COL; 3X4.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER, ILLUS, COL, 3X4.5"
      },
      {
        "from": [
          "BROADSIDE; EMBLEM; 5.5 X 8.5;",
          "BROADSIDE EMBLEM; 5.5 X 8.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSIDE; EMBLEM; 5.5 X 8.5;"
      },
      {
        "from": [
          "11 1/2 X 9 IN. FOLD. ; ILL.",
          "11 1/2 X 9 1/2 IN. FOLD. ; ILL."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "11 1/2 X 9 IN. FOLD. ; ILL."
      },
      {
        "from": [
          "FOLDER; ILLUS; 5X8;",
          "FOLDER; 5X8; ILLUS;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; 5X8;"
      },
      {
        "from": [
          "BROADSIDE; 6X9;",
          "BROADSIDE; 6X9"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSIDE; 6X9;"
      },
      {
        "from": [
          "CARD; ILLUS; COL; 4X6.25;",
          "CARD; ILLUS; COL; 4.X6.25;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; COL; 4X6.25;"
      },
      {
        "from": [
          "BROADSIDE; ILLUS; 5.5 X 8;",
          "BROADSIDE; ILLUS; 5.5. X 8;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSIDE; ILLUS; 5.5 X 8;"
      },
      {
        "from": [
          "BOOKLET; COL; ILLUS; 5.75 X 8.5;",
          "BOOKLET; ILLUS; COL; 5.75 X 8.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; COL; ILLUS; 5.75 X 8.5;"
      },
      {
        "from": [
          "FOLDER; ILLUS; 5.5 X 8.5;",
          "FOLDER; ILLUS; 5.5 X 8.5"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; 5.5 X 8.5;"
      },
      {
        "from": [
          "CARD; 4.5X6.5;",
          "CARD; 4.5X6.5"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 4.5X6.5;"
      },
      {
        "from": [
          "BOOKLET; COL; ILLUS; 8 X 11;",
          "BOOKLET; ILLUS; COL; 8 X 11;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; COL; ILLUS; 8 X 11;"
      },
      {
        "from": [
          "CARD; ILLUS; 5.5 X 9;",
          "CARD, ILLUS; 5.5 X 9;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; 5.5 X 9;"
      },
      {
        "from": [
          "BROADSIDE; 5 X 7.5;",
          "BROADSIDE, 5 X 7.5"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSIDE; 5 X 7.5;"
      },
      {
        "from": [
          "CARD; 6 X 9.25",
          "CARD; 6 X 9.25;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 6 X 9.25"
      },
      {
        "from": [
          "FOLDER; 4.5X6.5",
          "FOLDER; 4.5X6.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 4.5X6.5"
      },
      {
        "from": [
          "FOLDER; ILLUS; COL; 3.75X5.5;",
          "FOLDER; ILLUS; COL; 3.75.X5.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; COL; 3.75X5.5;"
      },
      {
        "from": [
          "BOOKLET;ILLUS;5X7'",
          "BOOKLET;ILLUS;5X7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET;ILLUS;5X7'"
      },
      {
        "from": [
          "BOOKLET; ILLUS; COL; 4.75X6;",
          "BOOKLET, ILLUS, COL, 4.75X6"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; ILLUS; COL; 4.75X6;"
      },
      {
        "from": [
          "FOLDER",
          "FOLDER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER"
      },
      {
        "from": [
          "CARD; ILLUS; 4.25 X 6.5;",
          "CARD' ILLUS; 4.25 X 6.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; 4.25 X 6.5;"
      },
      {
        "from": [
          "CARD;ILL;4.5X7;",
          "CARD;ILL;4.5X7"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD;ILL;4.5X7;"
      },
      {
        "from": [
          "FOLDER; ILLUS; COL;",
          "FOLDER; COL; ILLUS;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; COL;"
      },
      {
        "from": [
          "CARD;ILL;COL;4X7",
          "CARD;ILL;COL;4X7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD;ILL;COL;4X7"
      },
      {
        "from": [
          "BOOKLET; ILL; 5.25X7",
          "BOOKLET; ILL; 5.25X7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; ILL; 5.25X7"
      },
      {
        "from": [
          "BOOKLET; 8 X 11.75 INCHES",
          "BOOKLET 8 X 11.75 INCHES"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; 8 X 11.75 INCHES"
      },
      {
        "from": [
          "BOOKLET; ILLUS; COL; 6.5 X 9.25",
          "BOOKLET; ILLUS; COL; 6.5 X 9.25;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; ILLUS; COL; 6.5 X 9.25"
      },
      {
        "from": [
          "FOLDER; 9.75 X 12 INCHES",
          "FOLDER; 12 X 9.75 INCHES"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 9.75 X 12 INCHES"
      },
      {
        "from": [
          "CARD; 4X6.25;",
          "CARD, 4X6.25"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 4X6.25;"
      },
      {
        "from": [
          "FOLDER; COL; 4.25X6.25;",
          "FOLDER; COL; 4.25X6.25"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; COL; 4.25X6.25;"
      },
      {
        "from": [
          "CARD; 3.75 X 6;",
          "CARD; 3.75 X 6"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 3.75 X 6;"
      },
      {
        "from": [
          "ILLUS.;BROADSIDE",
          "ILLUS.BROADSIDE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ILLUS.;BROADSIDE"
      },
      {
        "from": [
          "FOLDER; ILLUS.COVER; COL; 4 X 6.5;",
          "FOLDER ILLUS.COVER; COL; 4 X 6.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS.COVER; COL; 4 X 6.5;"
      },
      {
        "from": [
          "CARD; 4.5X7.25;",
          "CARD; 4,5X7.25;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 4.5X7.25;"
      },
      {
        "from": [
          "BROADSIDE; EMBLEM COL; 5.5 X 8.5;",
          "BROADSIDE; EMBLEM; COL; 5.5 X 8.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSIDE; EMBLEM COL; 5.5 X 8.5;"
      },
      {
        "from": [
          "FOLDER; 6 X 8.25 INCHES",
          "FOLDER; 8.25 X 6 INCHES"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 6 X 8.25 INCHES"
      },
      {
        "from": [
          "CARD; 5.25X7",
          "CARD; 5.25X7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 5.25X7"
      },
      {
        "from": [
          "7 1/2 X 5 IN.",
          "5 1/2 X 7 IN."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "7 1/2 X 5 IN."
      },
      {
        "from": [
          "BROADSIDE; EMBLEM; 5.5 X 7;",
          "BROADSIDE; EMBLEM 5.5 X 7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSIDE; EMBLEM; 5.5 X 7;"
      },
      {
        "from": [
          "CARD; 3.5X5.5;",
          "CARD; 3.5X5.5"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 3.5X5.5;"
      },
      {
        "from": [
          "CARD; ILLUS; COLOR 4X7;;",
          "CARD; ILLUS; COLOR; 4X7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; COLOR 4X7;;"
      },
      {
        "from": [
          "CARD; ILLUS; 5 X 8;",
          "CARD; 5 X 8; ILLUS;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; 5 X 8;"
      },
      {
        "from": [
          "CARD; ILLUS; COL; 5 X 7;",
          "CARD; COL; ILLUS; 5 X 7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; COL; 5 X 7;"
      },
      {
        "from": [
          "FOLDER; 4.5 X 7.5;",
          "FOLDER; 4.5 X 7.5"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 4.5 X 7.5;"
      },
      {
        "from": [
          "CARD; ILLUS; COL; 5.5 X 7.75",
          "CARD; ILLUS; COL; 5.5 X 7.75;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; COL; 5.5 X 7.75"
      },
      {
        "from": [
          "FOLDER; COL; ILLUS; 7 X 11;",
          "FOLDER; ILLUS; COL; 7 X 11;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; COL; ILLUS; 7 X 11;"
      },
      {
        "from": [
          "CARD; ILLUS; COL; 6 X 8;",
          "CARD; COL; ILLUS; 6 X 8;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; COL; 6 X 8;"
      },
      {
        "from": [
          "FOLDER; ILLUS; 6 X 9;",
          "FOLDER; ILLUS; 6 X 9"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; 6 X 9;"
      },
      {
        "from": [
          "FOLDER;4.25X6.25",
          "FOLDER;4.25X6.25;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER;4.25X6.25"
      },
      {
        "from": [
          "BOOKLET; COL; ILLUS; 9 X 12",
          "BOOKLET; ILLUS; COL; 9 X 12"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; COL; ILLUS; 9 X 12"
      },
      {
        "from": [
          "ILLUS. BROADSIDE",
          "BROADSIDE; ILLUS."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ILLUS. BROADSIDE"
      },
      {
        "from": [
          "BOOKLET; COL; 5.5 X 8;",
          "BOOKLET; COL; 8 X 5.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; COL; 5.5 X 8;"
      },
      {
        "from": [
          "CARD, 6.75X10.5",
          "CARD; 6.75X10.5"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD, 6.75X10.5"
      },
      {
        "from": [
          "FOLDER; ILLUS; COL 5.5 X 7.25;",
          "FOLDER; ILLUS; COL; 5.5 X 7.25;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; COL 5.5 X 7.25;"
      },
      {
        "from": [
          "BOOKLET; ILLUS; 5.5 X 7;",
          "BOOKLET; 5.5 X 7; ILLUS;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; ILLUS; 5.5 X 7;"
      },
      {
        "from": [
          "FOLDER; ILL; COL; 5X7.5",
          "FOLDER; ILL; COL; 5X7.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILL; COL; 5X7.5"
      },
      {
        "from": [
          "FOLDER; ILLUS; 4.5 X 6;",
          "FOLDER; ILLUS; 6 X 4.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; 4.5 X 6;"
      },
      {
        "from": [
          "BOOKLET; COL; ILLUS; 6.5 X 9;",
          "BOOKLET; ILLUS; COL; 6.5 X 9;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; COL; ILLUS; 6.5 X 9;"
      },
      {
        "from": [
          "7 1/2 X 4 1/2 IN. FOLD.",
          "7 X 4 1/2 IN. FOLD."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "7 1/2 X 4 1/2 IN. FOLD."
      },
      {
        "from": [
          "FOLDER; COL; ILLUS; 4.5 X 7.5;",
          "FOLDER; ILLUS; COL; 4.5 X 7.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; COL; ILLUS; 4.5 X 7.5;"
      },
      {
        "from": [
          "BOOKLET; COL; ILLUS; 6.5 X 9.5;",
          "BOOKLET; ILLUS; COL; 6.5 X 9.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; COL; ILLUS; 6.5 X 9.5;"
      },
      {
        "from": [
          "CARD; 4.5 X 6.25;",
          "CARD; 4.5 X 6.25"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 4.5 X 6.25;"
      },
      {
        "from": [
          "BROADSIDE; ILLUS BORDER; 5.5 X 7.75;",
          "BROADSIDE; ILLUS. BORDER; 5.5 X 7.75;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSIDE; ILLUS BORDER; 5.5 X 7.75;"
      },
      {
        "from": [
          "FOLDER; ILLUS COVER; 3 X 7.75;",
          "FOLDER ILLUS COVER; 3 X 7.75;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS COVER; 3 X 7.75;"
      },
      {
        "from": [
          "CARD;ILL;COL;4.5X7;",
          "CARD;ILL;COL;4,5X7"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD;ILL;COL;4.5X7;"
      },
      {
        "from": [
          "FOLDER; 3.5X5",
          "FOLDER; 3.5X5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 3.5X5"
      },
      {
        "from": [
          "CARD; ILLUS; COL; 5.25X8;",
          "CARD; ILLUS; COL; 5,25X8;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; COL; 5.25X8;"
      },
      {
        "from": [
          "FOLDER; 5.75X8.75",
          "FOLDER; 5.75X8.75;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 5.75X8.75"
      },
      {
        "from": [
          "CARD; 4X8.5",
          "CARD; 4X8.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 4X8.5"
      },
      {
        "from": [
          "CARD; 4.25X6.75;",
          "CARD; 4.25X6.75"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 4.25X6.75;"
      },
      {
        "from": [
          "FOLDER;ILLUS;COL;4.5X7.5",
          "FOLDER;ILLUS;COL;4,5X7.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER;ILLUS;COL;4.5X7.5"
      },
      {
        "from": [
          "CARD; ILL; 5.5X8.75",
          "CARD; ILL; 5.5X8.75;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILL; 5.5X8.75"
      },
      {
        "from": [
          "CARD; 4.5X7.0;",
          "CARD; 4,5X7.0;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 4.5X7.0;"
      },
      {
        "from": [
          "CARD; 4.25 X 6.25;",
          "CARD; 4.25 X 6.25"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 4.25 X 6.25;"
      },
      {
        "from": [
          "FOLDER; ILLUS; COL; 5.25 X 8;",
          "FOLDER; COL; ILLUS; 5.25 X 8"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; COL; 5.25 X 8;"
      },
      {
        "from": [
          "CARD; ILLUS; 4.25X6.25;",
          "CARD; ILLUS; 4.25X6.25"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; 4.25X6.25;"
      },
      {
        "from": [
          "FOLDER; ILL; 5.25X8",
          "FOLDER; ILL; 5.25X8;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILL; 5.25X8"
      },
      {
        "from": [
          "BROADSIDE; COL; 4.5 X 7.5",
          "BROADSIDE; COL; 4.5 X 7.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSIDE; COL; 4.5 X 7.5"
      },
      {
        "from": [
          "FOLDER; 9 X 12.25 INCHES",
          "FOLDER; 12.25 X 9 INCHES"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 9 X 12.25 INCHES"
      },
      {
        "from": [
          "FOLDER; 4.25X6.25",
          "FOLDER; 4.25X6.25;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 4.25X6.25"
      },
      {
        "from": [
          "FOLDER; 5.5X8.5;",
          "FOLDER; 5.5X8.5"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 5.5X8.5;"
      },
      {
        "from": [
          "CARD;4.5X6",
          "CARD;4.5X6;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD;4.5X6"
      },
      {
        "from": [
          "CARD; 6.5X8.75; ILLUS; COL;",
          "CARD; ILLUS; COL; 6.5X8.75;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 6.5X8.75; ILLUS; COL;"
      },
      {
        "from": [
          "BOOKLET; COL; ILLUS; 6.25 X 9;",
          "BOOKLET; ILLUS; COL; 6.25 X 9;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; COL; ILLUS; 6.25 X 9;"
      },
      {
        "from": [
          "CARD; 4.25X6.5;",
          "CARD; 4.25X6.5"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 4.25X6.5;"
      },
      {
        "from": [
          "FOLDER; 12 X 9.25 INCHES",
          "FOLDER; 9.25 X 12 INCHES"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 12 X 9.25 INCHES"
      },
      {
        "from": [
          "BROADSHEET; ILLUS; 5 X 8;",
          "BROADSHEET; ILLUS; 5 X 8"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSHEET; ILLUS; 5 X 8;"
      },
      {
        "from": [
          "FOLDER; 5.5 X 7;",
          "FOLDER; 5,5 X 7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 5.5 X 7;"
      },
      {
        "from": [
          "FOLDER; ILLUS; COL; 4.5X6.5;",
          "FOLDER; ILLUS; COL; 4.5X.6.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; COL; 4.5X6.5;"
      },
      {
        "from": [
          "BOOKLET; ILLUS; COL; 6 X 7.5",
          "BOOKLET; ILLUS; COL; 6 X 7.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; ILLUS; COL; 6 X 7.5"
      },
      {
        "from": [
          "BROADSIDE; 5.75X8.75;",
          "BROADSIDE; 5.75X8.75"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSIDE; 5.75X8.75;"
      },
      {
        "from": [
          "24X17.5CM FOLDED; 24X35CM OPEN",
          "24X17.5CM FOLDED: 24X35CM OPEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "24X17.5CM FOLDED; 24X35CM OPEN"
      },
      {
        "from": [
          "CARD; 4.5 X 7;",
          "CARD 4.5 X 7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 4.5 X 7;"
      },
      {
        "from": [
          "CARD;ILL;COL;5X8;",
          "CARD;ILL;COL;5X8"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD;ILL;COL;5X8;"
      },
      {
        "from": [
          "BROADSIDE",
          "BROADSIDE;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSIDE"
      },
      {
        "from": [
          "BOOKLET; 6 X 7;",
          "BOOKLET; 7 X 6;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; 6 X 7;"
      },
      {
        "from": [
          "FOLDER; ILLUS; 4 X 6;",
          "FOLDER; ILLUS; 6 X 4;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; 4 X 6;"
      },
      {
        "from": [
          "FOLDER; 9.5 X 13.5 INCHES",
          "FOLDER 9.5 X 13.5 INCHES"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 9.5 X 13.5 INCHES"
      },
      {
        "from": [
          "CARD; ILLUS; COL; 4.75X7.25;",
          "CARD; ILLUS; COL; 4/75X7.25;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; COL; 4.75X7.25;"
      },
      {
        "from": [
          "CARD; ILLUS; COL; 6 X 10",
          "CARD; ILLUS; COL; 6 X 10;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; COL; 6 X 10"
      },
      {
        "from": [
          "FOLDER; ILLUS; COL; 4X6.5;",
          "FOLDER; ILLUS; COL; 4X6.5"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; COL; 4X6.5;"
      },
      {
        "from": [
          "CARD; COL; 5 X 8;",
          "CARD, COL; 5 X 8;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; COL; 5 X 8;"
      },
      {
        "from": [
          "9 X 6 IN. FOLD. ; ILL.",
          "9 X 6 IN., FOLD. ; ILL."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "9 X 6 IN. FOLD. ; ILL."
      },
      {
        "from": [
          "BOOKLET; COL; 5.75 X 7.5; ILLUS;",
          "BOOKLET; ILLUS; COL; 5.75 X 7.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; COL; 5.75 X 7.5; ILLUS;"
      },
      {
        "from": [
          "CARD; ILLUS; 5.25X7.5;",
          "CARD; ILLUS 5.25X7.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; 5.25X7.5;"
      },
      {
        "from": [
          "BROADSHEET; ILLUS; COL; 5X8;",
          "BROADSHEET; ILLUS; COL; 5X8"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSHEET; ILLUS; COL; 5X8;"
      },
      {
        "from": [
          "BOOKLET; ILLUS; COL; 6 X 9;",
          "BOOKLET; COL; ILLUS; 6 X 9;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; ILLUS; COL; 6 X 9;"
      },
      {
        "from": [
          "FOLDER; ILLUS; COL; 4 X 7;",
          "FOLDER; ILLUS; COL; 4 X 7;."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; COL; 4 X 7;"
      },
      {
        "from": [
          "CARD; ILLUS; COL; 4.5 X 7;",
          "CARD; COL; ILLUS; 4.5 X 7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; COL; 4.5 X 7;"
      },
      {
        "from": [
          "FOLDER; 13.25 X 9 INCHES",
          "FOLDER; 9 X 13.25 INCHES"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 13.25 X 9 INCHES"
      },
      {
        "from": [
          "BROADSIDE; HOTEL EMBLEM; COL; 4 X 7.5;",
          "BROADSIDE; HOTEL EMBLEM; COL; 4 X 7.5"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSIDE; HOTEL EMBLEM; COL; 4 X 7.5;"
      },
      {
        "from": [
          "BOOKLET; 4.5 X 7; COL;",
          "BOOKLET; COL; 4.5 X 7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; 4.5 X 7; COL;"
      },
      {
        "from": [
          "BROADSIDE; COL; 4.5 X 7;",
          "BROADSIDE; COL; 4.5 X 7 ;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSIDE; COL; 4.5 X 7;"
      },
      {
        "from": [
          "FOLDER;ILLUS;COL;6X9.5;",
          "FOLDER;ILLUS;COL;;6X9.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER;ILLUS;COL;6X9.5;"
      },
      {
        "from": [
          "CARD; ILLUS; 4.5X7.25;",
          "CARD; ILLUS; 4.5X7.25"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; 4.5X7.25;"
      },
      {
        "from": [
          "CARD; ILLUS; COL; 5.25 X 8;",
          "CARD; COL; ILLUS; 5.25 X 8;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; COL; 5.25 X 8;"
      },
      {
        "from": [
          "FOLDER; ILLUS; COL; 5 X 7;",
          "FOLDER; COL; ILLUS; 5 X 7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; COL; 5 X 7;"
      },
      {
        "from": [
          "FOLDER; COL; ILLUS; 6.5 X 12.5;",
          "FOLDER; ILLUS; COL; 6.5 X 12.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; COL; ILLUS; 6.5 X 12.5;"
      },
      {
        "from": [
          "FOLDER; ILLUS; COL; 4X6;",
          "FOLDER; ILLUS; COL. 4X6;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; COL; 4X6;"
      },
      {
        "from": [
          "FOLDER; 4.75X5.5",
          "FOLDER; 4.75X5.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 4.75X5.5"
      },
      {
        "from": [
          "FOLDER; ILLUS; COL; 5.5 X 7;",
          "FOLDER; COL; ILLUS; 5.5 X 7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; COL; 5.5 X 7;"
      },
      {
        "from": [
          "CARD; 5X7.25;",
          "CARD; 5X7.25"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 5X7.25;"
      },
      {
        "from": [
          "FOLDER; 8.5 X 11 INCHES",
          "FOLDER; 11 X 8.5 INCHES"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 8.5 X 11 INCHES"
      },
      {
        "from": [
          "CARD; 4.5X7;",
          "CARD; 4.5X7"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 4.5X7;"
      },
      {
        "from": [
          "BROADSIDE; 5.5 X 8;",
          "BROADSIDE; 5.5. X 8;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSIDE; 5.5 X 8;"
      },
      {
        "from": [
          "BOOKLET, ILLUS; COL; 5 X 6.25;",
          "BOOKLET; ILLUS; COL; 5 X 6.25;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET, ILLUS; COL; 5 X 6.25;"
      },
      {
        "from": [
          "BROADSHEET; ILLUS OF JAPANESE CHILDREN IN COLOR; 10 X 9.5;",
          "BROADSHEET; ILLUS. OF JAPANESE CHILDREN IN COLOR; 10 X 9.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSHEET; ILLUS OF JAPANESE CHILDREN IN COLOR; 10 X 9.5;"
      },
      {
        "from": [
          "FOLDER; ILLUS; 5.5 X 4.5;",
          "FOLDER; ILLUS; 4.5 X 5.5"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; 5.5 X 4.5;"
      },
      {
        "from": [
          "22X14.5CM FOLDED; 22X29CM OPEN",
          "22X29CM FOLDED; 22X14.5CM OPEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "22X14.5CM FOLDED; 22X29CM OPEN"
      },
      {
        "from": [
          "FOLDER; 4.74 X 7.25",
          "FOLDER; 4.74 X 7.25;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 4.74 X 7.25"
      },
      {
        "from": [
          "FOLDER; ILLUS; COL; 5 X 8;",
          "FOLDER; COL; ILLUS; 5 X 8;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; COL; 5 X 8;"
      },
      {
        "from": [
          "BROADSIDE; HOTEL EMBLEM; 5 X 9;",
          "BROADSIDE, HOTEL EMBLEM; 5 X 9;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSIDE; HOTEL EMBLEM; 5 X 9;"
      },
      {
        "from": [
          "FOLDER; 5.5X8",
          "FOLDER; 5.5X8;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 5.5X8"
      },
      {
        "from": [
          "10 1/2 X 6 1/2 IN. FOLD. ; ILL.",
          "10 X 6 1/2 IN. FOLD. ; ILL."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "10 1/2 X 6 1/2 IN. FOLD. ; ILL."
      },
      {
        "from": [
          "9 1/2 X 6 IN. FOLD. ; ILL. COL.",
          "9 X 6 1/2 IN. FOLD. ; ILL. COL."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "9 1/2 X 6 IN. FOLD. ; ILL. COL."
      },
      {
        "from": [
          "FOLDER; ILLUS; COL; 5.5X8;",
          "FOLDER, ILLUS, COL, 5.5X8"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; COL; 5.5X8;"
      },
      {
        "from": [
          "FOLDER; COL; ILLUS; 5.5 X 7.5;",
          "FOLDER; ILLUS; COL; 5.5 X 7.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; COL; ILLUS; 5.5 X 7.5;"
      },
      {
        "from": [
          "BOOKLET; ILLUS; COL; 6 X 8;",
          "BOOKLET; ILLUS; COL; 8 X 6;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; ILLUS; COL; 6 X 8;"
      },
      {
        "from": [
          "CARD; ILLUS; COL; 5.5X7.75;",
          "CARD, ILLUS, COL, 5.5X7.75"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; COL; 5.5X7.75;"
      },
      {
        "from": [
          "FOLDER; COL; ILLUS; 3.5 X 6.5;",
          "FOLDER; ILLUS; COL; 3.5 X 6.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; COL; ILLUS; 3.5 X 6.5;"
      },
      {
        "from": [
          "CARD; COL; 4 X 6;",
          "CARD; COL; 4 X 6"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; COL; 4 X 6;"
      },
      {
        "from": [
          "FOLDER, ILLUS; 5.25 X 7;",
          "FOLDER; ILLUS; 5.25 X 7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER, ILLUS; 5.25 X 7;"
      },
      {
        "from": [
          "CARD;",
          "CARD"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD;"
      },
      {
        "from": [
          "FOLDER;4.5X6.5",
          "FOLDER;4.5X6.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER;4.5X6.5"
      },
      {
        "from": [
          "BROADSIDE; ILLUS; COL; 5.5 X 8.5;",
          "BROADSIDE; COL; ILLUS; 5.5 X 8.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSIDE; ILLUS; COL; 5.5 X 8.5;"
      },
      {
        "from": [
          "CARD; 5.25X7.5;",
          "CARD; 5.25X7.5"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 5.25X7.5;"
      },
      {
        "from": [
          "FOLDER; 5X6.75;",
          "FOLDER; 5X6.75"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 5X6.75;"
      },
      {
        "from": [
          "BOOKLET; ILLUS; COL; 5.5 X 7.5;",
          "BOOKLET; COL; ILLUS; 5.5 X 7.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; ILLUS; COL; 5.5 X 7.5;"
      },
      {
        "from": [
          "FOLDER; ILLUS; 4 X 6.25;",
          "FOLDER; ILLUS; 4 X 6.25"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; 4 X 6.25;"
      },
      {
        "from": [
          "FOLDER; ILLUS; COL; 4.75 X 6;",
          "FOLDER; COL; ILLUS; 4.75 X 6;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; COL; 4.75 X 6;"
      },
      {
        "from": [
          "CARD; 5.25 X 7;",
          "CARD; 5,25 X 7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 5.25 X 7;"
      },
      {
        "from": [
          "FOLDER; 6.75X10.5",
          "FOLDER; 6.75X10.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 6.75X10.5"
      },
      {
        "from": [
          "BOOKLET; ILLUS; COL; 5.5 X 8;",
          "BOOKLET; COL; ILLUS; 5.5 X 8;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; ILLUS; COL; 5.5 X 8;"
      },
      {
        "from": [
          "BOOKLET ILLUS;4.5X7;",
          "BOOKLET; ILLUS;4.5X7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET ILLUS;4.5X7;"
      },
      {
        "from": [
          "BROADSIDE; ILLUS ; 4 X 7.5;",
          "BROADSIDE; ILLUS; 4 X 7.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADSIDE; ILLUS ; 4 X 7.5;"
      },
      {
        "from": [
          "CARD;ILL;COL;4.5X6.5;",
          "CARD;ILL;COL;4.5X6.5'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD;ILL;COL;4.5X6.5;"
      },
      {
        "from": [
          "FOLDER HOTEL EMBLEM; COL; 4.5 X 7.25;",
          "FOLDER; HOTEL EMBLEM; COL; 4.5 X 7.25;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER HOTEL EMBLEM; COL; 4.5 X 7.25;"
      },
      {
        "from": [
          "FOLDER; ILLUS; 7 X 9.5",
          "FOLDER; ILLUS; 7 X 9.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILLUS; 7 X 9.5"
      },
      {
        "from": [
          "CARD; ILLUS; COL; 4.5X7.5;",
          "CARD; COL; ILLUS; 4.5X7.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; ILLUS; COL; 4.5X7.5;"
      },
      {
        "from": [
          "FOLDER; ILL; 5.5X7",
          "FOLDER; ILL; 5.5X7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; ILL; 5.5X7"
      },
      {
        "from": [
          "BOOKLET; ILLUS; COL; 5 X 7;",
          "BOOKLET; COL; ILLUS; 5 X 7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; ILLUS; COL; 5 X 7;"
      },
      {
        "from": [
          "BOOKLET; COL; ILLUS; 6.25 X 7;",
          "BOOKLET; ILLUS; COL; 6.25 X 7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; COL; ILLUS; 6.25 X 7;"
      },
      {
        "from": [
          "CARD; 4.25 X 6.5;",
          "CARD; 4,25 X 6.5;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARD; 4.25 X 6.5;"
      },
      {
        "from": [
          "FOLDER; 4.5X7;",
          "FOLDER; 4.5X7"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOLDER; 4.5X7;"
      },
      {
        "from": [
          "BOOKLET; ILLUS; COL; 5.5 X 7;",
          "BOOKLET; COL; ILLUS; 5.5 X 7;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOOKLET; ILLUS; COL; 5.5 X 7;"
      }
    ],
    "description": "Mass edit cells in column physical_description"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column occasion using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column occasion using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column occasion using expression value.toUppercase()"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value",
    "edits": [
      {
        "from": [
          "COMPL.",
          "[COMPL?];",
          "COMPL?;",
          "[COMPL];",
          "COMPL (?);",
          "COMPL(?);",
          "COMPL;(?)",
          "[COMPL.]",
          "[COMPL]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COMPL."
      },
      {
        "from": [
          "OTHER (SOC);",
          "OTHER (SOC?);",
          "OTHER (SOC?)",
          "OTHER (SOC)",
          "OTHER [SOC?];",
          "OTHER (SOC.)",
          "OTHER )SOC);",
          "OTHER [SOC]",
          "OTHER, [SOC?];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (SOC);"
      },
      {
        "from": [
          "ANNIVERSARY;",
          "ANNIVERSARY (?);",
          "ANNIVERSARY(?);",
          "ANNIVERSARY",
          "ANNIVERSARY.",
          "ANNIVERSARY?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANNIVERSARY;"
      },
      {
        "from": [
          "SECULAR HOLIDAY;",
          "SECULAR HOLIDAY",
          "SECULAR HOLIDAY. HOLIDAY",
          "SECULAR HOLIDAY. HOLIDAY;",
          "SECULAR HOLIDAY HOLIDAY;",
          "SECULAR HOLIDAY HOLIDAY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SECULAR HOLIDAY;"
      },
      {
        "from": [
          "OTHER (ANNIVERSARY);",
          "OTHER (ANNIVERSARY)",
          "OTHER (ANNIVERSARY?)",
          "OTHER - ANNIVERSARY",
          "OTHER {ANNIVERSARY};"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (ANNIVERSARY);"
      },
      {
        "from": [
          "[ANNIV?];",
          "(ANNIV);",
          "(ANNIV?);",
          "[?ANNIV?];",
          "[ANNIV?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "[ANNIV?];"
      },
      {
        "from": [
          "SOC;",
          "[SOC?]",
          "(SOC?)",
          "[SOC]",
          "(SOC);"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOC;"
      },
      {
        "from": [
          "OTHER (MEETING);",
          "OTHER (MEETING)",
          "OTHER (MEETING?);",
          "OTHER (MEETING?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (MEETING);"
      },
      {
        "from": [
          "OTHER (SOCIAL?)",
          "OTHER (SOCIAL);",
          "OTHER (SOCIAL?);",
          "OTHER [SOCIAL];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (SOCIAL);"
      },
      {
        "from": [
          "OTHER (ANNUAL EVENT)",
          "OTHER (ANNUAL EVENT);",
          "OTHER {ANNUAL EVENT};",
          "OTHER, ANNUAL EVENT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (ANNUAL EVENT)"
      },
      {
        "from": [
          "PATRIOTIC HOLIDAY;",
          "PATRIOTIC HOLIDAY",
          "PATRIOTIC HOLIDAY.",
          "PATRIOTIC HOLIDAY. HOLIDAY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PATRIOTIC HOLIDAY;"
      },
      {
        "from": [
          "RITE;",
          "RITE",
          "(RITE)",
          "(RITE);"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RITE;"
      },
      {
        "from": [
          "OTHER (COMMEMORATIVE);",
          "OTHER (COMMEMORATIVE)",
          "OTHER (COMMEMORATIVE?)",
          "OTHER [COMMEMORATIVE]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (COMMEMORATIVE);"
      },
      {
        "from": [
          "DAILY;",
          "DAILY",
          "[DAILY]",
          "DAILY?;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY;"
      },
      {
        "from": [
          "?",
          ";",
          "[?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "?"
      },
      {
        "from": [
          "ANNUAL",
          "ANNUAL;",
          "[ANNUAL]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANNUAL"
      },
      {
        "from": [
          "SECULAR HOLIDAY.HOLIDAY",
          "SECULAR HOLIDAY.HOLIDAY;",
          "SECULAR HOLIDAY;HOLIDAY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SECULAR HOLIDAY.HOLIDAY"
      },
      {
        "from": [
          "DAILY MENU;",
          "DAILY MENU",
          "(DAILY MENU)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY MENU;"
      },
      {
        "from": [
          "OTHER (ANNIV)",
          "OTHER (ANNIV);",
          "OTHER (ANNIV?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (ANNIV)"
      },
      {
        "from": [
          "OTHER",
          "OTHER;",
          "OTHER,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER"
      },
      {
        "from": [
          "RELIG. HOLIDAY",
          "RELIG. HOLIDAY;",
          "RELIG HOLIDAY;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RELIG. HOLIDAY"
      },
      {
        "from": [
          "(SOCIAL)",
          "(SOCIAL?)",
          "SOCIAL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(SOCIAL)"
      },
      {
        "from": [
          "[?REUNION?];",
          "[RE-UNION]",
          "[REUNION]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "[REUNION]"
      },
      {
        "from": [
          "ANNUAL EVENT",
          "ANNUAL EVENT;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANNUAL EVENT"
      },
      {
        "from": [
          "ANIV;",
          "[ANIV?];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANIV;"
      },
      {
        "from": [
          "OTHER (REUNION);",
          "(OTHER - REUNION?);"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (REUNION);"
      },
      {
        "from": [
          "OTHER (DAILY DATED MENU);",
          "OTHER (DATED DAILY MENU);"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (DAILY DATED MENU);"
      },
      {
        "from": [
          "POL;",
          "[POL?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "POL;"
      },
      {
        "from": [
          "OTHER (DAILY MENU);",
          "OTHER (DAILY MENU)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (DAILY MENU);"
      },
      {
        "from": [
          "SATURDAY DINNER",
          "SATURDAY DINNER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SATURDAY DINNER"
      },
      {
        "from": [
          "NATIONAL EVENT",
          "NATIONAL EVENT;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NATIONAL EVENT"
      },
      {
        "from": [
          "PAT;",
          "PAT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PAT;"
      },
      {
        "from": [
          "OTHER (COMMEMOATIVE)",
          "OTHER (COMMEMOATIVE);"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (COMMEMOATIVE)"
      },
      {
        "from": [
          "DAILY MEAL",
          "DAILY MEAL;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY MEAL"
      },
      {
        "from": [
          "DINNER",
          "DINNER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER"
      },
      {
        "from": [
          "SUNDAY DINNER",
          "SUNDAY DINNER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SUNDAY DINNER"
      },
      {
        "from": [
          "ETHNIC HOLIDAY",
          "[ETHNIC HOLIDAY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ETHNIC HOLIDAY"
      },
      {
        "from": [
          "SUNDAY",
          "SUNDAY;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SUNDAY"
      },
      {
        "from": [
          "BREAKFAST",
          "BREAKFAST;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BREAKFAST"
      },
      {
        "from": [
          "OTHER (ANNUAL MEETING);",
          "OTHER {ANNUAL MEETING};"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (ANNUAL MEETING);"
      },
      {
        "from": [
          "BANQUET;",
          "BANQUET"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BANQUET;"
      },
      {
        "from": [
          "ETH;",
          "ETH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ETH;"
      },
      {
        "from": [
          "ANNIVERSARYERSARY",
          "ANNIVERSARYERSARY;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANNIVERSARYERSARY"
      },
      {
        "from": [
          "OTHER (DAILY);",
          "OTHER (DAILY)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (DAILY);"
      },
      {
        "from": [
          "DAILY DINNER",
          "DAILY DINNER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY DINNER"
      },
      {
        "from": [
          "SEMI-ANNUAL",
          "SEMI-ANNUAL;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SEMI-ANNUAL"
      },
      {
        "from": [
          "ANNUAL DINNER",
          "ANNUAL DINNER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANNUAL DINNER"
      }
    ],
    "description": "Mass edit cells in column occasion"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "notes",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column notes using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "notes",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column notes using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "notes",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column notes using expression value.toUppercase()"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "notes",
    "expression": "value",
    "edits": [
      {
        "from": [
          "2ND CABIN MENU HANDWRITTEN;",
          "2ND CABIN MENU; HANDWRITTEN;",
          "MENU HANDWRITTEN; 2ND CABIN MENU;",
          "MENU HANDWRITTEN; 2ND CABIN;",
          "MENU HANDWRITTEN; 2ND CABIN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "2ND CABIN MENU HANDWRITTEN;"
      },
      {
        "from": [
          "ENGLISH AND FRENCH ARE SECONDARY LANGUAGES",
          "FRENCH AND ENGLISH ARE SECONDARY LANGUAGES",
          "FRENCH AND ENGLISH ARE SECONDARY LANGUAGES."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ENGLISH AND FRENCH ARE SECONDARY LANGUAGES"
      },
      {
        "from": [
          "DIETER ZANDER COLLECTION.",
          "DIETER ZANDER COLLECTION",
          "DIETER ZANDER COLLECTION;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DIETER ZANDER COLLECTION."
      },
      {
        "from": [
          "MENU HANDWRITTEN;",
          "HANDWRITTEN MENU;",
          "MENU HANDWRITTEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU HANDWRITTEN;"
      },
      {
        "from": [
          "THE EXPLORERS CLUB",
          "THE EXPLORERS' CLUB",
          "THE EXPLORER'S CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE EXPLORERS CLUB"
      },
      {
        "from": [
          "MENU HANDWRITTEN IN FRENCH;",
          "MENU IN FRENCH; HANDWRITTEN;",
          "HANDWRITTEN MENU IN FRENCH;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU HANDWRITTEN IN FRENCH;"
      },
      {
        "from": [
          "HANDWRITTEN, LOGO;",
          "LOGO; HANDWRITTEN;",
          "HANDWRITTEN;, LOGO;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HANDWRITTEN, LOGO;"
      },
      {
        "from": [
          "MENU IN GERMAN AND ENGLISH",
          "MENU IN GERMAN AND IN ENGLISH",
          "MENU IN GERMAN AND ENGLISH;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU IN GERMAN AND ENGLISH"
      },
      {
        "from": [
          "TECHNICAL SOCIETY OF THE BROOKLYN UNION GAS COMPANY",
          "THE TECHNICAL SOCIETY OF THE BROOKLYN UNION GAS COMPANY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TECHNICAL SOCIETY OF THE BROOKLYN UNION GAS COMPANY"
      },
      {
        "from": [
          "MENU IN FRENCH;WINES SERVED;2 COPIES",
          "MENU IN FRENCH;WINES SERVED;2 COPIES;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU IN FRENCH;WINES SERVED;2 COPIES"
      },
      {
        "from": [
          "PROGRAM INCLUDED",
          "PROGRAM INCLUDED;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PROGRAM INCLUDED"
      },
      {
        "from": [
          "PRICES LISTED FOR EACH ITEM; COMPLETE WINE LIST & PRICES ON BACK;",
          "PRICES LISTED FOR EACH ITEM; COMPLETE WINE LIST ON BACK;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PRICES LISTED FOR EACH ITEM; COMPLETE WINE LIST & PRICES ON BACK;"
      },
      {
        "from": [
          "INCLUDES ALL WINES",
          "INCLUDES ALL WINES;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "INCLUDES ALL WINES"
      },
      {
        "from": [
          "LUNCH COUNTER - LUNCHEON",
          "LUNCH COUNTER LUNCHEON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCH COUNTER - LUNCHEON"
      },
      {
        "from": [
          "LOGO;",
          "LOGO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LOGO;"
      },
      {
        "from": [
          "HOTEL OR INN?",
          "HOTEL OR INN?;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL OR INN?"
      },
      {
        "from": [
          "LOGO; BLUE STOCK;",
          "BLUE; STOCK; LOGO;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LOGO; BLUE STOCK;"
      },
      {
        "from": [
          "COLLEGE OF PHARMACY, COLUMBIA UNIVERSITY",
          "COLLEGE OF PHARMACY - COLUMBIA UNIVERSITY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COLLEGE OF PHARMACY, COLUMBIA UNIVERSITY"
      },
      {
        "from": [
          "A LA CARTE PRICED MENU; HOTEL SEAL AT TOP OF MENU;",
          "PRICED A LA CARTE MENU; HOTEL SEAL AT TOP OF MENU;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A LA CARTE PRICED MENU; HOTEL SEAL AT TOP OF MENU;"
      },
      {
        "from": [
          "SPEAKERS & OFFICERS LISTED;",
          "OFFICERS & SPEAKERS LISTED;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SPEAKERS & OFFICERS LISTED;"
      },
      {
        "from": [
          "PRICED MENU; NOTE ABOUT PURITY OF WATER;",
          "PRICED MENU; NOTE ABOUT PURITY OF WATER;;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PRICED MENU; NOTE ABOUT PURITY OF WATER;"
      },
      {
        "from": [
          "PRICED MENU;",
          "PRICED MENU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PRICED MENU;"
      },
      {
        "from": [
          "GREEN STOCK; LOGO;",
          "LOGO; GREEN STOCK;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GREEN STOCK; LOGO;"
      },
      {
        "from": [
          "GRAY STOCK; LOGO;",
          "LOGO; GRAY STOCK;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAY STOCK; LOGO;"
      },
      {
        "from": [
          "ENGLISH IS THE SECONDARY LANGUAGE.",
          "ENGLISH IS THE SECONDARY LANGUAGE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ENGLISH IS THE SECONDARY LANGUAGE."
      },
      {
        "from": [
          "HANDWRITTEN;RED BORDER;",
          "HANDWRITTEN;RED BORDER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HANDWRITTEN;RED BORDER;"
      },
      {
        "from": [
          "TABLE D'HOTE MENU; HOTEL SEAL AT TOP OF MENU;",
          "TABLE D'HOTE MENU; HOTEL SEAL AT TOP OF MENU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TABLE D'HOTE MENU; HOTEL SEAL AT TOP OF MENU;"
      },
      {
        "from": [
          "ENGLISH IS SECONDARY LANGUAGE",
          "ENGLISH IS SECONDARY LANGUAGE."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ENGLISH IS SECONDARY LANGUAGE"
      },
      {
        "from": [
          "PRICED WINE LIST;",
          "PRICED WINE LIST"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PRICED WINE LIST;"
      },
      {
        "from": [
          "PRICES LISTED FOR EACH ITEM;",
          "PRICES FOR EACH ITEM LISTED;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PRICES LISTED FOR EACH ITEM;"
      },
      {
        "from": [
          "MENU HANDWRITTEN & PRICE INCLUDED;",
          "MENU HANDWRITTEN; PRICE INCLUDED;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU HANDWRITTEN & PRICE INCLUDED;"
      },
      {
        "from": [
          "TYPEWRITTEN AND MECHANICALLY REPRODUCED;",
          "TYPEWRITTEN AND MECHANICALLY REPRODUCED"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TYPEWRITTEN AND MECHANICALLY REPRODUCED;"
      },
      {
        "from": [
          "AMERICAN PLAN MENU; LOGO; NOTE ABOUT PURITY OF WATER;",
          "LOGO; AMERICAN PLAN MENU; NOTE ABOUT PURITY OF WATER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AMERICAN PLAN MENU; LOGO; NOTE ABOUT PURITY OF WATER;"
      },
      {
        "from": [
          "MENU IN FRENCH AND ENGLISH; A LA CARTE PRICED MENU;",
          "PRICED A LA CARTE MENU IN ENGLISH AND FRENCH;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU IN FRENCH AND ENGLISH; A LA CARTE PRICED MENU;"
      },
      {
        "from": [
          "WINE LIST WITH PRICES ON BACK",
          "WINE LIST WITH PRICES ON BACK;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WINE LIST WITH PRICES ON BACK"
      },
      {
        "from": [
          "TABLE D'HOTE DINNER",
          "TABLE D'HOTE DINNER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TABLE D'HOTE DINNER"
      },
      {
        "from": [
          "A LA CARTE PRICED MENU; HOTEL SEAL AT TOP;",
          "A LA CARTE, PRICED MENU; HOTEL SEAL AT TOP;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A LA CARTE PRICED MENU; HOTEL SEAL AT TOP;"
      },
      {
        "from": [
          "COMMITTEE MEMBERS & SPEAKERS LISTED;",
          "SPEAKERS & COMMITTEE MEMBERS LISTED;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COMMITTEE MEMBERS & SPEAKERS LISTED;"
      },
      {
        "from": [
          "WINE LIST",
          "WINE LIST;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WINE LIST"
      },
      {
        "from": [
          "DATE: MAY, 1900 HAND-WRITTEN [FEB?];",
          "HAND-WRITTEN DATE: \"MAY 1900\" [FEB?];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DATE: MAY, 1900 HAND-WRITTEN [FEB?];"
      },
      {
        "from": [
          "GENERAL SUPERINTENDENT, DINING CAR SERVICE : JOHN F. FINNEGAN. ADVERTISEMENT ON VERSO FOR THE LUXURY FLEET.",
          "GENERAL SUPERINTENDENT, DINING CAR SERVICE : JOHN F. FINNEGAN. ADVERTISEMENT FOR THE LUXURY FLEET ON VERSO."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GENERAL SUPERINTENDENT, DINING CAR SERVICE : JOHN F. FINNEGAN. ADVERTISEMENT ON VERSO FOR THE LUXURY FLEET."
      },
      {
        "from": [
          "STATION CAFÉ - DINNER",
          "STATION CAFÉ DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "STATION CAFÉ - DINNER"
      },
      {
        "from": [
          "MENU IN FRENCH AND ENGLISH;",
          "MENU IN FRENCH AND IN ENGLISH;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU IN FRENCH AND ENGLISH;"
      },
      {
        "from": [
          "MENU HANDWRITEN",
          "MENU HANDWRITEN;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU HANDWRITEN"
      },
      {
        "from": [
          "MENU IN FRENCH,WINES INCLUDED;",
          "MENU IN FRENCH;WINES INCLUDED;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU IN FRENCH,WINES INCLUDED;"
      },
      {
        "from": [
          "FLAG;HOURS;ONE BUGLE CALL",
          "FLAG;HOURS;ONE BUGLE CALL;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FLAG;HOURS;ONE BUGLE CALL"
      },
      {
        "from": [
          "OFFICERS & COMMITTEE MEMBERS LISTED;",
          "OFFICERS,& COMMITTEE MEMBERS LISTED;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OFFICERS & COMMITTEE MEMBERS LISTED;"
      },
      {
        "from": [
          "AMERICAN BANKERS ASSOCIATION",
          "AMERICAN BANKERS' ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AMERICAN BANKERS ASSOCIATION"
      },
      {
        "from": [
          "MENU HANDWRITTEN IN ENGLISH;",
          "MENU HANDWRITTEN IN ENGLISH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU HANDWRITTEN IN ENGLISH;"
      },
      {
        "from": [
          "INCLUDES WINES;",
          "INCLUDES WINES"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "INCLUDES WINES;"
      },
      {
        "from": [
          "WINES;",
          "WINES"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WINES;"
      },
      {
        "from": [
          "ROOM SERVICE BREAKFAST",
          "BREAKFAST ROOM SERVICE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROOM SERVICE BREAKFAST"
      },
      {
        "from": [
          "SEPARATE LISTING IN ENGLISH AND GERMAN;MUSICAL PROGRAM",
          "SEPARATE LISTING IN ENGLISH AND GERMAN;MUSICAL PROGRAM;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SEPARATE LISTING IN ENGLISH AND GERMAN;MUSICAL PROGRAM"
      },
      {
        "from": [
          "DATE HANDWRITTEN BY FB;",
          "DATE HANDWRITTEN BY FB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DATE HANDWRITTEN BY FB;"
      },
      {
        "from": [
          "EMBOSSED PORTRAIT OF WOMAN AT TOP OF MENU;",
          "PORTRAIT OF WOMAN EMBOSSED AT TOP OF MENU;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EMBOSSED PORTRAIT OF WOMAN AT TOP OF MENU;"
      },
      {
        "from": [
          "DIETER ZANDER COLLECTION; EMBOSSED COVER",
          "DIETER ZANDER COLLECTION; EMBOSSED COVER."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DIETER ZANDER COLLECTION; EMBOSSED COVER"
      },
      {
        "from": [
          "MENU IN FRENCH; EVNT NOTED BY FEB IN FRENCH;",
          "MENU IN FRENCH; EVNT NOTED BY FEB;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU IN FRENCH; EVNT NOTED BY FEB IN FRENCH;"
      },
      {
        "from": [
          "DATE HANDWRITTEN;",
          "DATE HAND-WRITTEN;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DATE HANDWRITTEN;"
      },
      {
        "from": [
          "ILLUS OF HOTEL; WINE LIST",
          "WINE LIST; ILLUS OF HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ILLUS OF HOTEL; WINE LIST"
      },
      {
        "from": [
          "ENGLISH, FRENCH AND ITALIAN ARE SECONDARY LANGUAGES",
          "FRENCH, ENGLISH, AND ITALIAN ARE SECONDARY LANGUAGES"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ENGLISH, FRENCH AND ITALIAN ARE SECONDARY LANGUAGES"
      },
      {
        "from": [
          "FRENCH IS SECONDARY LANGUAGE",
          "FRENCH IS SECONDARY LANGUAGE."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRENCH IS SECONDARY LANGUAGE"
      },
      {
        "from": [
          "ALL SPEAKERS LISTED & COMMITTEE MEMBERS INCLUDED;",
          "ALL SPEAKERS LISTED; ALL COMMITTEE MEMBERS INCLUDED;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ALL SPEAKERS LISTED & COMMITTEE MEMBERS INCLUDED;"
      },
      {
        "from": [
          "TOASTS LISTED;",
          "TOASTS LISTED"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TOASTS LISTED;"
      },
      {
        "from": [
          "THE BANKERS' CLUB OF CHICAGO",
          "THE BANKERS CLUB OF CHICAGO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE BANKERS' CLUB OF CHICAGO"
      },
      {
        "from": [
          "CAMP-FIRE CLUB OF AMERICA",
          "CAMPFIRE CLUB OF AMERICA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAMP-FIRE CLUB OF AMERICA"
      },
      {
        "from": [
          "SOCIETY OF THE GENESEE",
          "THE SOCIETY OF THE GENESEE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOCIETY OF THE GENESEE"
      },
      {
        "from": [
          "FIFTH INTERNATIONAL CONGRESS OF CHAMBERS OF COMMERCE AND COMMERCIAL AND INDUSTRIAL ASSOCIATIONS",
          "FIFTH INTERNATIONAL CONGRESS OF CHAMBERS OF COMMERCE AND INDUSTRIAL AND COMMERCIAL ASSOCIATIONS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FIFTH INTERNATIONAL CONGRESS OF CHAMBERS OF COMMERCE AND COMMERCIAL AND INDUSTRIAL ASSOCIATIONS"
      },
      {
        "from": [
          "HANDWRITTEN;",
          "HAND-WRITTEN;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HANDWRITTEN;"
      },
      {
        "from": [
          "MENU IN FRENCH; SPONSOR AND EVENT NOTED BY FEB;",
          "MENU IN FRENCH; SPONSOR AND EVENT NOTED BY FEB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU IN FRENCH; SPONSOR AND EVENT NOTED BY FEB;"
      },
      {
        "from": [
          "PRICED MENU AND WINE LIST;",
          "PRICED WINE LIST AND MENU;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PRICED MENU AND WINE LIST;"
      },
      {
        "from": [
          "HANDWRITTEN; RED ORNAMENTAL BORDER;",
          "HANDWRITTEN; RED; ORNAMENTAL BORDER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HANDWRITTEN; RED ORNAMENTAL BORDER;"
      },
      {
        "from": [
          "PRICED A LA CARTE MENU;",
          "A LA CARTE PRICED MENU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PRICED A LA CARTE MENU;"
      },
      {
        "from": [
          "ENGLISH, FRENCH AND GERMAN ARE SECONDARY LANGUAGES",
          "SECONDARY LANGUAGES ARE FRENCH, ENGLISH, AND GERMAN."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ENGLISH, FRENCH AND GERMAN ARE SECONDARY LANGUAGES"
      },
      {
        "from": [
          "HANDWRITTEN ON PRINTED FORM;MECHANICALLY REPRODUCED;2 COPIES",
          "HANDWRITTEN ON PRINTED FORM;MECHANICALLY REPRODUCED;2 COPIES;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HANDWRITTEN ON PRINTED FORM;MECHANICALLY REPRODUCED;2 COPIES"
      },
      {
        "from": [
          "SUNDAY DINNER",
          "SUNDAY DINNER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SUNDAY DINNER"
      },
      {
        "from": [
          "ROOM SERVICE (DINNER)",
          "ROOM SERVICE DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROOM SERVICE (DINNER)"
      },
      {
        "from": [
          "MENU IN BOTH GERMAN & ENGLISH; MUSIC PROGRAM INCLUDED;",
          "MENU IN BOTH GERMAN & ENGLISH; MUSIC PROGRAM INCLUDED'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU IN BOTH GERMAN & ENGLISH; MUSIC PROGRAM INCLUDED;"
      },
      {
        "from": [
          "FRENCH MENU;WINES",
          "FRENCH MENU;WINES;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRENCH MENU;WINES"
      },
      {
        "from": [
          "WINES LISTED; MENU IN FRENCH;",
          "MENU IN FRENCH; WINES LISTED;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WINES LISTED; MENU IN FRENCH;"
      },
      {
        "from": [
          "PRICED MENU; CREST;",
          "PRICED MENU;; CREST;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PRICED MENU; CREST;"
      },
      {
        "from": [
          "TESTIMONIAL DINNER TO JAMES A FARLEY",
          "TESTIMONIAL DINNER TO JAMES A. FARLEY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TESTIMONIAL DINNER TO JAMES A FARLEY"
      },
      {
        "from": [
          "DINNER ROOM SERVICE MENU",
          "ROOM SERVICE DINNER MENU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER ROOM SERVICE MENU"
      },
      {
        "from": [
          "PRICED MENU; MENU HANDWRITTEN;",
          "PRICED MENU; HANDWRITTEN;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PRICED MENU; MENU HANDWRITTEN;"
      },
      {
        "from": [
          "DECORATIVE BORDER;",
          "DECORATIVE BORDER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DECORATIVE BORDER;"
      },
      {
        "from": [
          "GERMAN & ENGLISH; ILLUSTRATION OF WOMAN IN CLASSICAL DRESS HOLDING SHIELD WITH INITIALS H.P.A.A.G., AND STEAMER;",
          "GERMAN & ENGLISH; ILLUSTRATION OF WOMAN IN CLASSICAL DRESS HOLDING SHIELD WITH INITIALS H.P.A.A.G.; AND STEAMER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GERMAN & ENGLISH; ILLUSTRATION OF WOMAN IN CLASSICAL DRESS HOLDING SHIELD WITH INITIALS H.P.A.A.G., AND STEAMER;"
      },
      {
        "from": [
          "HANDWRITTEN; ILLUSTRATION OF SAMURAI(?); MAP ON BACK OF ROUTES COVERED BY LINE;",
          "HANDWRITTEN; ILLUSTRATION OF SAMURAI; MAP ON BACK OF ROUTES COVERED BY LINE;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HANDWRITTEN; ILLUSTRATION OF SAMURAI(?); MAP ON BACK OF ROUTES COVERED BY LINE;"
      },
      {
        "from": [
          "MENU IN GERMAN AND ENGLISH; ILLUSTRATION OF BOY, FLAGS, LOGO",
          "MENU IN GERMAN AND ENGLISH; ILLUSTRATION OF BOY, FLAGS; LOGO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU IN GERMAN AND ENGLISH; ILLUSTRATION OF BOY, FLAGS, LOGO"
      },
      {
        "from": [
          "COAT OF ARMS;",
          "COAT OF ARMS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COAT OF ARMS;"
      },
      {
        "from": [
          "INCLUDES PRICED WINE LIST;",
          "INCLUDES PRICED WINE LIST"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "INCLUDES PRICED WINE LIST;"
      },
      {
        "from": [
          "ALL ITEMS PRICED;",
          "ALL ITEMS PRICED ;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ALL ITEMS PRICED;"
      },
      {
        "from": [
          "FRENCH;",
          "FRENCH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRENCH;"
      },
      {
        "from": [
          "\"THE VIRGINIANS\"",
          "THE VIRGINIANS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "\"THE VIRGINIANS\""
      },
      {
        "from": [
          "MENU HANDWRITTEN; MAP ON BACK SHOWING THE ROUTE;",
          "MENU HANDWRITTEN; MAP ON THE BACK SHOWING THE ROUTE;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU HANDWRITTEN; MAP ON BACK SHOWING THE ROUTE;"
      },
      {
        "from": [
          "INCLUDES A LA CARTE AND TABLE D'HOTE MENU OPTIONS. INSERT : \"A LA CARTE SPECIALS.\"",
          "INCLUDES A LA CARTE AND TABLE D'HOTE MENU OPTIONS. INSERT : SPECIALS."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "INCLUDES A LA CARTE AND TABLE D'HOTE MENU OPTIONS. INSERT : \"A LA CARTE SPECIALS.\""
      },
      {
        "from": [
          "INCLUDES WINES SERVED WITH EACH COURSE; SILK RIBBON ATTACHMENT",
          "INCLUDES WINES SERVED WITH EACH COURSE; SILK RIBBON ATTACHMENT;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "INCLUDES WINES SERVED WITH EACH COURSE; SILK RIBBON ATTACHMENT"
      },
      {
        "from": [
          "HANDWRITTEN;FLAG;",
          "HAND-WRITTEN;FLAG;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HANDWRITTEN;FLAG;"
      },
      {
        "from": [
          "PRICED A LA CARTE MENU; PRICED WINE LIST;",
          "A LA CARTE MENU; PRICED WINE LIST;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PRICED A LA CARTE MENU; PRICED WINE LIST;"
      },
      {
        "from": [
          "LUNCH COUNTER - DINNER",
          "LUNCH COUNTER DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCH COUNTER - DINNER"
      },
      {
        "from": [
          "A LA CARTE MENU; INCLUDES PRICED WINE & LIQUOR LIST;",
          "A LA CARTE PRICED MENU; INCLUDES PRICED WINE & LIQUOR LIST;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A LA CARTE MENU; INCLUDES PRICED WINE & LIQUOR LIST;"
      },
      {
        "from": [
          "DECORATIVE WREATH",
          "DECORATIVE WREATH;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DECORATIVE WREATH"
      },
      {
        "from": [
          "SECONDARY LANGUAGES ARE SWEDISH AND ENGLISH.",
          "SWEDISH AND ENGLISH ARE SECONDARY LANGUAGES"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SECONDARY LANGUAGES ARE SWEDISH AND ENGLISH."
      },
      {
        "from": [
          "HANDWRITTEN IN LAVENDAR INK & THEN PRINTED; DECORATIVE BORDER;",
          "DECORATIVE BORDER; HANDWRITTEN IN LAVENDAR INK & THEN PRINTED;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HANDWRITTEN IN LAVENDAR INK & THEN PRINTED; DECORATIVE BORDER;"
      },
      {
        "from": [
          "ROOM SERVICE (LUNCHEON)",
          "ROOM SERVICE LUNCHEON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROOM SERVICE (LUNCHEON)"
      },
      {
        "from": [
          "TYPEWRITTEN ON FORM;2 COPIES;",
          "TYPEWRITTEN ON FORM;2 COPIES"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TYPEWRITTEN ON FORM;2 COPIES;"
      },
      {
        "from": [
          "BARBERS' SUPPLY DEALERS' ASSOCIATION OF AMERICA",
          "BARBERS' SUPPLY DEALERS ASSOCIATION OF AMERICA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BARBERS' SUPPLY DEALERS' ASSOCIATION OF AMERICA"
      },
      {
        "from": [
          "CHINESE RESTAURANT MENU. INCLUDES AMERICAN AND CHINESE MENUS.",
          "CHINESE RESTAURANT MENU. INCLUDES CHINESE AND AMERICAN MENUS."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHINESE RESTAURANT MENU. INCLUDES AMERICAN AND CHINESE MENUS."
      },
      {
        "from": [
          "HANDWRITTEN, PICTURE OF SAILING SHIP CAPTIONED AUSTRALIA AND GOLDEN GATE;",
          "HANDWRITTEN, PICTURE OF SAILING SHIP CAPTIONED AUSTRALIA, AND GOLDEN GATE;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HANDWRITTEN, PICTURE OF SAILING SHIP CAPTIONED AUSTRALIA AND GOLDEN GATE;"
      },
      {
        "from": [
          "WINE LIST ON BACK PRICED IN BRITISH CURRENCY;",
          "WINE LIST PRICED IN BRITISH CURRENCY ON BACK;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WINE LIST ON BACK PRICED IN BRITISH CURRENCY;"
      },
      {
        "from": [
          "SHIP AT SEA; MENU IN GERMAN; MAY BE USED AS POSTCARD;",
          "SHIP AT SEA; MENU IN GERMAN ; MAY BE USED AS POSTCARD;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SHIP AT SEA; MENU IN GERMAN; MAY BE USED AS POSTCARD;"
      },
      {
        "from": [
          "STATION CAFÉ - LUNCHEON",
          "STATION CAFÉ LUNCHEON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "STATION CAFÉ - LUNCHEON"
      },
      {
        "from": [
          "DIETER ZANDER COLLECTION; INCLUDES AN INSERT WITH SPECIALTIES OF THE DAY; LAST PAGE IS AN EXCERPT FROM \"DELMONICO'S - A CENTURY OF SPLENDOR\" BY LATELY THOMAS.",
          "DIETER ZANDER COLLECTION; INCLUDES INSERT WITH SPECIALTIES OF THE DAY; LAST PAGE IS AN EXCERPT FROM \"DELMONICO'S - A CENTURY OF SPLENDOR\" BY LATELY THOMAS."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DIETER ZANDER COLLECTION; INCLUDES AN INSERT WITH SPECIALTIES OF THE DAY; LAST PAGE IS AN EXCERPT FROM \"DELMONICO'S - A CENTURY OF SPLENDOR\" BY LATELY THOMAS."
      },
      {
        "from": [
          "2 COPIES;",
          "2 COPIES"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "2 COPIES;"
      },
      {
        "from": [
          "THE SOCIETY OF THE FRIENDLY SONS OF ST. PATRICK",
          "SOCIETY OF THE FRIENDLY SONS OF ST. PATRICK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE SOCIETY OF THE FRIENDLY SONS OF ST. PATRICK"
      },
      {
        "from": [
          "EVACUATION DAY - OLD GUARD",
          "OLD GUARD - EVACUATION DAY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EVACUATION DAY - OLD GUARD"
      },
      {
        "from": [
          "NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK",
          "THE NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK"
      },
      {
        "from": [
          "SPANISH IS SECONDARY LANGUAGE",
          "SPANISH IS SECONDARY LANGUAGE."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SPANISH IS SECONDARY LANGUAGE"
      },
      {
        "from": [
          "LOGO; PRICED MENU; NOTE ABOUT PURITY OF WATER;",
          "PRICED MENU; LOGO; NOTE ABOUT PURITY OF WATER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LOGO; PRICED MENU; NOTE ABOUT PURITY OF WATER;"
      },
      {
        "from": [
          "MENU IN BOTH GERMAN & ENGLISH;",
          "MENU IN BOTH GERMAN & ENGLISH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU IN BOTH GERMAN & ENGLISH;"
      },
      {
        "from": [
          "MENU HANDWRITTEN; MAP ON BACK SHOWING ROUTE;",
          "HANDWRITTEN MENU; MAP ON BACK SHOWING ROUTE;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU HANDWRITTEN; MAP ON BACK SHOWING ROUTE;"
      },
      {
        "from": [
          "DIETER ZANDER COLLECTION; COVER ILLUSTRATED WITH DINING GENTLEMAN; CONTAINS A SPECIALS INSERT",
          "DIETER ZANDER COLLECTION; ILLUSTRATED COVER WITH DINING GENTLEMAN; CONTAINS A SPECIALS INSERT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DIETER ZANDER COLLECTION; COVER ILLUSTRATED WITH DINING GENTLEMAN; CONTAINS A SPECIALS INSERT"
      },
      {
        "from": [
          "FRENCH; HOTEL SEAL AT TOP;",
          "FRENCH; HOTEL SEAL AT TOP;'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRENCH; HOTEL SEAL AT TOP;"
      },
      {
        "from": [
          "FRENCH MENU",
          "FRENCH MENU;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRENCH MENU"
      },
      {
        "from": [
          "MENU IN FRENCH;",
          "MENU IN FRENCH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU IN FRENCH;"
      },
      {
        "from": [
          "B&W PHOTOGRAPHS OF VARIOUS POINTS OF INTEREST IN AMERICA, HAWAII, CHINA;JAPAN;",
          "B&W PHOTOGRAPHS OF VARIOUS POINTS OF INTEREST IN AMERICA, HAWAII, CHINA,JAPAN;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "B&W PHOTOGRAPHS OF VARIOUS POINTS OF INTEREST IN AMERICA, HAWAII, CHINA;JAPAN;"
      },
      {
        "from": [
          "COMPLETE WINE LIST ON BACK;",
          "COMPLETE WINE LIST ON BACK'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COMPLETE WINE LIST ON BACK;"
      },
      {
        "from": [
          "AMERICAN NEWSPAPER PUBLISHERS ASSOCIATION",
          "AMERICAN NEWSPAPER PUBLISHERS' ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AMERICAN NEWSPAPER PUBLISHERS ASSOCIATION"
      },
      {
        "from": [
          "MENU IN GERMAN;",
          "MENU IN GERMAN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU IN GERMAN;"
      },
      {
        "from": [
          "PROGRAM & COMMITTEE MEMBERS LISTED;",
          "PROGRAM LISTED; COMMITTEE MEMBERS LISTED;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PROGRAM & COMMITTEE MEMBERS LISTED;"
      },
      {
        "from": [
          "SEPARATE LISTING IN ENGLISH AND GERMAN;TO BE USED AS A POSTCARD",
          "SEPARATE LISTING IN ENGLISH AND GERMAN;TO BE USED AS A POSTCARD;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SEPARATE LISTING IN ENGLISH AND GERMAN;TO BE USED AS A POSTCARD"
      },
      {
        "from": [
          "FRAGILE",
          "FRAGILE!!"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRAGILE"
      },
      {
        "from": [
          "DISHES IN ENGLISH, COURSES IN ENGLISH AND SPANISH; ORNAMENTAL BORDER;",
          "ORNAMENTAL BORDER; DISHES IN ENGLISH; COURSES IN ENGLISH AND SPANISH;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DISHES IN ENGLISH, COURSES IN ENGLISH AND SPANISH; ORNAMENTAL BORDER;"
      },
      {
        "from": [
          "INCLUDES WINE LIST",
          "INCLUDES WINE LIST;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "INCLUDES WINE LIST"
      }
    ],
    "description": "Mass edit cells in column notes"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "status",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column status using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "status",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column status using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "call_number",
    "expression": "grel:value.split('_')[0]",
    "onError": "set-to-blank",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column call_number using expression grel:value.split('_')[0]"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "call_number",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Zander 1",
          "Zander 10",
          "Zander 100",
          "Zander 11",
          "Zander 112",
          "Zander 115",
          "Zander 116",
          "Zander 117",
          "Zander 118",
          "Zander 12",
          "Zander 121",
          "Zander 125",
          "Zander 126",
          "Zander 128",
          "Zander 13",
          "Zander 130",
          "Zander 131",
          "Zander 137",
          "Zander 138",
          "Zander 139",
          "Zander 140",
          "Zander 141",
          "Zander 145",
          "Zander 146",
          "Zander 148",
          "Zander 15",
          "Zander 150",
          "Zander 151",
          "Zander 154",
          "Zander 159",
          "Zander 16",
          "Zander 162",
          "Zander 163",
          "Zander 167",
          "Zander 169",
          "Zander 17",
          "Zander 170",
          "Zander 171",
          "Zander 172",
          "Zander 176",
          "Zander 178",
          "Zander 18",
          "Zander 184",
          "Zander 190",
          "Zander 196",
          "Zander 2",
          "Zander 200",
          "Zander 201",
          "Zander 202",
          "Zander 206",
          "Zander 207",
          "Zander 208",
          "Zander 210",
          "Zander 211",
          "Zander 212",
          "Zander 218",
          "Zander 219",
          "Zander 22",
          "Zander 223",
          "Zander 229",
          "Zander 233",
          "Zander 234",
          "Zander 235",
          "Zander 237",
          "Zander 238",
          "Zander 239",
          "Zander 241",
          "Zander 242",
          "Zander 246",
          "Zander 247",
          "Zander 248",
          "Zander 249",
          "Zander 251",
          "Zander 252",
          "Zander 253",
          "Zander 254",
          "Zander 258",
          "Zander 259",
          "Zander 260",
          "Zander 261",
          "Zander 263",
          "Zander 269",
          "Zander 270",
          "Zander 271",
          "Zander 28",
          "Zander 281",
          "Zander 285",
          "Zander 29",
          "Zander 292",
          "Zander 297",
          "Zander 3",
          "Zander 300",
          "Zander 302",
          "Zander 303",
          "Zander 304",
          "Zander 306",
          "Zander 308",
          "Zander 309",
          "Zander 31",
          "Zander 310",
          "Zander 311",
          "Zander 312",
          "Zander 313",
          "Zander 316",
          "Zander 319",
          "Zander 320",
          "Zander 323",
          "Zander 324",
          "Zander 33",
          "Zander 330",
          "Zander 331",
          "Zander 333",
          "Zander 334",
          "Zander 337",
          "Zander 341",
          "Zander 342",
          "Zander 344",
          "Zander 345",
          "Zander 346 ",
          "Zander 35",
          "Zander 357",
          "Zander 359",
          "Zander 36",
          "Zander 360",
          "Zander 361",
          "Zander 364",
          "Zander 366",
          "Zander 369",
          "Zander 37",
          "Zander 372",
          "Zander 373",
          "Zander 374",
          "Zander 375",
          "Zander 376",
          "Zander 377",
          "Zander 379",
          "Zander 38",
          "Zander 384",
          "Zander 385",
          "Zander 386",
          "Zander 387",
          "Zander 388",
          "Zander 389",
          "Zander 391",
          "Zander 392",
          "Zander 393",
          "Zander 394",
          "Zander 395",
          "Zander 397",
          "Zander 399",
          "Zander 4",
          "Zander 40",
          "Zander 401",
          "Zander 402",
          "Zander 403",
          "Zander 408",
          "Zander 409",
          "Zander 41",
          "Zander 411",
          "Zander 413",
          "Zander 417",
          "Zander 418",
          "Zander 425",
          "Zander 428",
          "Zander 43",
          "Zander 431",
          "Zander 432",
          "Zander 434",
          "Zander 460",
          "Zander 465",
          "Zander 466",
          "Zander 47",
          "Zander 478",
          "Zander 48",
          "Zander 481",
          "Zander 487",
          "Zander 488",
          "Zander 49",
          "Zander 492",
          "Zander 493",
          "Zander 494",
          "Zander 497",
          "Zander 498",
          "Zander 499",
          "Zander 5",
          "Zander 502",
          "Zander 503",
          "Zander 504",
          "Zander 505",
          "Zander 506",
          "Zander 508",
          "Zander 509",
          "Zander 51",
          "Zander 513",
          "Zander 515",
          "Zander 517",
          "Zander 519",
          "Zander 520",
          "Zander 524",
          "Zander 53",
          "Zander 530",
          "Zander 536",
          "Zander 537",
          "Zander 54",
          "Zander 542",
          "Zander 543",
          "Zander 544",
          "Zander 545",
          "Zander 548",
          "Zander 549",
          "Zander 551",
          "Zander 556 ",
          "Zander 557",
          "Zander 558",
          "Zander 560",
          "Zander 565",
          "Zander 566",
          "Zander 568",
          "Zander 569",
          "Zander 57",
          "Zander 570",
          "Zander 571",
          "Zander 572",
          "Zander 574",
          "Zander 575",
          "Zander 576",
          "Zander 577",
          "Zander 578",
          "Zander 579",
          "Zander 580",
          "Zander 581",
          "Zander 582",
          "Zander 584",
          "Zander 585",
          "Zander 586",
          "Zander 588",
          "Zander 589",
          "Zander 590",
          "Zander 591",
          "Zander 592",
          "Zander 593",
          "Zander 594",
          "Zander 595",
          "Zander 597",
          "Zander 598",
          "Zander 599",
          "Zander 6",
          "Zander 60",
          "Zander 600",
          "Zander 601",
          "Zander 602",
          "Zander 603",
          "Zander 604",
          "Zander 605",
          "Zander 606",
          "Zander 607",
          "Zander 608",
          "Zander 609",
          "Zander 610",
          "Zander 611",
          "Zander 613",
          "Zander 614",
          "Zander 616 ",
          "Zander 617",
          "Zander 618 ",
          "Zander 619 ",
          "Zander 620 ",
          "Zander 621 ",
          "Zander 622",
          "Zander 623",
          "Zander 624",
          "Zander 625",
          "Zander 626",
          "Zander 627",
          "Zander 628",
          "Zander 629",
          "Zander 630",
          "Zander 631",
          "Zander 632",
          "Zander 633",
          "Zander 634",
          "Zander 635",
          "Zander 636",
          "Zander 637",
          "Zander 638 ",
          "Zander 639 ",
          "Zander 640",
          "Zander 641",
          "Zander 642",
          "Zander 643",
          "Zander 644",
          "Zander 645",
          "Zander 646",
          "Zander 647",
          "Zander 648",
          "Zander 649",
          "Zander 650",
          "Zander 652",
          "Zander 653",
          "Zander 654",
          "Zander 656",
          "Zander 657",
          "Zander 659",
          "Zander 66",
          "Zander 660",
          "Zander 661",
          "Zander 662",
          "Zander 663",
          "Zander 664",
          "Zander 665",
          "Zander 666",
          "Zander 667",
          "Zander 669",
          "Zander 67",
          "Zander 673",
          "Zander 674",
          "Zander 675",
          "Zander 676",
          "Zander 679",
          "Zander 68",
          "Zander 680",
          "Zander 69",
          "Zander 7",
          "Zander 71",
          "Zander 73",
          "Zander 74",
          "Zander 78",
          "Zander 79",
          "Zander 8",
          "Zander 80",
          "Zander 81",
          "Zander 83",
          "Zander 84",
          "Zander 85",
          "Zander 86",
          "Zander 88",
          "Zander 9",
          "Zander 91",
          "Zander 94",
          "Zander 95",
          "Zander 96"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      },
      {
        "from": [
          "Zander 102 undated",
          "Zander 103 undated",
          "Zander 104 undated",
          "Zander 105 undated",
          "Zander 106 undated",
          "Zander 107 undated",
          "Zander 108 undated",
          "Zander 109 undated",
          "Zander 110 undated",
          "Zander 111 undated",
          "Zander 113 undated",
          "Zander 114 undated",
          "Zander 119 undated",
          "Zander 120 undated",
          "Zander 122 undated",
          "Zander 127 undated",
          "Zander 129 undated",
          "Zander 132 undated",
          "Zander 133 undated",
          "Zander 134 undated",
          "Zander 135 undated",
          "Zander 136 undated",
          "Zander 14 undated",
          "Zander 143 undated",
          "Zander 144 undated",
          "Zander 152 undated",
          "Zander 153 undated",
          "Zander 155 undated",
          "Zander 164 undated",
          "Zander 165 undated",
          "Zander 166 undated",
          "Zander 168 undated",
          "Zander 173 undated",
          "Zander 174 undated",
          "Zander 175 undated",
          "Zander 177 undated",
          "Zander 179 undated",
          "Zander 180 undated",
          "Zander 181 undated",
          "Zander 182 undated",
          "Zander 183 undated",
          "Zander 185 undated",
          "Zander 186 undated",
          "Zander 187 undated",
          "Zander 188 undated",
          "Zander 189 undated",
          "Zander 19 undated",
          "Zander 191 undated",
          "Zander 192 undated",
          "Zander 194 undated",
          "Zander 195 undated",
          "Zander 197 undated",
          "Zander 198 undated",
          "Zander 199 undated",
          "Zander 203 undated",
          "Zander 204 undated",
          "Zander 205 undated",
          "Zander 209 undated",
          "Zander 21 undated",
          "Zander 213 undated",
          "Zander 214 undated",
          "Zander 215 undated",
          "Zander 216 undated",
          "Zander 217 undated",
          "Zander 220 undated",
          "Zander 221 undated",
          "Zander 222 undated",
          "Zander 224 undated",
          "Zander 225 undated",
          "Zander 226 undated",
          "Zander 227 undated",
          "Zander 23 undated",
          "Zander 231 undated",
          "Zander 232 undated",
          "Zander 236 undated",
          "Zander 24 undated",
          "Zander 240 undated",
          "Zander 243 undated",
          "Zander 244 undated",
          "Zander 245 undated",
          "Zander 25 undated",
          "Zander 250 undated",
          "Zander 255 undated",
          "Zander 256 undated",
          "Zander 257 undated",
          "Zander 26 undated",
          "Zander 262 undated",
          "Zander 264 undated",
          "Zander 265 undated",
          "Zander 266 undated",
          "Zander 267 undated",
          "Zander 268 undated",
          "Zander 272 undated",
          "Zander 273 undated",
          "Zander 274 undated",
          "Zander 275 undated",
          "Zander 276 undated",
          "Zander 277 undated",
          "Zander 278 undated",
          "Zander 279 undated",
          "Zander 280 undated",
          "Zander 282 undated",
          "Zander 283 undated",
          "Zander 284 undated",
          "Zander 286 undated",
          "Zander 287 undated",
          "Zander 288 undated",
          "Zander 289 undated",
          "Zander 290 undated",
          "Zander 291 undated",
          "Zander 293 undated",
          "Zander 294 undated",
          "Zander 295 undated",
          "Zander 296 undated",
          "Zander 298 undated",
          "Zander 299 undated",
          "Zander 30 undated",
          "Zander 301 undated",
          "Zander 305 undated",
          "Zander 307 undated",
          "Zander 315 undated",
          "Zander 317 undated",
          "Zander 318 undated",
          "Zander 32 undated",
          "Zander 321 undated",
          "Zander 322 undated",
          "Zander 325 undated",
          "Zander 326 undated",
          "Zander 328 undated",
          "Zander 329 undated",
          "Zander 332 undated",
          "Zander 335 undated",
          "Zander 336 undated",
          "Zander 338 undated",
          "Zander 339 undated",
          "Zander 34 undated",
          "Zander 340 undated",
          "Zander 343 undated",
          "Zander 347 undated",
          "Zander 348 undated",
          "Zander 349 undated",
          "Zander 350 undated",
          "Zander 351 undated",
          "Zander 352 undated",
          "Zander 353 undated",
          "Zander 354 undated",
          "Zander 355 undated",
          "Zander 356 undated",
          "Zander 358 undated",
          "Zander 362 undated",
          "Zander 363 undated",
          "Zander 365 undated",
          "Zander 367 undated",
          "Zander 368 undated",
          "Zander 370 undated",
          "Zander 371 undated",
          "Zander 378 undated",
          "Zander 380 undated",
          "Zander 381 undated",
          "Zander 382 undated",
          "Zander 383 undated",
          "Zander 390 undated",
          "Zander 396 undated",
          "Zander 398 undated",
          "Zander 400 undated",
          "Zander 404 undated",
          "Zander 405 undated",
          "Zander 406 undated",
          "Zander 407 undated",
          "Zander 410 undated",
          "Zander 412 undated",
          "Zander 415 undated",
          "Zander 416 undated",
          "Zander 419 undated",
          "Zander 42 undated",
          "Zander 420 undated",
          "Zander 421 undated",
          "Zander 422 undated",
          "Zander 423 undated",
          "Zander 424 undated",
          "Zander 426 undated",
          "Zander 427 undated",
          "Zander 429 undated",
          "Zander 430 undated",
          "Zander 436 undated",
          "Zander 437 undated",
          "Zander 438 undated",
          "Zander 44 undated",
          "Zander 440 undated",
          "Zander 441 undated",
          "Zander 442 undated",
          "Zander 443 undated",
          "Zander 444 undated",
          "Zander 446 undated",
          "Zander 447 undated",
          "Zander 448 undated",
          "Zander 449 undated",
          "Zander 45 undated",
          "Zander 450 undated",
          "Zander 451 undated",
          "Zander 452 undated",
          "Zander 453 undated",
          "Zander 454 undated",
          "Zander 455 undated",
          "Zander 456 undated",
          "Zander 457 undated",
          "Zander 458 undated",
          "Zander 459 undated",
          "Zander 46 undated",
          "Zander 462 undated",
          "Zander 463 undated",
          "Zander 467 undated",
          "Zander 468 undated",
          "Zander 469 undated",
          "Zander 470 undated",
          "Zander 471 undated",
          "Zander 472 undated",
          "Zander 473 undated",
          "Zander 474 undated",
          "Zander 475 undated",
          "Zander 476 undated",
          "Zander 477 undated",
          "Zander 479 undated",
          "Zander 480 undated",
          "Zander 482 undated",
          "Zander 483 undated",
          "Zander 484 undated",
          "Zander 485 undated",
          "Zander 486 undated",
          "Zander 489 undated",
          "Zander 490 undated",
          "Zander 491 undated",
          "Zander 495 undated",
          "Zander 496 undated",
          "Zander 50 undated",
          "Zander 500 undated",
          "Zander 501 undated",
          "Zander 507 undated",
          "Zander 510 undated",
          "Zander 511 undated",
          "Zander 512 undated",
          "Zander 514 undated",
          "Zander 516 undated",
          "Zander 518 undated",
          "Zander 52 undated",
          "Zander 521 undated",
          "Zander 522 undated",
          "Zander 523 undated",
          "Zander 525 undated",
          "Zander 526 undated",
          "Zander 527 undated",
          "Zander 528 undated",
          "Zander 529 undated",
          "Zander 531 undated",
          "Zander 532 undated",
          "Zander 533 undated",
          "Zander 534 undated",
          "Zander 535 undated",
          "Zander 538 undated",
          "Zander 539 undated",
          "Zander 540 undated",
          "Zander 541 undated",
          "Zander 546 undated",
          "Zander 547 undated",
          "Zander 55 undated",
          "Zander 550 undated",
          "Zander 553 undated",
          "Zander 554 undated",
          "Zander 555 undated",
          "Zander 56 undated",
          "Zander 561 undated",
          "Zander 562 undated",
          "Zander 563 undated",
          "Zander 564 undated",
          "Zander 567 undated",
          "Zander 573 undated",
          "Zander 58 undated",
          "Zander 59 undated",
          "Zander 61 undated",
          "Zander 62 undated",
          "Zander 63 undated",
          "Zander 64 undated",
          "Zander 65 undated",
          "Zander 70 undated",
          "Zander 72 undated",
          "Zander 75 undated",
          "Zander 76 undated",
          "Zander 77 undated",
          "Zander 82 undated",
          "Zander 87 undated",
          "Zander 89 undated",
          "Zander 90 undated",
          "Zander 92 undated",
          "Zander 93 undated",
          "Zander 97 undated",
          "Zander 98 undated",
          "Zander 99 undated"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      },
      {
        "from": [
          "Soete 1",
          "Soete 10",
          "Soete 100",
          "Soete 101",
          "Soete 102",
          "Soete 103",
          "Soete 104",
          "Soete 105",
          "Soete 106",
          "Soete 107",
          "Soete 108",
          "Soete 109",
          "Soete 11",
          "Soete 110",
          "Soete 111",
          "Soete 112",
          "Soete 113",
          "Soete 114",
          "Soete 118",
          "Soete 119",
          "Soete 12",
          "Soete 120",
          "Soete 121",
          "Soete 122",
          "Soete 123",
          "Soete 124",
          "Soete 125",
          "Soete 126",
          "Soete 127",
          "Soete 128",
          "Soete 129",
          "Soete 13",
          "Soete 130",
          "Soete 131",
          "Soete 132",
          "Soete 133",
          "Soete 134",
          "Soete 135",
          "Soete 136",
          "Soete 137",
          "Soete 138",
          "Soete 139",
          "Soete 14",
          "Soete 140",
          "Soete 141",
          "Soete 142",
          "Soete 143",
          "Soete 144",
          "Soete 145",
          "Soete 146",
          "Soete 147",
          "Soete 148",
          "Soete 149",
          "Soete 15",
          "Soete 150",
          "Soete 151",
          "Soete 152",
          "Soete 153",
          "Soete 154",
          "Soete 155",
          "Soete 156",
          "Soete 157",
          "Soete 158",
          "Soete 159",
          "Soete 16",
          "Soete 160",
          "Soete 161",
          "Soete 162",
          "Soete 163",
          "Soete 164",
          "Soete 165",
          "Soete 166",
          "Soete 169",
          "Soete 17",
          "Soete 170",
          "Soete 171",
          "Soete 172",
          "Soete 173",
          "Soete 174",
          "Soete 175",
          "Soete 176",
          "Soete 177",
          "Soete 178",
          "Soete 179",
          "Soete 18",
          "Soete 180",
          "Soete 181",
          "Soete 182",
          "Soete 183",
          "Soete 184",
          "Soete 185",
          "Soete 186",
          "Soete 187",
          "Soete 188",
          "Soete 189",
          "Soete 19",
          "Soete 190",
          "Soete 191",
          "Soete 192",
          "Soete 193",
          "Soete 194",
          "Soete 195",
          "Soete 196",
          "Soete 197",
          "Soete 198",
          "Soete 199",
          "Soete 2",
          "Soete 20",
          "Soete 200",
          "Soete 201",
          "Soete 203",
          "Soete 204",
          "Soete 205",
          "Soete 206",
          "Soete 208",
          "Soete 209A",
          "Soete 21",
          "Soete 210",
          "Soete 212",
          "Soete 213",
          "Soete 215",
          "Soete 216",
          "Soete 217",
          "Soete 218",
          "Soete 219",
          "Soete 22",
          "Soete 221",
          "Soete 223",
          "Soete 224",
          "Soete 225",
          "Soete 226",
          "Soete 227",
          "Soete 228",
          "Soete 229",
          "Soete 23",
          "Soete 230",
          "Soete 232",
          "Soete 233",
          "Soete 234",
          "Soete 236",
          "Soete 238",
          "Soete 239",
          "Soete 24",
          "Soete 240",
          "Soete 241",
          "Soete 242",
          "Soete 243",
          "Soete 244",
          "Soete 25",
          "Soete 26",
          "Soete 27",
          "Soete 28",
          "Soete 29",
          "Soete 3",
          "Soete 30",
          "Soete 31",
          "Soete 32",
          "Soete 33",
          "Soete 34",
          "Soete 35",
          "Soete 36",
          "Soete 37",
          "Soete 38",
          "Soete 39",
          "Soete 4",
          "Soete 40",
          "Soete 41",
          "Soete 42",
          "Soete 43",
          "Soete 44",
          "Soete 45",
          "Soete 46",
          "Soete 47",
          "Soete 48",
          "Soete 49",
          "Soete 5",
          "Soete 50",
          "Soete 51",
          "Soete 52",
          "Soete 53",
          "Soete 54",
          "Soete 55",
          "Soete 57",
          "Soete 58",
          "Soete 59",
          "Soete 6",
          "Soete 60",
          "Soete 61",
          "Soete 62",
          "Soete 63",
          "Soete 64",
          "Soete 65",
          "Soete 66",
          "Soete 67",
          "Soete 68",
          "Soete 69",
          "Soete 7",
          "Soete 70",
          "Soete 71",
          "Soete 72",
          "Soete 73",
          "Soete 74",
          "Soete 75",
          "Soete 76",
          "Soete 77",
          "Soete 78",
          "Soete 79",
          "Soete 8",
          "Soete 80",
          "Soete 81",
          "Soete 82",
          "Soete 83",
          "Soete 84",
          "Soete 85",
          "Soete 86",
          "Soete 87",
          "Soete 88",
          "Soete 9",
          "Soete 92",
          "Soete 94",
          "Soete 95",
          "Soete 96",
          "Soete 97",
          "Soete 98",
          "Soete 99",
          "soete 56"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      },
      {
        "from": [
          "Baratta 1",
          "Baratta 100",
          "Baratta 103",
          "Baratta 104",
          "Baratta 106",
          "Baratta 107",
          "Baratta 109",
          "Baratta 11",
          "Baratta 110",
          "Baratta 111",
          "Baratta 112",
          "Baratta 113",
          "Baratta 114",
          "Baratta 116",
          "Baratta 117",
          "Baratta 118",
          "Baratta 119",
          "Baratta 12",
          "Baratta 120",
          "Baratta 121",
          "Baratta 128",
          "Baratta 13",
          "Baratta 132",
          "Baratta 133",
          "Baratta 134",
          "Baratta 137",
          "Baratta 138",
          "Baratta 139",
          "Baratta 14",
          "Baratta 140",
          "Baratta 143",
          "Baratta 144",
          "Baratta 145",
          "Baratta 146",
          "Baratta 147",
          "Baratta 149",
          "Baratta 15",
          "Baratta 151",
          "Baratta 152",
          "Baratta 153",
          "Baratta 156",
          "Baratta 157",
          "Baratta 158",
          "Baratta 159",
          "Baratta 160",
          "Baratta 163",
          "Baratta 164",
          "Baratta 165",
          "Baratta 166",
          "Baratta 169",
          "Baratta 17",
          "Baratta 170",
          "Baratta 172",
          "Baratta 19",
          "Baratta 20",
          "Baratta 22",
          "Baratta 23",
          "Baratta 24",
          "Baratta 25",
          "Baratta 26",
          "Baratta 28",
          "Baratta 3",
          "Baratta 32",
          "Baratta 34",
          "Baratta 35",
          "Baratta 36",
          "Baratta 37",
          "Baratta 38",
          "Baratta 39",
          "Baratta 4",
          "Baratta 41",
          "Baratta 42",
          "Baratta 43",
          "Baratta 44",
          "Baratta 45",
          "Baratta 46",
          "Baratta 47",
          "Baratta 48",
          "Baratta 5",
          "Baratta 50",
          "Baratta 51",
          "Baratta 52",
          "Baratta 53",
          "Baratta 54",
          "Baratta 55",
          "Baratta 56",
          "Baratta 57",
          "Baratta 58",
          "Baratta 59",
          "Baratta 6",
          "Baratta 60",
          "Baratta 61",
          "Baratta 62",
          "Baratta 63",
          "Baratta 64",
          "Baratta 65",
          "Baratta 66",
          "Baratta 67",
          "Baratta 68",
          "Baratta 69",
          "Baratta 7",
          "Baratta 70",
          "Baratta 71",
          "Baratta 72",
          "Baratta 73",
          "Baratta 74",
          "Baratta 76",
          "Baratta 77",
          "Baratta 79",
          "Baratta 8",
          "Baratta 80",
          "Baratta 81",
          "Baratta 82",
          "Baratta 83",
          "Baratta 84",
          "Baratta 85",
          "Baratta 86",
          "Baratta 87",
          "Baratta 88",
          "Baratta 89",
          "Baratta 9",
          "Baratta 90",
          "Baratta 91"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      },
      {
        "from": [
          "Baratta 10 (2 copies)",
          "Baratta 126 (3 copies)",
          "Baratta 127 (2 copies)",
          "Baratta 129 (2 copies)",
          "Baratta 168 (2 copies)",
          "Baratta 171 (2 copies)",
          "Baratta 21 (2 copies)",
          "Baratta 27 (2 copies)",
          "Baratta 29 (2 copies)",
          "Baratta 30 (2 copies)",
          "Baratta 31 (3 copies)",
          "Baratta 33 (2 copies)",
          "Baratta 40 (2 copies)",
          "Baratta 49 (2 copies)",
          "Baratta 75 (2 copies)",
          "Baratta 92 (2 copies)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      },
      {
        "from": [
          "Soete 222A-B",
          "Soete 235A-B",
          "soete 214A-B",
          "soete 220A-B"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      },
      {
        "from": [
          "Zander 651 c. 2",
          "Zander 655 c. 1",
          "Zander 655 c. 2"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      },
      {
        "from": [
          "Soete 207A-C",
          "Soete 237A-C"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column call_number"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "call_number",
    "expression": "grel:value.split(' ')[0]",
    "onError": "set-to-blank",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column call_number using expression grel:value.split(' ')[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "call_number",
    "expression": "grel:value.match(/(\\d+-\\d+)/)[0]",
    "onError": "set-to-blank",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column call_number using expression grel:value.match(/(\\d+-\\d+)/)[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression value.toUppercase()"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value",
    "edits": [
      {
        "from": [
          "NORDDEUTSCHER LLOYD BREMEN",
          "NORDDEUTSCHER LLOYD, BREMEN",
          "BREMEN NORDDEUTSCHER LLOYD",
          "NORDDEUTSCHER LLOYD BREMEN;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORDDEUTSCHER LLOYD, BREMEN"
      },
      {
        "from": [
          "[RESTAURANT NAME AND/OR LOCATION NOT GIVEN]",
          "RESTAURANT NAME AND/OR LOCATION NOT GIVEN]",
          "RESTAURANT NAME AND/OR LOCATION NOT GIVEN",
          "[RESTAURANT NAME AND/OR LOCATION NOT GIVEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      },
      {
        "from": [
          "FIFTH AVENUE HOTEL",
          "FIFTH AVENUE HOTEL (?)",
          "FIFTH AVENUE HOTEL?",
          "(FIFTH AVENUE HOTEL?}"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FIFTH AVENUE HOTEL"
      },
      {
        "from": [
          "CHILDS",
          "CHILDS'",
          "CHILD'S"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHILD'S"
      },
      {
        "from": [
          "GRAMERCY PARK HOTEL",
          "HOTEL GRAMERCY PARK",
          "GRAMERCY PARK HOTEL; HOTEL GRAMERCY PARK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAMERCY PARK HOTEL"
      },
      {
        "from": [
          "RIGGS'",
          "RIGG'S",
          "RIGGS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RIGG'S"
      },
      {
        "from": [
          "EDWARD F. LANG'S LADIES AND GENTS LUNCH ROOM AND RESTAURANT",
          "EDWARD F. LANG'S LADIES' AND GENT'S LUNCH ROOM AND RESTAURANT",
          "EDWARD F. LANG'S LADIES' AND GENT'S LUNCH ROOM AND RESTAURANT;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EDWARD F. LANG'S LADIES AND GENTS LUNCH ROOM AND RESTAURANT"
      },
      {
        "from": [
          "HOTEL KNICKERBOCKER",
          "HOTEL KNICKERBOCKER (?)",
          "KNICKERBOCKER HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL KNICKERBOCKER"
      },
      {
        "from": [
          "U.S.M.S.",
          "USMS",
          "U.S.M.S"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S."
      },
      {
        "from": [
          "U.S.M.S. NEW YORK",
          "USMS NEW YORK",
          "U.S.M.S NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S. NEW YORK"
      },
      {
        "from": [
          "DELMONICOS",
          "DELMONICO'S",
          "DELMONICOS."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DELMONICOS"
      },
      {
        "from": [
          "THE MERCHANT'S CLUB",
          "THE MERCHANTS CLUB",
          "THE MERCHANTS' CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE MERCHANT'S CLUB"
      },
      {
        "from": [
          "MERCHANT'S CLUB",
          "MERCHANTS' CLUB",
          "MERCHANTS CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MERCHANT'S CLUB"
      },
      {
        "from": [
          "ST. DENIS HOTEL",
          "HOTEL ST. DENIS",
          "ST, DENIS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. DENIS HOTEL"
      },
      {
        "from": [
          "HOTEL IMPERIAL",
          "IMPERIAL HOTEL",
          "IMPÉRIAL HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL IMPERIAL"
      },
      {
        "from": [
          "AMERICAN MEDICAL EDITOR'S ASSOCIATION",
          "AMERICAN MEDICAL EDITORS' ASSOCIATION",
          "AMERICAN MEDICAL EDITORS ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AMERICAN MEDICAL EDITOR'S ASSOCIATION"
      },
      {
        "from": [
          "HOTEL METROPOLE",
          "METROPOLE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL METROPOLE"
      },
      {
        "from": [
          "S.S. AMERICAN SHIPPER",
          "S.S. \"AMERICAN SHIPPER\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. AMERICAN SHIPPER"
      },
      {
        "from": [
          "NORDEUTSCHER LLOYD BREMEN",
          "NORDEUTSCHER LLOYD, BREMEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORDEUTSCHER LLOYD BREMEN"
      },
      {
        "from": [
          "WABASH RAILWAY COMPANY",
          "WABASH [RAILWAY COMPANY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WABASH RAILWAY COMPANY"
      },
      {
        "from": [
          "ALTA VISTA HOTEL",
          "ALTA VISTA HOTEL (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ALTA VISTA HOTEL"
      },
      {
        "from": [
          "FRIENDLY SONS OF ST. PATRICK",
          "FRIENDLY SONS OF ST PATRICK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRIENDLY SONS OF ST. PATRICK"
      },
      {
        "from": [
          "CIE GLE TRANSATLANTIQUE",
          "CIE. GLE. TRANSATLANTIQUE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CIE GLE TRANSATLANTIQUE"
      },
      {
        "from": [
          "DE L'ANGE HOTEL",
          "HOTEL DE L'ANGE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DE L'ANGE HOTEL"
      },
      {
        "from": [
          "RIGG'S TWENTIETH STREET RESTAURANT",
          "RIGGS' TWENTIETH STREET RESTAURANT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RIGG'S TWENTIETH STREET RESTAURANT"
      },
      {
        "from": [
          "ANCIENT AND HONORABLE ARTILLERY CO OF MASSACHUSETTS",
          "ANCIENT AND HONORABLE ARTILLERY CO. OF MASSACHUSETTS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANCIENT AND HONORABLE ARTILLERY CO OF MASSACHUSETTS"
      },
      {
        "from": [
          "THE NEW WILLARD HOTEL",
          "THE NEW WILLARD HOTEL."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE NEW WILLARD HOTEL"
      },
      {
        "from": [
          "ST. FRANCIS HOTEL",
          "HOTEL ST. FRANCIS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. FRANCIS HOTEL"
      },
      {
        "from": [
          "SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK",
          "SOCIETY OF THE SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOCIETY OF COLONIAL WARS IN THE STATE OF NEW YORK"
      },
      {
        "from": [
          "MUHLENKAMPER FAHRHAUS",
          "MÜHLENKAMPER FÄHRHAUS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MUHLENKAMPER FAHRHAUS"
      },
      {
        "from": [
          "DEL PRADO HOTEL",
          "HOTEL DEL PRADO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DEL PRADO HOTEL"
      },
      {
        "from": [
          "CHILDS' LUNCH ROOMS",
          "CHILD'S LUNCH ROOMS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHILD'S LUNCH ROOMS"
      },
      {
        "from": [
          "ENGINEERS CLUB",
          "ENGINEERS' CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ENGINEERS CLUB"
      },
      {
        "from": [
          "HOTEL MANHATTAN",
          "MANHATTAN HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MANHATTAN"
      },
      {
        "from": [
          "HOTEL VICTORY",
          "VICTORY HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL VICTORY"
      },
      {
        "from": [
          "? CLUB",
          "CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CLUB"
      },
      {
        "from": [
          "PAQUEBOT \\LIBERTÉ\\\"\"",
          "PAQUEBOT LIBERTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PAQUEBOT LIBERTE"
      },
      {
        "from": [
          "HOTEL GRUNEWALD",
          "GRUNEWALD HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL GRUNEWALD"
      },
      {
        "from": [
          "FAIRMONT HOTEL",
          "HOTEL FAIRMONT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FAIRMONT HOTEL"
      },
      {
        "from": [
          "HOTEL ALCAZAR",
          "ALCAZAR HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ALCAZAR"
      },
      {
        "from": [
          "CAFE SAVARIN",
          "CAFÉ SAVARIN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAFÉ SAVARIN"
      },
      {
        "from": [
          "ST. NICHOLAS HOTEL",
          "HOTEL ST. NICHOLAS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. NICHOLAS HOTEL"
      },
      {
        "from": [
          "HOTEL COLORADO",
          "COLORADO HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL COLORADO"
      },
      {
        "from": [
          "COSMOPOLITAN HOTEL",
          "COSMOPOLITAN... HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COSMOPOLITAN HOTEL"
      },
      {
        "from": [
          "HOTEL COLOMBO",
          "COLOMBO HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL COLOMBO"
      },
      {
        "from": [
          "PALACE HOTEL",
          "PALACE HÔTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PALACE HOTEL"
      },
      {
        "from": [
          "ANCIENT ACCEPTED SCOTTISH RITE",
          "ANCIENT & ACCEPTED SCOTTISH RITE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANCIENT ACCEPTED SCOTTISH RITE"
      },
      {
        "from": [
          "PIRATE'S HOUSE",
          "PIRATES' HOUSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PIRATE'S HOUSE"
      },
      {
        "from": [
          "MICHIGAN SOCIETY OF THE SONS OF THE AMERICAN REVOLUTION",
          "MICHIGAN SOCIETY SONS OF THE AMERICAN REVOLUTION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MICHIGAN SOCIETY OF THE SONS OF THE AMERICAN REVOLUTION"
      },
      {
        "from": [
          "MERCHANT'S CLUB OF BOSTON",
          "MERCHANTS' CLUB OF BOSTON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MERCHANT'S CLUB OF BOSTON"
      },
      {
        "from": [
          "SECOND PANEL SHERIFF'S JURY",
          "SHERIFF'S JURY SECOND PANEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SECOND PANEL SHERIFF'S JURY"
      },
      {
        "from": [
          "ELKS CLUB HOUSE",
          "ELKS' CLUB HOUSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ELKS CLUB HOUSE"
      },
      {
        "from": [
          "HOTEL DU MUSEE",
          "HOTEL DU MUSEE'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL DU MUSEE"
      },
      {
        "from": [
          "TAVERN ON THE GREEN",
          "THE TAVERN ON THE GREEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TAVERN ON THE GREEN"
      },
      {
        "from": [
          "MINOT HOTEL",
          "HOTEL MINOT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MINOT HOTEL"
      },
      {
        "from": [
          "[RESTAURANT AND/OR LOCATION NOT GIVEN.]",
          "[RESTAURANT AND/OR LOCATION NOT GIVEN]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      },
      {
        "from": [
          "KEMPINSKI RESTAURANT",
          "RESTAURANT KEMPINSKI"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KEMPINSKI RESTAURANT"
      },
      {
        "from": [
          "S.S NEW AMSTERDAM",
          "S.S. NEW AMSTERDAM"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S NEW AMSTERDAM"
      },
      {
        "from": [
          "SHERRY'S",
          "SHERRYS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SHERRY'S"
      },
      {
        "from": [
          "AMBASSADOR HOTEL",
          "HOTEL AMBASSADOR"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AMBASSADOR HOTEL"
      },
      {
        "from": [
          "BRISTOL HOTEL",
          "HOTEL BRISTOL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BRISTOL HOTEL"
      },
      {
        "from": [
          "SCHWARZWALDER'S NATUR WEINHAUS",
          "SCHWARZWALDERS NATUR WEINHAUS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SCHWARZWALDERS NATUR WEINHAUS"
      },
      {
        "from": [
          "THE COMMODORE HOTEL",
          "THE HOTEL COMMODORE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE COMMODORE HOTEL"
      },
      {
        "from": [
          "ALGONQUIN HOTEL",
          "HOTEL ALGONQUIN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ALGONQUIN HOTEL"
      },
      {
        "from": [
          "HOTEL WORTHY",
          "WORTHY HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL WORTHY"
      },
      {
        "from": [
          "HOTEL MAJESTIC",
          "MAJESTIC HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MAJESTIC"
      },
      {
        "from": [
          "WILLARD'S HOTEL",
          "WILLARDS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WILLARD'S HOTEL"
      },
      {
        "from": [
          "GRAND BALLROOM OF THE HOTEL PLAZA",
          "THE GRAND BALLROOM OF THE HOTEL PLAZA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAND BALLROOM OF THE HOTEL PLAZA"
      },
      {
        "from": [
          "CENTURY CLUB",
          "CENTURY CLUB?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CENTURY CLUB"
      },
      {
        "from": [
          "HOTEL ASTOR",
          "ASTOR HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ASTOR"
      },
      {
        "from": [
          "HOTEL CHAMBERLIN",
          "CHAMBERLIN HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL CHAMBERLIN"
      },
      {
        "from": [
          "GROCERS HALL",
          "GROCERS' HALL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GROCERS HALL"
      },
      {
        "from": [
          "CONTINENTAL HOTEL",
          "HOTEL CONTINENTAL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CONTINENTAL HOTEL"
      },
      {
        "from": [
          "NEW YORK CENTRAL SYSTEM",
          "[NEW YORK CENTRAL SYSTEM]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK CENTRAL SYSTEM"
      },
      {
        "from": [
          "COLONIAL HOTEL",
          "HOTEL COLONIAL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COLONIAL HOTEL"
      },
      {
        "from": [
          "HOTEL ST. REGIS",
          "ST. REGIS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ST. REGIS"
      },
      {
        "from": [
          "HOTEL NETHERLAND",
          "NETHERLAND HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL NETHERLAND"
      },
      {
        "from": [
          "ST.REGIS HOTEL",
          "HOTEL ST.REGIS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST.REGIS HOTEL"
      },
      {
        "from": [
          "ST. CHARLES HOTEL",
          "ST CHARLES HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. CHARLES HOTEL"
      },
      {
        "from": [
          "HOTEL VELVET",
          "VELVET HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL VELVET"
      },
      {
        "from": [
          "SOCIETY OF SONS OF THE REVOLUTION IN THE STATE OF MISSOURI",
          "SOCIETY SONS OF THE REVOLUTION IN THE STATE OF MISSOURI"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOCIETY OF SONS OF THE REVOLUTION IN THE STATE OF MISSOURI"
      },
      {
        "from": [
          "WALDORF ASTORIA",
          "WALDORF ASTORIA?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WALDORF ASTORIA"
      },
      {
        "from": [
          "EMPIRE HOTEL",
          "HOTEL EMPIRE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EMPIRE HOTEL"
      },
      {
        "from": [
          "REUBEN'S",
          "REUBEN'S."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "REUBEN'S"
      },
      {
        "from": [
          "PAQUEBOT \\FRANCE\\\"\"",
          "PAQUEBOT FRANCE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PAQUEBOT FRANCE"
      },
      {
        "from": [
          "ROYAL PALM HOTEL",
          "HOTEL ROYAL PALM"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROYAL PALM HOTEL"
      },
      {
        "from": [
          "GEORGE WASHINGTON HOTEL",
          "HOTEL GEORGE WASHINGTON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GEORGE WASHINGTON HOTEL"
      },
      {
        "from": [
          "R.G.(?)",
          "RG"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RG"
      },
      {
        "from": [
          "COLUMBIA HOTEL",
          "HOTEL COLUMBIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COLUMBIA HOTEL"
      },
      {
        "from": [
          "R.M.S. OCEANIC",
          "RMS OCEANIC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. OCEANIC"
      },
      {
        "from": [
          "NEW GRAND HOTEL",
          "GRAND NEW HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW GRAND HOTEL"
      },
      {
        "from": [
          "THE HOTEL PLAZA",
          "THE PLAZA HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE HOTEL PLAZA"
      },
      {
        "from": [
          "CAFE DE PARIS",
          "CAFÉ DE PARIS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAFÉ DE PARIS"
      },
      {
        "from": [
          "XIII CLUB",
          "CLUB XIII"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "XIII CLUB"
      },
      {
        "from": [
          "PLACE VIGER HOTEL",
          "HOTEL PLACE VIGER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PLACE VIGER HOTEL"
      },
      {
        "from": [
          "HOTEL LAFAYETTE",
          "LAFAYETTE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL LAFAYETTE"
      },
      {
        "from": [
          "EMPIRE STATE SOCIETY OF SONS OF THE AMERICAN REVOLUTION",
          "EMPIRE STATE SOCIETY SONS OF THE AMERICAN REVOLUTION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EMPIRE STATE SOCIETY OF SONS OF THE AMERICAN REVOLUTION"
      },
      {
        "from": [
          "HOTEL PENNSYLVANIA",
          "PENNSYLVANIA HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL PENNSYLVANIA"
      },
      {
        "from": [
          "HOTEL SAVOY",
          "SAVOY HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL SAVOY"
      },
      {
        "from": [
          "HOTEL DENNIS",
          "DENNIS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL DENNIS"
      },
      {
        "from": [
          "R.M.S. PARTHIA",
          "R.M.S. \"PARTHIA\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. PARTHIA"
      },
      {
        "from": [
          "CAFÉ LAFAYETTE",
          "CAFE LAFAYETTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAFÉ LAFAYETTE"
      },
      {
        "from": [
          "MOUQUIN RESTAURANT AND WINE CO",
          "MOUQUIN RESTAURANT AND WINE CO."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MOUQUIN RESTAURANT AND WINE CO"
      },
      {
        "from": [
          "IMPERIAL",
          "IMPERIAL (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "IMPERIAL"
      },
      {
        "from": [
          "S.S. MINNETONKA",
          "S.S. \"MINNETONKA\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. MINNETONKA"
      },
      {
        "from": [
          "HOTEL COMMODORE",
          "COMMODORE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL COMMODORE"
      },
      {
        "from": [
          "USMS ST LOUIS",
          "U.S.M.S. ST. LOUIS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "USMS ST LOUIS"
      },
      {
        "from": [
          "HOTEL WINTHROP",
          "WINTHROP HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL WINTHROP"
      },
      {
        "from": [
          "MEYER'S HOTEL",
          "MEYERS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MEYER'S HOTEL"
      },
      {
        "from": [
          "HOTEL PHONIX",
          "PHONIX HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL PHONIX"
      },
      {
        "from": [
          "HOTEL BILTMORE",
          "BILTMORE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL BILTMORE"
      },
      {
        "from": [
          "HOTEL JEFFERSON",
          "JEFFERSON HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL JEFFERSON"
      },
      {
        "from": [
          "SMITH & MCNELL'S",
          "SMITH & MCNELLS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SMITH & MCNELL'S"
      },
      {
        "from": [
          "HOTEL D'ANGLETERRE",
          "D'ANGLETERRE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL D'ANGLETERRE"
      },
      {
        "from": [
          "R.M.S. \"QUEEN MARY\"\"\"",
          "R.M.S. \\QUEEN MARY\\\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. QUEEN MARY"
      },
      {
        "from": [
          "CLAREMONT HOTEL",
          "HOTEL CLAREMONT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CLAREMONT HOTEL"
      },
      {
        "from": [
          "HOTEL DEL CORONADO",
          "DEL CORONADO HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL DEL CORONADO"
      },
      {
        "from": [
          "CAFE BOULEVARD",
          "CAFÉ BOULEVARD"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAFÉ BOULEVARD"
      },
      {
        "from": [
          "HOTEL CHAMPLAIN",
          "CHAMPLAIN HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL CHAMPLAIN"
      },
      {
        "from": [
          "R.M.S. \\MAURETANIA\\\"\"",
          "R.M.S. MAURETANIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. MAURETANIA"
      },
      {
        "from": [
          "MET-LIFE BUILDING",
          "METLIFE BUILDING"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "METLIFE BUILDING"
      },
      {
        "from": [
          "S.S. \"FREDERIK VIII\"",
          "S.S. FREDERIK VIII"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. FREDERIK VIII"
      },
      {
        "from": [
          "HOTEL EASTMAN",
          "EASTMAN HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL EASTMAN"
      },
      {
        "from": [
          "BALLROOM, THE PLAZA",
          "THE PLAZA BALLROOM"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE PLAZA BALLROOM"
      },
      {
        "from": [
          "MENZIE'S HOTEL",
          "MENZIES HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENZIE'S HOTEL"
      },
      {
        "from": [
          "AMERICAN BANKERS ASSOCIATION",
          "AMERICAN BANKERS' ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AMERICAN BANKERS ASSOCIATION"
      },
      {
        "from": [
          "BREVOORT RESTAURANT",
          "RESTAURANT BREVOORT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BREVOORT RESTAURANT"
      },
      {
        "from": [
          "PROMENADE CAFÉ",
          "CAFE PROMENADE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAFE PROMENADE"
      },
      {
        "from": [
          "S.S. \"ILE DE FRANCE\"\"\"",
          "S.S. ILE DE FRANCE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. ILE DE FRANCE"
      },
      {
        "from": [
          "MASTER PRINTERS' ASSOCIATION",
          "MASTER PRINTERS ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MASTER PRINTERS ASSOCIATION"
      },
      {
        "from": [
          "RESTAURANT MAYAN",
          "MAYAN RESTAURANT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RESTAURANT MAYAN"
      },
      {
        "from": [
          "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES COMMANDERY OF THE STATE OF MINNESOTA",
          "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES. COMMANDERY OF THE STATE OF MINNESOTA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES COMMANDERY OF THE STATE OF MINNESOTA"
      },
      {
        "from": [
          "CASTLETON HOTEL",
          "HOTEL CASTLETON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL CASTLETON"
      },
      {
        "from": [
          "ADAMS' RESTAURANT",
          "ADAM'S RESTAURANT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ADAM'S RESTAURANT"
      },
      {
        "from": [
          "NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK",
          "THE NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK"
      },
      {
        "from": [
          "GRENOBLE HOTEL",
          "HOTEL GRENOBLE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRENOBLE HOTEL"
      },
      {
        "from": [
          "PENN RR PULLMAN DINING CAR SERVICE",
          "PENN. RR PULLMAN DINING CAR SERVICE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PENN RR PULLMAN DINING CAR SERVICE"
      },
      {
        "from": [
          "SANTA FE ROUTE",
          "SANTA FE' ROUTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SANTA FE ROUTE"
      },
      {
        "from": [
          "ALPHA KAPPA KAPPA",
          "KAPPA ALPHA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KAPPA ALPHA"
      },
      {
        "from": [
          "NATIONAL COOPER'S ASSOCIATION",
          "NATIONAL COOPERS ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NATIONAL COOPERS ASSOCIATION"
      },
      {
        "from": [
          "WINDSOR HOTEL",
          "HOTEL WINDSOR"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WINDSOR HOTEL"
      },
      {
        "from": [
          "HOTEL NATIONAL",
          "NATIONAL HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL NATIONAL"
      },
      {
        "from": [
          "HOTEL MARIE ANTOINETTE",
          "MARIE ANTOINETTE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MARIE ANTOINETTE"
      },
      {
        "from": [
          "HOTEL QUISISANA",
          "QUISISANA HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "QUISISANA HOTEL"
      },
      {
        "from": [
          "UNITED STATES GOVERNMENT",
          "UNITED STATES GOVERNMENT?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNITED STATES GOVERNMENT"
      },
      {
        "from": [
          "NEW YORK CENTRAL SYSTEM, BOSTON & ALBANY RAILROAD",
          "BOSTON & ALBANY RAILROAD , NEW YORK CENTRAL SYSTEM"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK CENTRAL SYSTEM, BOSTON & ALBANY RAILROAD"
      },
      {
        "from": [
          "COPLEY PLAZA HOTEL",
          "HOTEL COPLEY PLAZA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COPLEY PLAZA HOTEL"
      },
      {
        "from": [
          "ALBANY ZOUAVE CADETS OLD GUARD",
          "OLD GUARD ALBANY ZOUAVE CADETS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ALBANY ZOUAVE CADETS OLD GUARD"
      },
      {
        "from": [
          "NEW YORK CENTRAL & HUDSON RIVER R.R.",
          "NEW YORK CENTRAL & HUDSON RIVER R.R.."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK CENTRAL & HUDSON RIVER R.R."
      },
      {
        "from": [
          "ST. GEORGE'S SOCIETY",
          "ST. GEORGES SOCIETY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. GEORGE'S SOCIETY"
      },
      {
        "from": [
          "SAN REMO HOTEL",
          "HOTEL SAN REMO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SAN REMO HOTEL"
      },
      {
        "from": [
          "SHANLEY'S",
          "SHANLEYS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SHANLEY'S"
      },
      {
        "from": [
          "FRAUNCES' TAVERN",
          "FRAUNCES TAVERN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRAUNCES' TAVERN"
      },
      {
        "from": [
          "HOTEL ST. GEORGE",
          "ST. GEORGE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ST. GEORGE"
      },
      {
        "from": [
          "GRAND HOTEL ROYAL",
          "ROYAL GRAND HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAND HOTEL ROYAL"
      },
      {
        "from": [
          "HOTEL PLAZA",
          "PLAZA HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL PLAZA"
      },
      {
        "from": [
          "YORK HOTEL",
          "HOTEL YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "YORK HOTEL"
      },
      {
        "from": [
          "HOTEL ROYAL",
          "ROYAL HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ROYAL"
      },
      {
        "from": [
          "HOTEL VENDOME",
          "VENDOME HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL VENDOME"
      },
      {
        "from": [
          "CIE TRANSATLANTIQUE",
          "CIE CIE TRANSATLANTIQUE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CIE TRANSATLANTIQUE"
      },
      {
        "from": [
          "U.S. ARMY SUBSISTENCE DEPT.",
          "US ARMY SUBSISTENCE DEPT."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S. ARMY SUBSISTENCE DEPT."
      },
      {
        "from": [
          "HOTEL MARTINIQUE",
          "MARTINIQUE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MARTINIQUE"
      },
      {
        "from": [
          "HOTEL NEW WESTON",
          "NEW WESTON HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL NEW WESTON"
      },
      {
        "from": [
          "COPLEY-PLAZA HOTEL",
          "HOTEL COPLEY-PLAZA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COPLEY-PLAZA HOTEL"
      },
      {
        "from": [
          "HOTEL VICTORIA",
          "VICTORIA HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL VICTORIA"
      },
      {
        "from": [
          "HOTEL PONCE DE LEON",
          "PONCE DE LEON HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL PONCE DE LEON"
      },
      {
        "from": [
          "HOTEL PONTCHARTRAIN",
          "PONTCHARTRAIN HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL PONTCHARTRAIN"
      },
      {
        "from": [
          "HOTEL LEXINGTON",
          "LEXINGTON HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL LEXINGTON"
      },
      {
        "from": [
          "REVELSTOKE HOTEL",
          "HOTEL REVELSTOKE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "REVELSTOKE HOTEL"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA S.S. KASUGA",
          "NIPPON YUSEN KAISHA SS KASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA S.S. KASUGA"
      },
      {
        "from": [
          "PACIFIC MAIL S.S. CO.",
          "PACIFIC MAIL SS CO."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PACIFIC MAIL S.S. CO."
      },
      {
        "from": [
          "ROANOKE HOTEL",
          "HOTEL ROANOKE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROANOKE HOTEL"
      },
      {
        "from": [
          "DES INDES HOTEL",
          "HOTEL DES INDES"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DES INDES HOTEL"
      },
      {
        "from": [
          "BALTIMORE HOTEL",
          "HOTEL BALTIMORE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BALTIMORE HOTEL"
      },
      {
        "from": [
          "HOTEL WESTMINSTER",
          "WESTMINSTER HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL WESTMINSTER"
      },
      {
        "from": [
          "HOTEL STATLER",
          "STATLER HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL STATLER"
      },
      {
        "from": [
          "HOTEL VENDOME AND PROFILE HOUSE",
          "PROFILE HOUSE AND HOTEL VENDOME"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL VENDOME AND PROFILE HOUSE"
      },
      {
        "from": [
          "U.S.S. NEW YORK",
          "U.S.S. NEW YORK (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. NEW YORK"
      },
      {
        "from": [
          "GALLATIN HOTEL",
          "HOTEL GALLATIN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GALLATIN HOTEL"
      },
      {
        "from": [
          "HOFBRAU HAUS",
          "HOFBRÄU HAUS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOFBRAU HAUS"
      },
      {
        "from": [
          "NEW ENGLAND SHORTHAND REPORTERS' ASSOCIATION",
          "NEW ENGLAND SHORTHAND REPORTER'S ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW ENGLAND SHORTHAND REPORTERS' ASSOCIATION"
      }
    ],
    "description": "Mass edit cells in column location"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value",
    "edits": [
      {
        "from": [
          "THE MERCHANT'S CLUB OF CHICAGO",
          "THE MERCHANTS CLUB OF CHICAGO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE MERCHANT'S CLUB OF CHICAGO"
      },
      {
        "from": [
          "ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA",
          "THE ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE ASSOCIATED PIONEERS OF THE TERRITORIAL DAYS OF CALIFORNIA"
      }
    ],
    "description": "Mass edit cells in column location"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value",
    "edits": [
      {
        "from": [
          "",
          "?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      }
    ],
    "description": "Mass edit cells in column location"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value",
    "edits": [
      {
        "from": [
          "U.S.S. RALEIGH",
          "U.S.S.RALEIGH",
          "U.S.S.S.RALEIGH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. RALEIGH"
      },
      {
        "from": [
          "HOFBRAU HAUS",
          "HOFBRAUHAUS",
          "HOF BRAU HAUS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOFBRAU HAUS"
      },
      {
        "from": [
          "",
          "L"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": ""
      },
      {
        "from": [
          "UNITED AIR LINES",
          "UNITED AIRLINES"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNITED AIRLINES"
      },
      {
        "from": [
          "S.S. AMSTERDAM",
          "S.S.AMSTERDAM"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. AMSTERDAM"
      },
      {
        "from": [
          "A.W. DENNETT",
          "A.W.DENNETT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A.W. DENNETT"
      }
    ],
    "description": "Mass edit cells in column location"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value",
    "edits": [
      {
        "from": [
          "NORDEUTSCHER LLOYD",
          "NORDDEUTSCHER LLOYD"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORDEUTSCHER LLOYD"
      },
      {
        "from": [
          "THE ROUND TABLE",
          "THE ROUNDTABLE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE ROUND TABLE"
      },
      {
        "from": [
          "S.S. AMERICA",
          "S.S.AMERICA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. AMERICA"
      },
      {
        "from": [
          "ST. FRANCIS HOTEL",
          "ST.FRANCIS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. FRANCIS HOTEL"
      }
    ],
    "description": "Mass edit cells in column location"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "currency",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column currency using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "currency",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column currency using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "currency",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column currency using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "currency",
    "expression": "grel:value.split('(')[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column currency using expression grel:value.split('(')[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "currency",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column currency using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "currency_symbol",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column currency_symbol using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "currency_symbol",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column currency_symbol using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value",
    "edits": [
      {
        "from": [
          "NIPPON YUSEN KAISHA S.S.KOBE MARU",
          "NIPPON YUSEN KAISHA S.S. KOBE MARU",
          "NIPPPON YUSEN KAISHA S.S. KOBE MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA S.S.KOBE MARU"
      },
      {
        "from": [
          "SOCIETA LA PIEMONTESE",
          "SOCIETA'LA PIEMONTESE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOCIETA LA PIEMONTESE"
      },
      {
        "from": [
          "HOTEL DUPONT",
          "HOTEL DU PONT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL DUPONT"
      },
      {
        "from": [
          "A.H. MEYER RATHSKELLER",
          "A.H.MEYER RATHSKELLER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A.H. MEYER RATHSKELLER"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA S.S.KASUGA",
          "NIPPON YUSEN KAISHA S.S. KASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA S.S.KASUGA"
      },
      {
        "from": [
          "RED STAR LINE S.S.FRIESLAND",
          "RED STAR LINE SS FRIESLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RED STAR LINE S.S.FRIESLAND"
      },
      {
        "from": [
          "S. S. PRESIDENT WILSON",
          "S.S. PRESIDENT WILSON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S. S. PRESIDENT WILSON"
      },
      {
        "from": [
          "BELLEVUE - STRATFORD",
          "BELLEVUE-STRATFORD"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BELLEVUE-STRATFORD"
      },
      {
        "from": [
          "FLAT IRON RESAURANT AND CAFE",
          "FLATIRON RESAURANT AND CAFE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FLAT IRON RESAURANT AND CAFE"
      },
      {
        "from": [
          "COPLEY PLAZA",
          "COPLEY-PLAZA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COPLEY PLAZA"
      },
      {
        "from": [
          "CIE GLE TRANSATLANTIQUE",
          "CIE.GLE. TRANSATLANTIQUE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CIE GLE TRANSATLANTIQUE"
      },
      {
        "from": [
          "BELLEVUE STRATFORD HOTEL",
          "BELLEVUE-STRATFORD HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BELLEVUE STRATFORD HOTEL"
      },
      {
        "from": [
          "BUNDESHAUS RESTAURANT",
          "BUNDESHAUSRESTAURANT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BUNDESHAUS RESTAURANT"
      },
      {
        "from": [
          "FRIENDLY SONS OF ST. PATRICK",
          "FRIENDLY SONS OF ST.PATRICK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRIENDLY SONS OF ST. PATRICK"
      },
      {
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. S.S. ALBERTA",
          "CANADIAN PACIFIC RAILWAY CO. S.S.ALBERTA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CANADIAN PACIFIC RAILWAY CO. S.S. ALBERTA"
      },
      {
        "from": [
          "CAFÉ DES BEAUX ARTS",
          "CAFÉ DES BEAUX-ARTS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAFÉ DES BEAUX ARTS"
      },
      {
        "from": [
          "RED STAR LINE S.S. SOUTHWARK",
          "RED STAR LINE S.S.SOUTHWARK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RED STAR LINE S.S. SOUTHWARK"
      },
      {
        "from": [
          "U.S.S. SAN FRANCISCO",
          "U.S.S.SAN FRANCISCO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. SAN FRANCISCO"
      },
      {
        "from": [
          "ST. GEORGE'S SOCIETY OF NEW YORK",
          "ST.GEORGE'S SOCIETY OF NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. GEORGE'S SOCIETY OF NEW YORK"
      },
      {
        "from": [
          "MENZIE'S HOTEL",
          "MENZIES'HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENZIE'S HOTEL"
      },
      {
        "from": [
          "BUSINESS MEN'S LEAGUE OF ST. LOUIS",
          "BUSINESS MEN'S LEAGUE OF ST.LOUIS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BUSINESS MEN'S LEAGUE OF ST. LOUIS"
      },
      {
        "from": [
          "PIG'N WHISTLE",
          "PIG N'WHISTLE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PIG'N WHISTLE"
      },
      {
        "from": [
          "U. S. S. WYOMING",
          "U.S.S. WYOMING"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. WYOMING"
      },
      {
        "from": [
          "THE SOUTHERN BERKSHIRE SOCIETY OF NEW YORK",
          "SOUTHERN BERKSHIRE SOCIETY OF NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE SOUTHERN BERKSHIRE SOCIETY OF NEW YORK"
      },
      {
        "from": [
          "ROGERS'RESTAURANT",
          "ROGER'S RESTAURANT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROGER'S RESTAURANT"
      },
      {
        "from": [
          "CROMWELL STEAMSHIP COMPANY",
          "CROMWELLL STEAMSHIP COMPANY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CROMWELL STEAMSHIP COMPANY"
      },
      {
        "from": [
          "RED STAR LINE SS WESTERNLAND",
          "RED STAR LINE S.S.WESTERNLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RED STAR LINE S.S.WESTERNLAND"
      },
      {
        "from": [
          "O.D.",
          "O. D."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "O.D."
      },
      {
        "from": [
          "B&O BLUE LINE",
          "B.& O. BLUE LINE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "B&O BLUE LINE"
      },
      {
        "from": [
          "ST. ANDREW'S SOCIETY OF THE STATE OF NEW YORK",
          "ST.ANDREWS SOCIETY OF THE STATE OF NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. ANDREW'S SOCIETY OF THE STATE OF NEW YORK"
      },
      {
        "from": [
          "U.S.M.S ST. PAUL",
          "U.S.M.S.ST. PAUL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S ST. PAUL"
      },
      {
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. S.S.ATHABASCA",
          "CANADIAN PACIFIC RAILWAY CO. S.S. ATHABASCA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CANADIAN PACIFIC RAILWAY CO. S.S.ATHABASCA"
      },
      {
        "from": [
          "HOTEL LA SALLE",
          "HOTEL LASALLE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL LA SALLE"
      },
      {
        "from": [
          "SMITH & MCNELL'S",
          "SMITH & MC NELLS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SMITH & MCNELL'S"
      },
      {
        "from": [
          "HOTEL MCALPIN",
          "HOTEL MC ALPIN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MCALPIN"
      },
      {
        "from": [
          "COPLEY-PLAZA HOTEL",
          "COPLEY PLAZA HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COPLEY PLAZA HOTEL"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA S.S.NASUGA",
          "NIPPON YUSEN KAISHA S.S. NASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA S.S.NASUGA"
      },
      {
        "from": [
          "U. S. S. NEW YORK",
          "U.S.S. NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. NEW YORK"
      },
      {
        "from": [
          "U. S. S. FLORIDA",
          "U.S.S. FLORIDA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. FLORIDA"
      },
      {
        "from": [
          "PACIFIC MAIL STEAMSHIP CO./TRANS PACIFIC LINE",
          "PACIFIC MAIL STEAMSHIP CO. TRANS PACIFIC LINE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PACIFIC MAIL STEAMSHIP CO./TRANS PACIFIC LINE"
      },
      {
        "from": [
          "FLAT IRON RESTAURANT & CAFE",
          "FLATIRON RESTAURANT & CAFE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FLAT IRON RESTAURANT & CAFE"
      },
      {
        "from": [
          "U.S.M.S.PHILADELPHIA",
          "USMS PHILADELPHIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S.PHILADELPHIA"
      },
      {
        "from": [
          "DINNER MENU, S. S. VADERLAND, MARCH 18TH, 1910.",
          "DINNER MENU, S.S. VADERLAND, MARCH 18TH, 1910."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER MENU, S. S. VADERLAND, MARCH 18TH, 1910."
      },
      {
        "from": [
          "RITZ CARLTON HOTEL",
          "RITZ-CARLTON HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RITZ CARLTON HOTEL"
      },
      {
        "from": [
          "WALDORF ASTORIA",
          "WALDORF-ASTORIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WALDORF ASTORIA"
      },
      {
        "from": [
          "COMMERCIAL CLUB OF ST. LOUIS",
          "COMMERCIAL CLUB OF ST.LOUIS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COMMERCIAL CLUB OF ST. LOUIS"
      },
      {
        "from": [
          "THE COBBLE STONES",
          "THE COBBLESTONES"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE COBBLE STONES"
      },
      {
        "from": [
          "THE RENDEZ VOUS",
          "THE RENDEZ-VOUS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE RENDEZ VOUS"
      },
      {
        "from": [
          "S.S. UNITED STATES",
          "S. S. UNITED STATES"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. UNITED STATES"
      },
      {
        "from": [
          "RITZ CARLTON",
          "RITZ-CARLTON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RITZ CARLTON"
      },
      {
        "from": [
          "ST. LOUIS CLUB",
          "ST.LOUIS CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. LOUIS CLUB"
      },
      {
        "from": [
          "FLAT IRON RESTAURANT",
          "FLATIRON RESTAURANT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FLAT IRON RESTAURANT"
      },
      {
        "from": [
          "DOWN TOWN CLUB",
          "DOWNTOWN CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DOWN TOWN CLUB"
      },
      {
        "from": [
          "RED STAR LINE ANTWERPEN NY",
          "RED STAR LINE ANTWERPEN.NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RED STAR LINE ANTWERPEN NY"
      },
      {
        "from": [
          "R.M.S. OCEANIC",
          "R.M.S.OCEANIC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. OCEANIC"
      },
      {
        "from": [
          "CUNARD STEAM SHIP COMPANY LIMITED",
          "CUNARD STEAMSHIP COMPANY LIMITED"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CUNARD STEAM SHIP COMPANY LIMITED"
      },
      {
        "from": [
          "SMITH & MC NELL",
          "SMITH & MCNELL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SMITH & MC NELL"
      },
      {
        "from": [
          "CHICAGO STATIONERS ASSOCIATION",
          "CHICAGOS STATIONERS ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHICAGO STATIONERS ASSOCIATION"
      },
      {
        "from": [
          "IMPERIAL YACHT CLUB OF ST. PETERSBURG",
          "IMPERIAL YACHT CLUB OF ST.PETERSBURG"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "IMPERIAL YACHT CLUB OF ST. PETERSBURG"
      }
    ],
    "description": "Mass edit cells in column location"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value",
    "edits": [
      {
        "from": [
          "NORDDEUTSCHER LLOYD, BREMEN",
          "NORDEUTSCHER LLOYD BREMEN",
          "NORDDEUTSCHERRR LLOYD BREMEN",
          "NORDDEUTSCHER LLOYD BREMAN",
          "NORDEUSCHER LLOYD BREMEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORDDEUTSCHER LLOYD, BREMEN"
      },
      {
        "from": [
          "HAMBURG AMERIKA LINIE",
          "HAMBURG AMERICA LINIE",
          "HAMBURG AMERIKA LINE",
          "HAMBURG AMERICA LINE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HAMBURG AMERIKA LINIE"
      },
      {
        "from": [
          "COMPAGNIE GENERAL TRANSATLANTIQUE",
          "COMPAGNIE GÉNÉRALE TRANSATLANTIQUE",
          "COMPAGNIE GENERALE TRANSATLANTIQUE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COMPAGNIE GÉNÉRALE TRANSATLANTIQUE"
      },
      {
        "from": [
          "OCEANIC STEAMSHIP CO.",
          "OCEAN STEAMSHIP CO.",
          "OCEAN STEAMSHOP CO."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEANIC STEAMSHIP CO."
      },
      {
        "from": [
          "S.S. NIEUW AMSTERDAM",
          "S.S NEW AMSTERDAM",
          "S.S. NIEW AMSTERDAM"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. NIEUW AMSTERDAM"
      },
      {
        "from": [
          "CRAFTSMAN CLUB",
          "CRAFTSMAN'S CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CRAFTSMAN'S CLUB"
      },
      {
        "from": [
          "U.S.A.(ARMY) TRANSPORT WARREN",
          "U.S.ARMY TRANSPORT WARREN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.A.(ARMY) TRANSPORT WARREN"
      },
      {
        "from": [
          "BOSTON MERCHANTS ASSOCIATION",
          "BOSTON MERCHANTS ASSOCIATIONI"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOSTON MERCHANTS ASSOCIATION"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA S.S.KOBE MARU",
          "NIPPON YUSEN KAISHA S.S.KOBI MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA S.S.KOBE MARU"
      },
      {
        "from": [
          "GRISWOLD HOUSE",
          "GRISWALD HOUSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRISWOLD HOUSE"
      },
      {
        "from": [
          "CORTLAND",
          "CORTLANDT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CORTLAND"
      },
      {
        "from": [
          "MANHASSET CLUB",
          "MANHASSETT CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MANHASSET CLUB"
      },
      {
        "from": [
          "KING UMBERTO AND QUEEN MARGHARITA",
          "KING UMBERTO AND QUEEN MARGHERITA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KING UMBERTO AND QUEEN MARGHARITA"
      },
      {
        "from": [
          "HOTEL MEN'S MUTUAL BENEFIT AASOCIATION",
          "HOTEL MEN'S MUTUAL BENEFIT ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MEN'S MUTUAL BENEFIT ASSOCIATION"
      },
      {
        "from": [
          "ROYAL ALEXANDRIA HOTEL",
          "ROYAL ALEXANDRA HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROYAL ALEXANDRIA HOTEL"
      },
      {
        "from": [
          "COLUMBIA HOTEL",
          "COLOMBI HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COLUMBIA HOTEL"
      },
      {
        "from": [
          "THE CORTLAND",
          "THE CORTLANDT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE CORTLAND"
      },
      {
        "from": [
          "THE LOTOS CLUB",
          "THE LOTUS CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE LOTOS CLUB"
      },
      {
        "from": [
          "NORDDEUTSCHER LLOYD BREMEN AMERICA",
          "NORDDEUTSCHER LLOYD BREMEN AMERIKA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORDDEUTSCHER LLOYD BREMEN AMERICA"
      },
      {
        "from": [
          "GARDNER & SMITH",
          "GERDNER & SMITH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GARDNER & SMITH"
      },
      {
        "from": [
          "HEALEY'S",
          "HEALY'S"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HEALEY'S"
      },
      {
        "from": [
          "HUETHER & STEFFENS",
          "HEUTHER & STEFFENS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HUETHER & STEFFENS"
      },
      {
        "from": [
          "YOUNG MEN'S CHRISTIAN ASSOCIATION",
          "YOUNG MAN'S CHRISTIAN ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "YOUNG MEN'S CHRISTIAN ASSOCIATION"
      },
      {
        "from": [
          "QUEEN ELIZABETH 2",
          "QUEEN ELIZABETH II"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "QUEEN ELIZABETH II"
      },
      {
        "from": [
          "ROYAL POINCIANA",
          "ROYAL PONCIANA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROYAL POINCIANA"
      },
      {
        "from": [
          "PHILILEXIAN SOCIETY OF COLUMBIA UNIVERSITY",
          "PHILOLEXIAN SOCIETY OF COLUMBIA UNIVERSITY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PHILOLEXIAN SOCIETY OF COLUMBIA UNIVERSITY"
      }
    ],
    "description": "Mass edit cells in column location"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "from": [
          "SOC;",
          "SOC",
          "[SOC?];",
          "SOC(?);",
          "SOC.",
          "[SOC]",
          "SOC?;",
          "(SOC);",
          "(SOC?)",
          "(SOC?);",
          "SOC (?);",
          "SOC(?):",
          "[?SOC];",
          "[SOC;]",
          "[SOC?]",
          "[SOC];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOC"
      },
      {
        "from": [
          "GOVT;",
          "GOVT(?);",
          "GOV'T;",
          "[GOVT?];",
          "GOV'T",
          "GOV'T.",
          "GOVT",
          "GOVT?;",
          "[GOVT?]",
          "[GOVT];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GOVT"
      },
      {
        "from": [
          "COM",
          "COM.",
          "[COM]",
          "(COM?);",
          "COM(?);",
          "COM.;",
          "[COM?];",
          "[COM}"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COM"
      },
      {
        "from": [
          "PROF;",
          "PROF",
          "PROF(?);",
          "PROF.",
          "PROF?;",
          "[PROF?];",
          "[PROF]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PROF"
      },
      {
        "from": [
          "EDUC;",
          "EDUC",
          "EDUC (?);",
          "[EDUC];",
          "(EDUC);",
          "[EDUC?];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EDUC"
      },
      {
        "from": [
          "POL;",
          "POL",
          "[POL]",
          "POL.;",
          "[POL?);",
          "[POL?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "POL"
      },
      {
        "from": [
          "NAV;",
          "NAV; (?)",
          "NAV.",
          "NAV",
          "NAV(?);"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NAV"
      },
      {
        "from": [
          "MIL;",
          "MIL",
          "MIL (?);",
          "MIL.",
          "[MIL?];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MIL"
      },
      {
        "from": [
          "OTHER;(PRIVATE);",
          "OTHER,(PRIVATE);",
          "OTHER,PRIVATE",
          "OTHER;PRIVATE;",
          "[OTHER;PRIVATE];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER,PRIVATE"
      },
      {
        "from": [
          "PATR;",
          "PATR",
          "PATR(?);",
          "PATR."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PATR"
      },
      {
        "from": [
          "COMM",
          "COMM.",
          "COMM;",
          "COMM;."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COMM"
      },
      {
        "from": [
          "OTHER (PRIVATE PARTY);",
          "OTHER (PRIVATE PARTY)",
          "OTHER (PRIVATE PARTY?)",
          "OTHER (PRIVATE PARTY?);"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (PRIVATE PARTY)"
      },
      {
        "from": [
          "RELIG;",
          "RELIG",
          "RELIG?;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RELIG"
      },
      {
        "from": [
          "OTHER (PRIVATE CLUB)",
          "OTHER (PRIVATE CLUB);",
          "OTHER [PRIVATE CLUB?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (PRIVATE CLUB)"
      },
      {
        "from": [
          "GOV;",
          "GOV.",
          "[GOV];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GOV"
      },
      {
        "from": [
          "NAVAL",
          "NAVAL;",
          "[NAVAL]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NAVAL"
      },
      {
        "from": [
          "SOCIAL",
          "SOCIAL;",
          "(SOCIAL?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOCIAL"
      },
      {
        "from": [
          "?",
          "[?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "?"
      },
      {
        "from": [
          "OTHER (CLUB);",
          "OTHER (CLUB)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (CLUB)"
      },
      {
        "from": [
          "SOCIAL CLUB",
          "SOCIAL CLUB?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOCIAL CLUB"
      },
      {
        "from": [
          "OTHER",
          "OTHER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER"
      },
      {
        "from": [
          "OTHER;(PERSONAL);",
          "OTHER(PERSONAL);"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER(PERSONAL)"
      },
      {
        "from": [
          "OTHER (PRIVATE);",
          "OTHER [PRIVATE];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (PRIVATE)"
      },
      {
        "from": [
          "MILITARY",
          "[MILITARY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MILITARY"
      },
      {
        "from": [
          "PAT;",
          "PAT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PAT"
      },
      {
        "from": [
          "(EDUCATIONAL)",
          "EDUCATIONAL;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EDUCATIONAL"
      },
      {
        "from": [
          "PATRIOTIC",
          "PATRIOTIC?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PATRIOTIC"
      },
      {
        "from": [
          "PRIVATE;",
          "(PRIVATE);"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PRIVATE"
      },
      {
        "from": [
          "PRIVATE PARTY",
          "PRIVATE PARTY;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PRIVATE PARTY"
      }
    ],
    "description": "Mass edit cells in column venue"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "from": [
          "SOCIAL CLUB",
          "SOCIAL;(CLUB);"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOCIAL CLUB"
      },
      {
        "from": [
          "FOREIGN",
          "FOREIGN;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOREIGN"
      },
      {
        "from": [
          "OTHER,PRIVATE",
          "OTHER (PRIVATE)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (PRIVATE)"
      }
    ],
    "description": "Mass edit cells in column venue"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "from": [
          "U. S. S. NEW YORK",
          "U.S.S. NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. NEW YORK"
      },
      {
        "from": [
          "U. S. S. FLORIDA",
          "U.S.S. FLORIDA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. FLORIDA"
      },
      {
        "from": [
          "A.H. MEYER RATHSKELLER",
          "A.H.MEYER RATHSKELLER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A.H. MEYER RATHSKELLER"
      },
      {
        "from": [
          "CAFÉ DES BEAUX ARTS",
          "CAFÉ DES BEAUX-ARTS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAFÉ DES BEAUX ARTS"
      },
      {
        "from": [
          "BELLEVUE - STRATFORD",
          "BELLEVUE-STRATFORD"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BELLEVUE-STRATFORD"
      },
      {
        "from": [
          "U. S. S. WYOMING",
          "U.S.S. WYOMING"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. WYOMING"
      },
      {
        "from": [
          "RITZ CARLTON HOTEL",
          "RITZ-CARLTON HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RITZ CARLTON HOTEL"
      },
      {
        "from": [
          "RITZ CARLTON",
          "RITZ-CARLTON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RITZ CARLTON"
      },
      {
        "from": [
          "WALDORF ASTORIA",
          "WALDORF-ASTORIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WALDORF ASTORIA"
      },
      {
        "from": [
          "COPLEY PLAZA",
          "COPLEY-PLAZA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COPLEY PLAZA"
      },
      {
        "from": [
          "HOTEL LA SALLE",
          "HOTEL LASALLE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL LA SALLE"
      }
    ],
    "description": "Mass edit cells in column name"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "from": [
          "WIEHL & WIDMANN",
          "WIEHL & WIDMAN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WIEHL & WIDMANN"
      },
      {
        "from": [
          "YOUNG MAN'S CHRISTIAN ASSOCIATION",
          "YOUNG MEN'S CHRISTIAN ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "YOUNG MEN'S CHRISTIAN ASSOCIATION"
      },
      {
        "from": [
          "THE BELLEVUE-STRATFORD",
          "THE BELLVUE-STRATFORD"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE BELLEVUE-STRATFORD"
      },
      {
        "from": [
          "CORTLAND",
          "CORTLANDT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CORTLAND"
      },
      {
        "from": [
          "HEALEY'S",
          "HEALY'S"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HEALEY'S"
      },
      {
        "from": [
          "THE CORTLAND",
          "THE CORTLANDT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE CORTLAND"
      },
      {
        "from": [
          "HOTEL BILTMORE",
          "HOTEL BALTIMORE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL BILTMORE"
      },
      {
        "from": [
          "HOFBRÄU HAUS",
          "HOF BRAU HAUS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOFBRÄU HAUS"
      },
      {
        "from": [
          "HUETHER & STEFFENS",
          "HEUTHER & STEFFENS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HUETHER & STEFFENS"
      },
      {
        "from": [
          "JOE'S RESTAURANT",
          "JEO'S RESTAURANT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "JOE'S RESTAURANT"
      },
      {
        "from": [
          "HOTEL BREEVORT",
          "HOTEL BREVOORT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL BREEVORT"
      }
    ],
    "description": "Mass edit cells in column name"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value",
    "edits": [
      {
        "from": [
          "DINNER/DINER",
          "DINER/DINNER",
          "DINNER, DINER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER/DINER"
      },
      {
        "from": [
          "LUNCH & DINNER",
          "LUNCH-DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCH & DINNER"
      },
      {
        "from": [
          "DAILY MENU, LUNCHEON",
          "DAILY MENU,LUNCHEON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY MENU, LUNCHEON"
      },
      {
        "from": [
          "WEDDING DINNER",
          "(WEDDING)DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WEDDING DINNER"
      },
      {
        "from": [
          "BREAKFAST - SECOND CABIN",
          "BREAKFAST-SECOND CABIN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BREAKFAST-SECOND CABIN"
      },
      {
        "from": [
          "BREAKFAST,LUNCH & DINNER",
          "BREAKFAST; LUNCH; DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BREAKFAST,LUNCH & DINNER"
      },
      {
        "from": [
          "DAILY MENU, SUPPER",
          "DAILY MENU,SUPPER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY MENU, SUPPER"
      },
      {
        "from": [
          "MITTAGESSEN - DINNER",
          "MITTAGESSEN/DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MITTAGESSEN/DINNER"
      },
      {
        "from": [
          "DINNER",
          "DINNNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER"
      },
      {
        "from": [
          "DEJEUNER FOURCHETTE/LUNCHEON",
          "DEJEUNER FOURCHETTE/ LUNCHEON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DEJEUNER FOURCHETTE/LUNCHEON"
      },
      {
        "from": [
          "(DINNER DANCE)",
          "DINNER-DANCE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER-DANCE"
      },
      {
        "from": [
          "DINNER - SECOND CABIN",
          "DINNER,SECOND CABIN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER,SECOND CABIN"
      },
      {
        "from": [
          "FOURTH OF JULY DINNER",
          "FOURTH OFJULY DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOURTH OF JULY DINNER"
      },
      {
        "from": [
          "DAILY MENU, DINNER",
          "DAILY MENU,DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY MENU, DINNER"
      }
    ],
    "description": "Mass edit cells in column event"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value",
    "edits": [
      {
        "from": [
          "OTHER (ANNUAL EVENT)",
          "OTHER,ANNUAL EVENT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (ANNUAL EVENT)"
      },
      {
        "from": [
          "DAILY MENU;",
          "DAILYMENU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY MENU;"
      },
      {
        "from": [
          "OTHER (COMMEMORATION);",
          "OTHER,COMMEMORATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (COMMEMORATION);"
      },
      {
        "from": [
          "OTHER (ANNUAL BANQUET);",
          "OTHER,ANNUAL BANQUET"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (ANNUAL BANQUET);"
      },
      {
        "from": [
          "OTHER (ANNUAL MEETING);",
          "OTHER,ANNUAL MEETING"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (ANNUAL MEETING);"
      },
      {
        "from": [
          "RELIG. HOLIDAY",
          "RELIG.HOLIDAY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RELIG. HOLIDAY"
      },
      {
        "from": [
          "OTHER (ANNUAL DINNER);",
          "OTHER,,ANNUAL DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (ANNUAL DINNER);"
      },
      {
        "from": [
          "TRIP OF PRES. MCKINLEY, HIS CABINET & GUESTS;",
          "TRIP OF PRES. MCKINLEY,HIS CABINET & GUESTS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TRIP OF PRES. MCKINLEY, HIS CABINET & GUESTS;"
      }
    ],
    "description": "Mass edit cells in column occasion"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value",
    "edits": [
      {
        "from": [
          "(COMPL;FOR MAHARAJA SCINDIYA)",
          "COMPL; FOR MAHARAJA SCINDIYA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COMPL; FOR MAHARAJA SCINDIYA"
      }
    ],
    "description": "Mass edit cells in column occasion"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value",
    "edits": [
      {
        "from": [
          "NIPPON YUSEN KAISHA S.S.KASUGA",
          "NIPPON YUSEN KAISA S.S.KASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA S.S.KASUGA"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA",
          "NIPPON YUSEN KAISA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA"
      },
      {
        "from": [
          "WIEHL & WIDMANN",
          "WIEHL & WIDMAN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WIEHL & WIDMANN"
      },
      {
        "from": [
          "ASSOCIATED STUDENTS OF CARROLL BREWSTER",
          "ASSOCIATED STUDENTS OF F. CARROLL BREWSTER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ASSOCIATED STUDENTS OF F. CARROLL BREWSTER"
      },
      {
        "from": [
          "COLONNADE RESTAURANT",
          "COLONADE RESTAURANT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COLONNADE RESTAURANT"
      },
      {
        "from": [
          "JANSEN'S RESTAURANT",
          "JANSSEN'S RESTAURANT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "JANSEN'S RESTAURANT"
      }
    ],
    "description": "Mass edit cells in column location"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value",
    "edits": [
      {
        "from": [
          "WISCONSIN BANKERS ASSOCIATION",
          "WISCONSIN BANKERS' ASOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WISCONSIN BANKERS ASSOCIATION"
      },
      {
        "from": [
          "PACIFIC MAIL STEAMSHIP COMPANY",
          "PACIFIC MAIL STEAMSHP COMPANY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PACIFIC MAIL STEAMSHIP COMPANY"
      },
      {
        "from": [
          "THE BELLEVUE-STRATFORD",
          "THE BELLVUE-STRATFORD"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE BELLEVUE-STRATFORD"
      },
      {
        "from": [
          "PULLMAN DINING CAR SERVICE THE PRESIDENT",
          "PULLMAN DINING CAR SERFVICE THE PRESIDENT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PULLMAN DINING CAR SERVICE THE PRESIDENT"
      },
      {
        "from": [
          "JOE'S RESTAURANT",
          "JEO'S RESTAURANT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "JOE'S RESTAURANT"
      },
      {
        "from": [
          "POCONO MOUNTAIN HOUSE",
          "POCANO MOUNTAIN HOUSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "POCONO MOUNTAIN HOUSE"
      },
      {
        "from": [
          "HAMBURG AMERIKA LINIE STEAMER FURST BISMARCK",
          "HANBURG AMERIKA LINIE STEAMER FURST BISMARCK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HAMBURG AMERIKA LINIE STEAMER FURST BISMARCK"
      },
      {
        "from": [
          "HOTEL BREVOORT",
          "HOTEL BREEVORT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL BREVOORT"
      },
      {
        "from": [
          "NEW ENGLAND SOCIETY OF PENNSYLVANIA",
          "NEW ENGLAND SOCIETY OF PENNSYLVNIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW ENGLAND SOCIETY OF PENNSYLVANIA"
      },
      {
        "from": [
          "RED STAR LINE ANTWERPEN NY",
          "RED STAR LINE ANTWERPEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RED STAR LINE ANTWERPEN NY"
      },
      {
        "from": [
          "NORDDEUTCHER LLOYD BREMEN",
          "NORDEUTCHER LLOYD, BREMEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORDDEUTCHER LLOYD BREMEN"
      }
    ],
    "description": "Mass edit cells in column location"
  }
]

[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "id",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column id using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "menu_page_id",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column menu_page_id using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "price",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column price using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "high_price",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column high_price using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "dish_id",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column dish_id using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "created_at",
    "expression": "value.toDate()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column created_at using expression value.toDate()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "created_at",
    "expression": "grel:value.split('UTC')[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column created_at using expression grel:value.split('UTC')[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "updated_at",
    "expression": "grel:value.split('UTC')[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column updated_at using expression grel:value.split('UTC')[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "xpos",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column xpos using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ypos",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ypos using expression value.toNumber()"
  }
]

[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "id",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column id using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "menu_id",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column menu_id using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "page_number",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column page_number using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "image_id",
    "expression": "grel:value.match(/(\\w+_)*(\\d+)/)[1]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column image_id using expression grel:value.match(/(\\w+_)*(\\d+)/)[1]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "image_id",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column image_id using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "full_height",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column full_height using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "full_width",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column full_width using expression value.toNumber()"
  }
]
